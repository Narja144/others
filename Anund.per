; The Horde version 2.26
; An Artificial Intelligence Script written by Archon 2009-2013

; Settings: (preferred settings)
; Game Version: 1.0c, UP, AoFE
; Game Type: Any (RM and PIDM)
; Location: Any [doesn't play maps where transports of villagers is required (e.g. Migration); doesn't play 'nothing' maps, requires ai_info_map_type BLACK_FOREST 0 1 0 to detect MICHI]
; Map Size: Any
; Teams: Yes
; Resources: Any (standard)
; Difficulty: Any (hard)
; Population: Any (200)
; Starting Age: Any (dark age or PI)
; Victory: Any (conquest)
; All Techs: No
; Civilisation: Any
; Get the latest version at: http://forums.aiscripters.com/viewtopic.php?f=8&t=2176


;List of taunts it reacts to:
;3 - 6: Gives resources away if it has enough.
;31 - Attack an Enemy: If requested by an AI, it targets player stored by sn-target-player-number.
;33 - Stop slinging resources. If slinging is requested early and is immediately canceled it may mess up the strategy.
;38 - Sling Resources. Human and UP only (as there are some AI that send random taunts), stops any unit production except for villagers.
;222 - Help Allies. If requested by an AI, it targets player stored in goal 82.
;230 - Mush (if aztec, byzantine, japanese, saracens, spanish or teutons civ); like the rest it can be sent by any player for testing purposes
;249 - Chats current resource amount
;250 - Chats current strategy


;Reuse obsolete strategic numbers that have no effect.
(defconst sn-current-age 193);tracks our current age
(defconst sn-trebuchet-count 172); counts all trebuchets (unpacked and packed)
(defconst sn-military-level 190); compares our military with enemy
(defconst sn-resource-control 191); 0=spend res free, 1=navy, 2=research only; > 2 specific items
(defconst sn-infantry-threat 53)
(defconst sn-archer-threat 64)
(defconst sn-cavalry-threat 65)

; more unused SN: (taken from marathon's list on aiscripters.com)
; 39, 45, 66, 85, 94, 121, 147, 150, 151, 152, 161, 170, 171, 172, 173, 174, 180, 181, 182, 183, 186, 187, 190, 191, 192, 193
; 205-214, 220, 224

;Goals
(defconst increase-town-size-goal 1); this increases town size when needed, 0=no increase, !=0 increase
(defconst attack-goal 2)
(defconst strategy-goal 3)
(defconst unit-goal 4)
(defconst train-civ-goal 5);1=train villagers, !=1 no villagers
(defconst control-goal 6); 6 = allow to be shot, 7 = shot
(defconst anti-cavalry-threat-goal 7)
(defconst monk-threat-goal 8)
(defconst enemy-goal 9); keep track of what our foe is doing
(defconst farm-goal 10); enable/disable farming
(defconst under-attack-goal 11); town under attack or just a little harass?
(defconst enemy-boats-goal 12)
(defconst ffa-game-goal 13)
(defconst need-loom-goal 14)
(defconst need-extra-farms-goal 14); re-use same number
(defconst escrow-purpose-goal 15); keeps track on what we use our escrow
(defconst spread-military-goal 16); spread military every couple of minutes to prevent villagers stuck
(defconst uu-up-goal 17); use escrow to upgrade uu
(defconst hostilities-goal 18); set this flag when we're attacked or attacking - avoid rule too long error
(defconst ranged-unit-type-goal 19);shows the ranged unit we use
(defconst retreat-now-goal 20); use to retreat with UP, condition: 1=always, 2=when attacking, 3=attack conditions false
(defconst housing-goal 21); used to build multiple houses with UP
(defconst anti-monk-threat-goal 22)
(defconst enemy-sighted-goal 23); when enemy activities detected, split the attack groups
(defconst attack-status-goal 24); indicates if we stop or regroup the attack
(defconst forward-threat-goal 25); enemy tower rush threat
(defconst enemy-fortifications-goal 26)
(defconst restart-attack-goal 27); restarts TSA in team games if it was reduced to place a building
(defconst save-wood-goal 28)
(defconst meso-enemy-goal 29)
(defconst nr-map-goal 30); don't flush on easily wall-able maps vs humans
(defconst micro-goal 41); 41+ are up only
(defconst boar-hunting-goal 42)
(defconst math-goal 43); math goal, or temporary store values
(defconst math-goal2 44)
(defconst math-goal3 45)
(defconst position-goal 46); detect if we're pocket/flank player
(defconst raid-goal 47); raiding weak players eco.
(defconst closest-enemy-goal 48); stores player number of nearest enemy
(defconst threat-time-goal 49); stores time in miliseconds we were last attacked
(defconst threat-player-goal 50); stores player number of the attacker
(defconst threat-source-goal 51); unit class of the last enemy attacker
(defconst threat-target-goal 52); unit class of the our last attacked unit
(defconst winning-player-goal 53); player number of enemy winning by specifal victory condition
(defconst victory-type-goal 54); winning type
(defconst victory-time-goal 55); time left
(defconst is-zero-goal 56); is always zero for some UP stuff
(defconst is-one-goal 57); is always one for some UP stuff
(defconst dark-build-order-goal 58)
(defconst forward-goal 59); tracks the player number we have forward buildings against
(defconst aofe-game-goal 60); set to 1 for forgotten empires expansion
(defconst attacking-enemy-goal 82); stores player number of the attacker; shared with Barbarian
(defconst team-coordination-goal 392); shared with Barbarian

;SN/Goal Values
(defconst dark 78)
(defconst df-transit 79)
(defconst feudal 80)
(defconst fc-transit 81)
(defconst castle 82)
(defconst ci-transit 83)
(defconst imperial 84)
(defconst flush 200)
(defconst rush 201)
(defconst boom 202)
(defconst fast-imp 203)
(defconst sling 204)
(defconst mix 1)
(defconst ss 2)
(defconst belated-flush-defense 5)
(defconst aggressive-rush 6)
(defconst shot 7)
(defconst navy 4000)
(defconst start 1)
(defconst stop 0)
(defconst regroup 2)
(defconst tactical-retreat 3)
(defconst navy-regroup 4)
(defconst TSA-set 5)
(defconst guard-trebuchet 6)
(defconst done -1)
(defconst wait 0)
(defconst check 1)
(defconst undeterminated -1)
(defconst flank 1)
(defconst pocket 2)

;Timers
(defconst increase-town-size-timer 1)
(defconst reset-town-size-timer 2)
(defconst scouting-timer 3)
(defconst attack-timer 4)
(defconst spread-military-timer 5)
(defconst regroup-timer 6)
(defconst under-attack-timer 7)
(defconst second-mill-timer 8)
(defconst civ-explore-timer 8)
(defconst lumber-timer 8)
(defconst one-minute-timer 9)
(defconst tribute-timer 10)
(defconst micro-timer 11); rest is up only, as in 1.0c only 10 timers are available
(defconst navy-attack-timer 12); don't spam attack or we can't retreat boats from fortifications
(defconst help-ally-timer 13); indicated when we sent help to ally
(defconst villager-timer 14); timer for forcedrop to continuously train villager
(defconst retreat-timer 15); timer to avoid looping retreat unit commands
(defconst hunting-timer 16)
(defconst garrison-timer 17)
(defconst disable-defend-groups-timer 18)

;Unit IDs
(defconst male-hunter 122)
(defconst female-hunter 216)
(defconst male-forager 120)
(defconst female-forager 354)
(defconst male-shepherd 592)
(defconst female-shepherd 590)
(defconst female-gold-miner 579)
(defconst male-gold-miner 581)
(defconst unpacked-trebuchet 42)
(defconst rax-husky-line 759)
(defconst forage-bush 59)
(defconst gold-mine 66)
(defconst stone-mine 102)
(defconst relic 285)
(defconst revealer 112)
(defconst flare 274)
(defconst tc-arrow 54)
(defconst watch-tower-arrow 504)
(defconst castle-arrow 379)
(defconst castle-arrow-chemistry 412)
(defconst ri-anarchy 16)
(defconst ri-perfusion 126)
(defconst ri-herbal-medicine 165)
(defconst ranged-units 900)
(defconst buildings 903)
(defconst civilians 904)
(defconst sea-fish 905)
(defconst infantry-units 906)
(defconst cavalry-units 912)
(defconst siege-units 913)
(defconst tree 915)
(defconst religious-units 918)
(defconst warships 922)
(defconst shore-fish 933)
(defconst cavalry-archer-units 936)
(defconst gunpowder-units 944)
(defconst sheep 958)
(defconst hunter 976)
(defconst food-gatherer 978)
(defconst ri-bloodlines 177)
(defconst ri-supremacy 172)
(defconst ri-heresy 173)
(defconst ri-theocracy 174)
(defconst ri-thumb-ring 175)
(defconst ri-parthian-tactics 176)
(defconst ri-halberdier 181)
(defconst ri-hussar 185)
(defconst ri-careening 259)
(defconst ri-shipwright 251)
(defconst ri-dry-dock 260)
(defconst ri-hoardings 248)
(defconst ri-bearded-axe 83)
(defconst ri-siege-engineers 247)
(defconst ri-town-patrol 280)
(defconst ri-arson 328)
(defconst ri-city-rights 325)
(defconst ri-city-councils 326)
(defconst ri-municipal-storehouses 327)
(defconst ri-elite-mangudai 303)
(defconst ri-elite-woader 298)
(defconst ri-elite-janisary 296)
(defconst ri-elite-mameluke 294)
(defconst ri-elite-hathin 292)
(defconst ri-elite-samurai 288)
(defconst ri-elite-huskarl 168)
(defconst ri-elite-teuton 318)
(defconst ri-elite-hurlat 310)
(defconst ri-elite-chukon 308)
(defconst ri-elite-cataphract 274)
(defconst ri-elite-skytter 272)
(defconst ri-eagle-warrior 178)
(defconst ri-elite-eagle 179)
(defconst ri-elite-coatlan 179)
(defconst ri-elite-berserk 196)
(defconst ri-elite-jaguar 184)
(defconst ri-elite-wagon 160)
(defconst ri-elite-turtle-ship 164)
(defconst ri-elite-longboat 305)
(defconst ri-elite-spalvot 27)
(defconst ri-elite-conquistor 60)
(defconst ri-elite-tarkan 2)
(defconst ri-frigate 155)
(defconst ri-elite-frigate 156)
(defconst ri-elite-ocelot 184)
(defconst ri-heavy-kaiten 244)
(defconst ri-musketier 85)
(defconst ri-cannon 188)
(defconst ri-trebuchet 256)
(defconst frigate 420)
(defconst elite-frigate 223)
(defconst missionary 275)
(defconst conquistor 316)
(defconst elite-conquistor 317)
(defconst tarkan 318)
(defconst elite-tarkan 319)
(defconst unjeon 320)
(defconst elite-unjeon 321)
(defconst spalvot 322)
(defconst elite-spalvot 323)
(defconst huskarl-b 346)
(defconst elite-huskarl-b 347)
(defconst geobug 365)
(defconst elite-geobug 366)
(defconst ocelot 324)
(defconst elite-ocelot 325)
(defconst berserk 314)
(defconst elite-berserk 315)
(defconst coatlan 326)
(defconst elite-coatlan 327)
(defconst petard 440)
(defconst janisary 46)
(defconst elite-janisary 557)
(defconst samurai 291)
(defconst elite-samurai 560)
(defconst woader 232)
(defconst elite-woader 534)
(defconst hurlat 281)
(defconst elite-hurlat 531);$$$
(defconst hathin 239)
(defconst elite-hathin 558)
(defconst jaguar 258)
(defconst kaiten 527)
(defconst heavy-kaiten 528)

;User Patch
(defconst sn-allow-civilian-defense 225); redefine them to prevent error messages when loading in 1.0c
(defconst sn-percent-building-cancellation 243)
(defconst sn-minimum-number-hunters 245)
(defconst sn-dropsite-separation-distance 248)
(defconst sn-preferred-mill-placement 253)
(defconst sn-disable-attack-groups 271)
(defconst sn-allow-adjacent-dropsites 272)
(defconst sn-dock-placement-mode 278)
(defconst sn-dock-proximity-factor 279)
(defconst sn-free-siege-targeting 282)
(defconst sn-local-targeting-mode 286)

(defconst game-time 0); FactId Constants
(defconst population-cap 1)
(defconst population-headroom 2)
(defconst housing-headroom 3)
(defconst idle-farm-count 4)
(defconst food-amount 5)
(defconst wood-amount 6)
(defconst stone-amount 7)
(defconst gold-amount 8)
(defconst escrow-amount 9)
(defconst commodity-buying-price 10)
(defconst commodity-selling-price 11)
(defconst dropsite-min-distance 12)
(defconst soldier-count 13)
(defconst attack-soldier-count 14)
(defconst defend-soldier-count 15)
(defconst warboat-count 16)
(defconst attack-warboat-count 17)
(defconst defend-warboat-count 18)
(defconst current-age 19)
(defconst current-score 20)
(defconst civilization 21)
(defconst player-number 22)
(defconst player-in-game 23)
(defconst unit-count 24)
(defconst unit-type-count 25)
(defconst unit-type-count-total 26)
(defconst building-count 27)
(defconst building-type-count 28)
(defconst building-type-count-total 29)
(defconst population 30)
(defconst military-population 31)
(defconst civilian-population 32)
(defconst random-number 33)
(defconst resource-amount 34)
(defconst player-distance 35)
(defconst allied-goal 36)
(defconst allied-sn 37)
(defconst resource-percent 38)
(defconst enemy-buildings-in-town 39)
(defconst enemy-units-in-town 40)
(defconst enemy-villagers-in-town 41)
(defconst players-in-game 42)
(defconst defender-count 43)
(defconst building-type-in-town 44)
(defconst unit-type-in-town 45)
(defconst villager-type-in-town 46)
(defconst gaia-type-count 47)
(defconst gaia-type-count-total 48)
(defconst cc-gaia-type-count 49)
(defconst aggressive 0); Define AttackStance Constants
(defconst defensive 1)
(defconst stand-ground 2)
(defconst no-attack 3)
(defconst projectile-town-center 0); Define ProjectileType Constants
(defconst projectile-castle 1)
(defconst projectile-watch-tower 2)
(defconst projectile-bombard-tower 3)
(defconst projectile-ship 4)
(defconst projectile-siege 5)
(defconst projectile-fortification 6)
(defconst projectile-any 7)
(defconst find-attacker 0); Define FindPlayerMethod Constants
(defconst find-random 1)
(defconst find-closest 2)
(defconst find-ordered 3)
(defconst research-unavailable 0); Define ResearchState Constants
(defconst research-available 1)
(defconst research-pending 2)
(defconst research-complete 3)
(defconst timer-disabled 0); Define TimerState Constants
(defconst timer-triggered 1)
(defconst timer-running 2)
(defconst scout-center 0); Define ScoutMethod Constants
(defconst scout-opposite 1)
(defconst scout-corner 2)
(defconst scout-enemy 3)
(defconst scout-border 4)
(defconst scout-mirror 5)
(defconst scout-flank 6)
(defconst group-type-land-attack 100);Define GroupType Constants
(defconst group-type-land-explore 101)
(defconst group-type-land-trade 109)
(defconst group-type-water-attack 102)
(defconst group-type-water-explore 103)
(defconst group-type-water-trade 106)
(defconst group-type-transport-ship 104)
(defconst group-type-fishing-ship 105)
(defconst group-type-forward-builder 107)
(defconst group-type-monk 108)
(defconst place-normal 0);Define PlacementType Constants
(defconst place-forward 1)
(defconst place-control 2)

; Other SN
(defconst sn-food-modifier-percentage 156)
(defconst sn-wood-modifier-percentage 157)
(defconst sn-stone-modifier-percentage 158)
(defconst sn-gold-modifier-percentage 159)

;civ specific
#load-if-defined AZTEC-CIV
(defconst up-dark-age-villager 28)
(defconst dark-age-villager 31)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit militiaman)
(defconst unique-unit-food 110);minimum food amount
(defconst default-flush-unit archer)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit archer)
(defconst get-lightcav 0)
(defconst melee-unit militiaman)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10); > 10 actually never slings
(defconst sling-two 0)
(defconst blot-size 0)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
#load-if-not-defined UP-AVAILABLE
(defconst villager-town-center 8)
(defconst villager-castle 5)
#else
(defconst villager-town-center 15)
(defconst villager-castle 12)
#end-if
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 10)
(defconst number-stables 5)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 10)
(defconst pidm-wood 10)
(defconst pidm-gold 75)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 36)
(defconst uu-gold 24)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1000)
(defconst escrow-amount-gold 500)
#end-if
#load-if-defined BRITON-CIV
(defconst up-dark-age-villager 28)
(defconst dark-age-villager 32)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit archer)
(defconst unique-unit-food 0)
(defconst default-flush-unit archer)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit my-unique-unit-line)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 2)
(defconst military-level-flush-aggressive 1)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 9)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 7)
(defconst villager-stable 3)
(defconst villager-archery-range 12)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 3)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 2)
(defconst number-archery-ranges 9)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 47)
(defconst pidm-gold 48)
(defconst pidm-stone 5)
(defconst pidm-food2 26)
(defconst pidm-wood2 34)
(defconst pidm-gold2 35)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 30)
(defconst uu-wood2 36)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 30)
(defconst ci-uu-switch-wood 40)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 850)
(defconst escrow-amount-gold 850)
#end-if
#load-if-defined BYZANTINE-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit ss)
(defconst unique-unit-food 120)
(defconst default-flush-unit skirmisher)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit ss)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 2)
(defconst military-level-flush-aggressive 1)
(defconst allow-forward-castle 0)
(defconst sling-time 270)
(defconst sling-number 8)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 9)
#load-if-not-defined UP-AVAILABLE
(defconst villager-stable 3)
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
#else
(defconst villager-stable 3)
(defconst villager-archery-range 12)
(defconst villager-monastery 12)
(defconst villager-town-center 15)
(defconst villager-castle 3)
#end-if
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 5)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 10)
(defconst pidm-wood 10)
(defconst pidm-gold 75)
(defconst pidm-stone 5)
(defconst pidm-food2 37)
(defconst pidm-wood2 32)
(defconst pidm-gold2 27)
(defconst pidm-stone2 4)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 39)
(defconst uu-wood2 39)
(defconst uu-gold2 18)
(defconst uu-stone2 3)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 37)
(defconst ci-uu-switch-gold 18)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1600)
(defconst escrow-amount-gold 800)
#end-if
#load-if-defined CELTIC-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit militiaman-line)
(defconst unique-unit-food 115)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged 0)
(defconst pocket-unit knight)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 2)
(defconst military-level-flush-aggressive 1)
(defconst allow-forward-castle 0)
(defconst sling-time 200)
(defconst sling-number 3)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 9)
(defconst number-stables 3)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 16)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 55)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 39)
(defconst uu-wood 45)
(defconst uu-gold 13)
(defconst uu-stone 3)
(defconst uu-food2 40)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 4)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1000)
(defconst escrow-amount-gold 800)
#end-if
#load-if-defined CHINESE-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit knight)
(defconst unique-unit-food 0)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged archer)
(defconst pocket-unit my-unique-unit-line)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 260)
(defconst sling-number 7)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
#else
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 15)
(defconst villager-castle 5)
#end-if
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 8)
(defconst number-archery-ranges 6)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 47)
(defconst pidm-gold 48)
(defconst pidm-stone 5)
(defconst pidm-food2 26)
(defconst pidm-wood2 34)
(defconst pidm-gold2 35)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 32)
(defconst uu-wood2 38)
(defconst uu-gold2 24)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 34)
(defconst ci-uu-switch-wood 34)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 760)
(defconst escrow-amount-gold 760)
#end-if
#load-if-defined FRANKISH-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst unique-unit-food 0)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged archer)
(defconst pocket-unit knight)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 4)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
#else
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 18)
(defconst villager-castle 8)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 14)
(defconst villager-market 8)
#end-if
(defconst number-barracks 8)
(defconst number-stables 10)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 15)
(defconst pidm-food 45)
(defconst pidm-wood 0)
(defconst pidm-gold 50)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 44)
(defconst uu-wood2 26)
(defconst uu-gold2 25)
(defconst uu-stone2 5)
(defconst ci-uu-switch-food 43)
(defconst ci-uu-switch-wood 26)
(defconst ci-uu-switch-gold 25)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1000)
(defconst escrow-amount-gold 850)
#end-if
#load-if-defined GOTHIC-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit militiaman-line)
(defconst unique-unit-food 100)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit skirmisher)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defconst default-ranged archer)
#else
(defconst default-ranged cavalry-archer)
#end-if
(defconst pocket-unit knight)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 250)
(defconst sling-number 6)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 14)
(defconst villager-monastery 9)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-town-center 6)
(defconst villager-siege-workshop 12)
#else
(defconst villager-barracks 3)
(defconst villager-stable 20)
(defconst villager-archery-range 14)
(defconst villager-monastery 12)
(defconst villager-castle 10)
(defconst villager-mining-camp 14)
(defconst villager-town-center 18)
(defconst villager-siege-workshop 15)
#end-if
(defconst villager-market 9)
(defconst number-barracks 14)
(defconst number-stables 1)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 52)
(defconst pidm-wood 12)
(defconst pidm-gold 36)
(defconst pidm-stone 0)
(defconst pidm-food2 36)
(defconst pidm-wood2 23)
(defconst pidm-gold2 36)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 51)
(defconst uu-wood2 28)
(defconst uu-gold2 19)
(defconst uu-stone2 2)
(defconst ci-uu-switch-food 46)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 20)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1200)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined HUN-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst dark-age-villager 31)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst unique-unit-food 0)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged cavalry-archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-castle 10)
#load-if-not-defined UP-AVAILABLE
(defconst villager-monastery 4)
(defconst villager-mining-camp 9)
(defconst villager-town-center 5)
(defconst villager-archery-range 3)
#else
(defconst villager-archery-range 8)
(defconst villager-monastery 6)
(defconst villager-mining-camp 16)
(defconst villager-town-center 15)
#end-if
(defconst villager-siege-workshop 5)
(defconst villager-market 12)
(defconst number-barracks 9)
(defconst number-stables 8)
(defconst number-archery-ranges 12)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 30)
(defconst pidm-gold 67)
(defconst pidm-stone 3)
(defconst pidm-food2 30)
(defconst pidm-wood2 32)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 30)
(defconst uu-wood2 36)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1000)
(defconst escrow-amount-gold 500)
(defconst additional-town-center-distance 16)
#else
(defconst additional-town-center-distance 20)
#end-if
#load-if-defined JAPANESE-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit militiaman-line)
(defconst unique-unit-food 110)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit archer)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 210)
(defconst sling-number 6)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 9)
(defconst number-stables 1)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 16)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 38)
(defconst pidm-wood2 30)
(defconst pidm-gold2 27)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 950)
(defconst escrow-amount-gold 875)
#end-if
#load-if-defined KOREAN-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit my-unique-unit-line)
(defconst unique-unit-food 0)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit my-unique-unit-line)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 180)
(defconst sling-number 1)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 16)
(defconst villager-archery-range 13)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 4)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 8)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 1)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 58)
(defconst pidm-gold 37)
(defconst pidm-stone 5)
(defconst pidm-food2 26)
(defconst pidm-wood2 39)
(defconst pidm-gold2 30)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 48)
(defconst uu-gold 12)
(defconst uu-stone 4)
(defconst uu-food2 25)
(defconst uu-wood2 44)
(defconst uu-gold2 25)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 28)
(defconst ci-uu-switch-wood 40)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 0)
(defconst escrow-amount-gold 800)
#end-if
#load-if-defined MAYAN-CIV
(defconst up-dark-age-villager 28)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit mix)
(defconst unique-unit-food 0)
(defconst default-flush-unit archer)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit my-unique-unit-line)
(defconst get-lightcav 0)
(defconst melee-unit militiaman)
(defconst military-level-flush 2)
(defconst military-level-flush-aggressive 1)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 0)
(defconst villager-barracks 3)
(defconst villager-stable 3)
#load-if-not-defined UP-AVAILABLE
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 6)
#else
(defconst villager-archery-range 14)
(defconst villager-monastery 15)
(defconst villager-town-center 15)
(defconst villager-castle 4)
#end-if
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 12)
(defconst villager-market 17)
(defconst number-barracks 7)
(defconst number-stables 0)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 47)
(defconst pidm-gold 48)
(defconst pidm-stone 5)
(defconst pidm-food2 26)
(defconst pidm-wood2 34)
(defconst pidm-gold2 35)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 33)
(defconst uu-wood2 39)
(defconst uu-gold2 23)
(defconst uu-stone2 4)
(defconst ci-uu-switch-food 28)
(defconst ci-uu-switch-wood 38)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 500)
(defconst escrow-amount-gold 0)
#end-if
#load-if-defined MONGOL-CIV
(defconst up-dark-age-villager 28)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit knight)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst unique-unit-food 0)
(defconst default-ranged cavalry-archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 230)
(defconst sling-number 5)
(defconst sling-two 0)
(defconst blot-size 0)
(defconst villager-barracks 14)
(defconst villager-stable 3)
(defconst villager-archery-range 14)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 3)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 8)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 5)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 30)
(defconst pidm-gold 65)
(defconst pidm-stone 5)
(defconst pidm-food2 26)
(defconst pidm-wood2 34)
(defconst pidm-gold2 35)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 30)
(defconst uu-wood2 36)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 35)
(defconst ci-uu-switch-wood 33)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1100)
(defconst escrow-amount-gold 675)
#end-if
#load-if-defined PERSIAN-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst unique-unit-food 0)
(defconst default-ranged cavalry-archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 240)
(defconst sling-number 6)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
#else
(defconst villager-barracks 7)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 18)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 7)
#end-if
(defconst villager-market 17)
(defconst number-barracks 4)
(defconst number-stables 6)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 37)
(defconst pidm-wood 0)
(defconst pidm-gold 58)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 46)
(defconst uu-wood2 24)
(defconst uu-gold2 26)
(defconst uu-stone2 4)
(defconst ci-uu-switch-food 46)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 24)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1600)
(defconst escrow-amount-gold 1200)
#end-if
#load-if-defined SARACEN-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit archer)
(defconst unique-unit-food 135)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged archer)
(defconst pocket-unit archer)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 190)
(defconst sling-number 0)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 9)
(defconst villager-stable 3)
#load-if-not-defined UP-AVAILABLE
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
#else
(defconst villager-archery-range 9)
(defconst villager-monastery 15)
(defconst villager-town-center 18)
(defconst villager-castle 9)
#end-if
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 9)
(defconst number-barracks 6)
(defconst number-stables 9)
(defconst number-archery-ranges 8)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 10)
(defconst pidm-wood 10)
(defconst pidm-gold 75)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 30)
(defconst uu-wood2 36)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 33)
(defconst ci-uu-switch-wood 33)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 600)
(defconst escrow-amount-gold 500)
#end-if
#load-if-defined SPANISH-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit knight)
(defconst unique-unit-food 110)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged cavalry-archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
#else
(defconst villager-barracks 14)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 18)
#end-if
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 8)
(defconst number-stables 6)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 45)
(defconst pidm-wood 0)
(defconst pidm-gold 50)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 42)
(defconst uu-wood2 24)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 42)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1200)
(defconst escrow-amount-gold 600)
#end-if
#load-if-defined TEUTONIC-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst dark-age-villager 31)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst unique-unit-food 0)
(defconst default-flush-unit skirmisher)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit knight)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
#load-if-not-defined UP-AVAILABLE
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
#else
(defconst villager-barracks 14)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 18)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 7)
#end-if
(defconst villager-market 17)
(defconst number-barracks 8)
(defconst number-stables 6)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 16)
(defconst pidm-food 45)
(defconst pidm-wood 0)
(defconst pidm-gold 50)
(defconst pidm-stone 5)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 36)
(defconst uu-gold 24)
(defconst uu-stone 4)
(defconst uu-food2 42)
(defconst uu-wood2 24)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 42)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 1200)
(defconst escrow-amount-gold 600)
(defconst farm-wood 40)
#else
(defconst farm-wood 60)
#end-if
#load-if-defined TURKISH-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 200)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst unique-unit-food 110)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defconst default-ranged archer)
#else
(defconst default-ranged cavalry-archer)
#end-if
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 220)
(defconst sling-number 2)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 14)
(defconst villager-stable 3)
(defconst villager-archery-range 3)
(defconst villager-monastery 7)
(defconst villager-town-center 8)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 7)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 45)
(defconst pidm-wood 0)
(defconst pidm-gold 50)
(defconst pidm-stone 5)
(defconst pidm-food2 42)
(defconst pidm-wood2 20)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 42)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst escrow-amount-food 850)
(defconst escrow-amount-gold 750)
#end-if
#load-if-defined VIKING-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit militiaman-line)
(defconst unique-unit-food 115)
(defconst default-flush-unit militiaman-line)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit archer)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 9)
(defconst villager-town-center 7)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 9)
(defconst number-stables 1)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 46)
(defconst ci-uu-switch-wood 26)
(defconst ci-uu-switch-gold 22)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined INCAN-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit militiaman)
(defconst unique-unit-food 110)
(defconst default-flush-unit archer)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit militiaman)
(defconst get-lightcav 0)
(defconst melee-unit militiaman)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 16)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 9)
(defconst number-stables 1)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 36)
(defconst uu-gold 24)
(defconst uu-stone 4)
(defconst uu-food2 41)
(defconst uu-wood2 27)
(defconst uu-gold2 28)
(defconst uu-stone2 4)
(defconst ci-uu-switch-food 36)
(defconst ci-uu-switch-wood 32)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined INDIAN-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit ss)
(defconst unique-unit-food 160)
(defconst default-flush-unit skirmisher)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst melee-unit militiaman)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 195)
(defconst sling-number 6)
(defconst sling-two 1)
(defconst blot-size 1)
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 18)
(defconst villager-castle 5)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 9)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 42)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined ITALIAN-CIV
(defconst up-dark-age-villager 28)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit archer)
(defconst unique-unit-food 115)
(defconst default-flush-unit archer)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit archer)
(defconst get-lightcav 0)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 12)
(defconst villager-stable 3)
(defconst villager-archery-range 9)
(defconst villager-monastery 7)
(defconst villager-town-center 18)
(defconst villager-castle 3)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 9)
(defconst number-stables 1)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 38)
(defconst uu-wood2 28)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined MAGYAR-CIV
(defconst up-dark-age-villager 30)
(defconst villager-wonder-dark 33)
(defconst villager-wonder-feudal 35)
(defconst default-strategy 200)
(defconst pocket-strategy 202)
(defconst default-unit knight)
(defconst unique-unit-food 130)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defconst default-ranged archer)
#else
(defconst default-ranged cavalry-archer)
#end-if
(defconst pocket-unit knight)
(defconst get-lightcav 0); uu instead
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 7)
(defconst villager-stable 3)
(defconst villager-archery-range 16)
(defconst villager-monastery 12)
(defconst villager-town-center 18)
(defconst villager-castle 12)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 14)
(defconst villager-market 17)
(defconst number-barracks 8)
(defconst number-stables 6)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 3)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 28)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 36)
(defconst uu-gold 24)
(defconst uu-stone 4)
(defconst uu-food2 42)
(defconst uu-wood2 24)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 32)
(defconst ci-uu-switch-wood 36)
(defconst ci-uu-switch-gold 26)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if
#load-if-defined SLAVIC-CIV
(defconst up-dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 202)
(defconst default-unit knight)
(defconst unique-unit-food 115)
(defconst default-flush-unit skirmisher)
(defconst no-gold-flush-unit skirmisher)
#load-if-not-defined DEATH-MATCH
(defconst default-ranged monk)
#else
(defconst default-ranged 0)
#end-if
(defconst pocket-unit scorpion)
(defconst get-lightcav 1)
(defconst melee-unit knight)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 0)
(defconst sling-time 600)
(defconst sling-number 10)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 2)
(defconst villager-stable 16)
(defconst villager-archery-range 16)
(defconst villager-monastery 6)
(defconst villager-town-center 16)
(defconst villager-castle 4)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 6)
(defconst villager-market 17)
(defconst number-barracks 4)
(defconst number-stables 4)
(defconst number-archery-ranges 4)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 30)
(defconst pidm-wood 10)
(defconst pidm-gold 60)
(defconst pidm-stone 0)
(defconst pidm-food2 34)
(defconst pidm-wood2 24)
(defconst pidm-gold2 37)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 36)
(defconst uu-gold 24)
(defconst uu-stone 4)
(defconst uu-food2 36)
(defconst uu-wood2 31)
(defconst uu-gold2 30)
(defconst uu-stone2 3)
(defconst ci-uu-switch-food 42)
(defconst ci-uu-switch-wood 24)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst escrow-amount-food 1300)
(defconst escrow-amount-gold 550)
#end-if

#load-if-defined BYZANTINE-CIV
(defconst imp-food 667)
(defconst imp-gold 536)
(defconst imp-f2 517)
(defconst imp-g2 400)
#else
#load-if-defined ITALIAN-CIV
(defconst imp-food 900)
(defconst imp-f2 730)
(defconst imp-g2 600)
(defconst imp-gold 720)
#else
(defconst imp-food 1000)
(defconst imp-f2 800)
(defconst imp-g2 650)
(defconst imp-gold 800)
#end-if
#end-if

;AoFE item list
#load-if-defined CIV-TAGS-FOR-EDITOR
(defconst ITALIAN-CIV 0)
(defconst MAGYAR-CIV 0)
(defconst INDIAN-CIV 0)
(defconst SLAVIC-CIV 0)
(defconst INCAN-CIV 0)
#end-if
(defconst italian 19)
(defconst indian 20)
(defconst incan 21)
(defconst magyar 22)
(defconst slavic 23)
(defconst stable-tarkan 886)
(defconst stable-elite-tarkan 887)
(defconst boyar 876)
(defconst elite-boyar 878)
(defconst kamayuk 879)
(defconst elite-kamayuk 881)
(defconst slinger 185)
(defconst ri-elite-magyar-huszar 472)
(defconst magyar-huszar 869)
(defconst elite-magyar-huszar 871)
(defconst ri-elite-elephant-archer 481)
(defconst elephant-archer 873)
(defconst elite-elephant-archer 875)
(defconst imperial-camel 897)
(defconst ri-elite-genoese-crossbow 468)
(defconst genoese-crossbowman 866)
(defconst elite-genoese-crossbowman 868)
(defconst condottiero 882)
(defconst ri-chivalry 493)
(defconst ri-inquisition 492)
(defconst ri-sipahi 491)
(defconst ri-madrasah 490)
(defconst ri-ironclad 489)
(defconst ri-boiling-oil 488)
(defconst ri-nomads 487)
(defconst ri-panokseon 486)
(defconst ri-yasama 485)
(defconst ri-marauders 483)
(defconst ri-atlatl 460)
(defconst ri-war-wolf 461)
(defconst ri-greek-fire 88)
(defconst ri-chieftains 105)
(defconst ri-stronghold 482)
(defconst ri-great-wall 462)
(defconst ri-orthodoxy 512)
(defconst ri-druzhina 513)
(defconst ri-elite-boyar 504)
(defconst ri-andean-sling 516)
(defconst ri-couriers 517)
(defconst ri-elite-kamayuk 509)
(defconst ri-sultans 506)
(defconst ri-shatagni 507)
(defconst ri-imperial-camel 521)
(defconst ri-mercenaries 514)
(defconst ri-recurve-bow 515)
(defconst ri-silk-road 499)
(defconst ri-pavise 494)
(defconst ri-revetments 525)
(defconst ri-gillnets 65)
(defconst ri-hunting-dogs 526)
(defconst siege-tower 885)
(defconst ri-tlatoani 585)
(defconst upgraded-palisade-wall 119)
(defconst sea-tower 785)
(defconst sea-wall 788)

#load-if-defined UP-AVAILABLE
#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defconst fd-pop1 21)
(defconst fd-pop2 22)
(defconst fd-pop3 23)
(defconst fd-pop4 24)
(defconst fd-pop5 25)
(defconst fd-pop6 26)
(defconst fd-pop7 27)
(defconst fd-pop8 28)
(defconst fd-pop9 28); cap civ
#else
(defconst fd-pop1 20)
(defconst fd-pop2 21)
(defconst fd-pop3 22)
(defconst fd-pop4 23)
(defconst fd-pop5 24)
(defconst fd-pop6 25)
(defconst fd-pop7 26)
(defconst fd-pop8 27)
(defconst fd-pop9 28)
#end-if
#else
(defconst fd-pop1 20)
(defconst fd-pop2 21)
(defconst fd-pop3 22)
(defconst fd-pop4 23)
(defconst fd-pop5 24)
(defconst fd-pop6 25)
(defconst fd-pop7 26)
(defconst fd-pop8 27)
(defconst fd-pop9 28)
#end-if
#else
(defconst fd-pop1 21)
(defconst fd-pop2 22)
(defconst fd-pop3 23)
(defconst fd-pop4 24)
(defconst fd-pop5 25)
(defconst fd-pop6 26)
(defconst fd-pop7 27)
(defconst fd-pop8 28)
(defconst fd-pop9 29)
#end-if
#load-if-defined POST-IMPERIAL-AGE-START
(defconst pop-house 20)
#else
(defconst pop-house 50)
#end-if
#load-if-defined DEATH-MATCH
(defconst initial-town-size 8)
(defconst retreat-town-size 30)
(defconst aggressive-defend-town-size 39)
(defconst housing-headroom1 40)
(defconst housing-headroom2 40)
(defconst camp-distance 45)
(defconst food-distance 0)
(defconst wood-distance -1)
#load-if-defined POST-IMPERIAL-AGE-START
(defconst market-time 420)
#else
(defconst market-time 900)
#end-if
(defconst number-markets 3)
(defconst number-blacksmiths 2)
(defconst mill-distance 15)
(defconst hunt-distance 0)
(defconst spread-interval 40)
(defconst home-exploration-time 30)
(defconst town-center-placement 0)
(defconst special-attack-type2 town-center)
#else
(defconst initial-town-size 30); marathon suggestion
(defconst retreat-town-size 12)
(defconst aggressive-defend-town-size 32)
(defconst housing-headroom1 3)
(defconst housing-headroom2 25)
(defconst camp-distance 15)
(defconst food-distance 25)
(defconst wood-distance 0)
(defconst market-time 2700)
(defconst number-blacksmiths 1)
(defconst number-markets 2)
#load-if-not-defined SCANDANAVIA-MAP
(defconst mill-distance 15)
#load-if-defined AZTEC-CIV
#load-if-not-defined GOLD-RUSH-MAP
(defconst hunt-distance 32)
#else
(defconst hunt-distance 15)
#end-if
#else
(defconst hunt-distance 12)
#end-if
#else
(defconst mill-distance 29)
(defconst hunt-distance 32)
#end-if
(defconst spread-interval 180)
#load-if-not-defined WONDER-RACE
(defconst home-exploration-time 300)
#else
(defconst home-exploration-time 32768)
#end-if
(defconst town-center-placement lumber-camp)
(defconst special-attack-type2 lumber-camp)
#end-if
#load-if-defined NOMAD-MAP
(defconst initial-explore-time 150)
(defconst wood-distance2 -1)
#else
#load-if-not-defined UP-AVAILABLE
(defconst initial-explore-time 75)
#else
(defconst initial-explore-time 150)
#end-if
(defconst wood-distance2 30)
#end-if
#load-if-not-defined AZTEC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined BRITON-CIV
(defconst dark-age-villager 32)
#end-if
#end-if
#end-if
#end-if
#load-if-defined SALT-MARSH-MAP
(defconst dock-placement 1)
#end-if
#load-if-defined COASTAL-MAP
#load-if-defined UP-POCKET-POSITION
(defconst dock-placement -1)
#else
(defconst dock-placement 0)
#end-if
#end-if
#load-if-not-defined SALT-MARSH-MAP
#load-if-not-defined COASTAL-MAP
(defconst dock-placement -1)
#end-if
#end-if
#load-if-defined YUCATAN-MAP
(defconst max-warships 20)
#end-if
#load-if-defined HIGHLAND-MAP
(defconst max-warships 20)
#end-if
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined YUCATAN-MAP
(defconst max-warships 35)
#end-if
#end-if
#load-if-defined ARENA-MAP
(defconst camp-distance-tc 15)
#else
(defconst camp-distance-tc 22)
#end-if
#load-if-defined REGICIDE
#load-if-defined FORTRESS-MAP
(defconst lumber-delay 40)
#else
(defconst lumber-delay 180)
#end-if
#end-if
#load-if-not-defined REGICIDE
#load-if-not-defined FORTRESS-MAP
(defconst lumber-delay 180)
#end-if
#end-if
#load-if-defined FORTRESS-MAP
(defconst lumber-delay 40)
#end-if 
#load-if-defined TINY-MAP
(defconst second-camp-distance 24)
(defconst min-fishing 24)
(defconst heavy-wood 7000)
(defconst max-trade-cart 20)
(defconst trade-distance 54)
#end-if
#load-if-defined SMALL-MAP
(defconst second-camp-distance 24)
(defconst min-fishing 40)
(defconst heavy-wood 8000)
(defconst max-trade-cart 20)
(defconst trade-distance 72)
#end-if
#load-if-defined MEDIUM-MAP
(defconst second-camp-distance 24)
(defconst min-fishing 50)
(defconst heavy-wood 10000)
#load-if-not-defined UP-AVAILABLE
#load-if-defined TEAM-ISLANDS-MAP
(defconst max-trade-cart 33)
#else
(defconst max-trade-cart 20)
#end-if
#else
(defconst max-trade-cart 33)
#end-if
(defconst trade-distance 90)
#end-if
#load-if-defined NORMAL-MAP
(defconst second-camp-distance 30)
(defconst min-fishing 60)
(defconst heavy-wood 14000)
#load-if-not-defined UP-AVAILABLE
#load-if-defined TEAM-ISLANDS-MAP
(defconst max-trade-cart 33)
#else
(defconst max-trade-cart 20)
#end-if
#else
(defconst max-trade-cart 37)
#end-if
(defconst trade-distance 120)
#end-if
#load-if-defined LARGE-MAP
(defconst second-camp-distance 30)
(defconst min-fishing 70)
(defconst heavy-wood 18000)
#load-if-not-defined UP-AVAILABLE
#load-if-defined TEAM-ISLANDS-MAP
(defconst max-trade-cart 33)
#else
(defconst max-trade-cart 20)
#end-if
#else
(defconst max-trade-cart 40)
#end-if
(defconst trade-distance 150)
#end-if
#load-if-defined GIANT-MAP
(defconst second-camp-distance 30)
(defconst min-fishing 80)
(defconst heavy-wood 22000)
#load-if-not-defined UP-AVAILABLE
#load-if-defined TEAM-ISLANDS-MAP
(defconst max-trade-cart 33)
#else
(defconst max-trade-cart 20)
#end-if
#else
(defconst max-trade-cart 40)
#end-if
(defconst trade-distance 192)
#end-if
#load-if-defined HIGHLAND-MAP
(defconst water-mixed 1000)
(defconst water-islands 1001)
#else
#load-if-defined TINY-MAP
(defconst water-mixed 1000)
(defconst water-islands 1001)
#end-if
#load-if-defined SMALL-MAP
(defconst water-mixed 2000)
(defconst water-islands 2001)
#end-if
#load-if-defined MEDIUM-MAP
(defconst water-mixed 4000)
(defconst water-islands 4001)
#end-if
#load-if-defined NORMAL-MAP
(defconst water-mixed 4000)
(defconst water-islands 4001)
#end-if
#load-if-defined LARGE-MAP
(defconst water-mixed 4000)
(defconst water-islands 4001)
#end-if
#load-if-defined GIANT-MAP
(defconst water-mixed 4000)
(defconst water-islands 4001)
#end-if
#end-if
#load-if-not-defined TURBO-RANDOM-MAP
#load-if-not-defined POPULATION-CAP-25
(defconst number-rams 3)
(defconst number-garrison-units 4)
#load-if-defined DIFFICULTY-EASIEST
(defconst villager-gold 16)
(defconst villager-feudal-min 16)
(defconst villager-flush 24)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst villager-gold 18)
(defconst villager-feudal-min 19)
(defconst villager-flush 18)
#end-if
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
(defconst villager-gold 31)
#load-if-defined DIFFICULTY-HARDEST
(defconst villager-flush 21)
#load-if-defined HIGH-RESOURCES-START
(defconst villager-feudal-min 10)
#else
(defconst villager-feudal-min 24)
#end-if
#else
(defconst villager-flush 24)
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-defined LOW-RESOURCES-START
(defconst villager-feudal-min 28)
#end-if
#load-if-defined MEDIUM-RESOURCES-START
(defconst villager-feudal-min 24)
#end-if
#load-if-defined HIGH-RESOURCES-START
(defconst villager-feudal-min 16)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#else
(defconst number-rams 2)
(defconst number-garrison-units 1)
(defconst villager-gold 24)
(defconst villager-feudal-min 24)
(defconst villager-flush 24)
#end-if
#else ; = TURBO
#load-if-not-defined POPULATION-CAP-25
(defconst number-rams 3)
(defconst number-garrison-units 4)
#else
(defconst number-rams 2)
(defconst number-garrison-units 1)
#end-if
(defconst villager-flush 15)
(defconst villager-gold 16)
(defconst villager-feudal-min 16)
#end-if

#load-if-defined ARABIA-MAP
(defconst additional-town-center-placed-distance 14)
(defconst pop60-town-size 16)
(defconst pop90-town-size 20)
(defconst pop120-town-size 24)
#end-if
#load-if-defined ARENA-MAP
(defconst additional-town-center-placed-distance 16)
(defconst pop60-town-size 20)
(defconst pop90-town-size 24)
(defconst pop120-town-size 24)
#end-if
#load-if-not-defined ARENA-MAP
#load-if-not-defined ARABIA-MAP
(defconst additional-town-center-placed-distance 16)
(defconst pop60-town-size 20)
(defconst pop90-town-size 24)
(defconst pop120-town-size 28)
#end-if
#end-if
#load-if-defined GOLD-RUSH-MAP
#load-if-defined TINY-MAP
(defconst castle-age-camp-distance 38); high camp distance to reach center gold
(defconst loom-hunt-distance 20); low hunt distance because of large wolf packs
#end-if
#load-if-defined SMALL-MAP
(defconst castle-age-camp-distance 48)
(defconst loom-hunt-distance 20)
#end-if
#load-if-defined MEDIUM-MAP
(defconst castle-age-camp-distance 64)
(defconst loom-hunt-distance 20)
#end-if
#load-if-defined NORMAL-MAP
(defconst castle-age-camp-distance 90)
(defconst loom-hunt-distance 20)
#end-if
#load-if-defined LARGE-MAP
(defconst castle-age-camp-distance 124)
(defconst loom-hunt-distance 20)
#end-if
#load-if-defined GIANT-MAP
(defconst castle-age-camp-distance 124)
(defconst loom-hunt-distance 20)
#end-if
#else
(defconst castle-age-camp-distance 35)
(defconst loom-hunt-distance 32)
#end-if ; not gold-rush-map
#load-if-not-defined UP-MICHI-STYLE
(defconst scorpion-gold-min 170)
(defconst villager-coinage 60)
#else
(defconst scorpion-gold-min 120)
(defconst villager-coinage 100)
#end-if

#load-if-defined UP-AVAILABLE
(defconst feudal-food-percentage 48)
(defconst feudal-gold-percentage 19)
(defconst fast-castle-min-farm 0)
(defconst snow-water-map 32767); as many as possible because with UP we can build dock on ice
(defconst sub-mill-farm 27)
(defconst sub-mill-farm2 33)
(defconst wb-food 720)
(defconst emergency-mill-villager 20)
(defconst villager-lumber-camp 20)
(defconst nomad-build-delay-time 30)
#else
(defconst feudal-food-percentage 45)
(defconst feudal-gold-percentage 22)
(defconst fast-castle-min-farm 12)
(defconst snow-water-map 20)
(defconst sub-mill-farm 35)
(defconst sub-mill-farm2 40)
(defconst wb-food 650)
(defconst emergency-mill-villager 15)
(defconst villager-lumber-camp 25)
(defconst nomad-build-delay-time 15)
#end-if
#load-if-defined POPULATION-CAP-25
(defconst max-fleet 20)
(defconst twenty-five-percent-pop 6)
(defconst thirty-percent-pop 7)
(defconst fourty-percent-pop 10)
(defconst sixty-percent-pop 15)
(defconst seventy-five-percent-pop 19)
(defconst eighty-five-percent-pop 21)
(defconst up-max-civ 12)
(defconst max-civ-pop 20)
(defconst del-civ-pop 24)
(defconst max-pop 25)
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
(defconst low-min-number-upgrade 1)
(defconst mid-min-number-upgrade 2)
(defconst high-min-number-upgrade 4)
#end-if
#load-if-defined POPULATION-CAP-50;Ł
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-75
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-100
#load-if-not-defined POPULATION-CAP-EXTENDED
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-125
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-150
#load-if-not-defined POPULATION-CAP-EXTENDED
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-175
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-200 ;Ł relocated onto cap 50
#load-if-not-defined POPULATION-CAP-EXTENDED
(defconst max-fleet 75)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
(defconst up-max-civ 120)
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
#end-if
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 15)
#end-if
#load-if-defined POPULATION-CAP-225
(defconst max-fleet 78)
(defconst twenty-five-percent-pop 56)
(defconst thirty-percent-pop 66)
(defconst fourty-percent-pop 90)
(defconst sixty-percent-pop 135)
(defconst seventy-five-percent-pop 169)
(defconst eighty-five-percent-pop 191)
(defconst up-max-civ 135)
(defconst max-civ-pop 210)
(defconst del-civ-pop 221)
(defconst max-pop 225)
#end-if
#load-if-defined POPULATION-CAP-EXTENDED; Load for Pop >= 250 to prevent error message
#load-if-not-defined POPULATION-CAP-225
(defconst max-fleet 90)
(defconst twenty-five-percent-pop 63)
(defconst thirty-percent-pop 75)
(defconst fourty-percent-pop 100)
(defconst sixty-percent-pop 150)
(defconst seventy-five-percent-pop 187)
(defconst eighty-five-percent-pop 213)
(defconst up-max-civ 135)
(defconst max-civ-pop 220)
(defconst del-civ-pop 246)
(defconst max-pop 250)
#end-if
#end-if

(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-maximum-town-size initial-town-size); =10 in DM, =30 in RM
	(set-strategic-number sn-task-ungrouped-soldiers 0); spread military 0=no,1=yes
	(set-strategic-number sn-total-number-explorers 10);start with all civilians as explorer and turn them off when sheeps or berries are found
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-minimum-civilian-explorers 12)
	(set-strategic-number sn-number-explore-groups 1);explore with scouts
	(set-difficulty-parameter ability-to-dodge-missiles 0);0=dodge,100=stay
	(set-difficulty-parameter ability-to-maintain-distance 0);0=run&shoot,100=stay
	(set-strategic-number sn-percent-enemy-sighted-response 100);fight with all men
	(set-strategic-number sn-group-commander-selection-method 0)
	(set-strategic-number sn-ignore-attack-group-under-attack 0)
	(set-strategic-number sn-attack-group-size-randomness 0)
	(set-strategic-number sn-scale-minimum-attack-group-size 0)
	(set-strategic-number sn-scale-maximum-attack-group-size 0)
	(set-strategic-number sn-group-leader-defense-distance 3); increases chance to make a few big groups instead of many medium sized ones
)
(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-intelligent-gathering 1);drop resources when switched to another type
	(set-strategic-number sn-retask-gather-amount 0);minimum amount to collect before allowed to switch	
	(set-strategic-number sn-camp-max-distance camp-distance);small distances at the start
	(set-strategic-number sn-mill-max-distance mill-distance)
	(set-strategic-number sn-cap-civilian-builders 100); maximum villagers that can be tasked as builder
	(set-strategic-number sn-cap-civilian-explorers 100); maximum villagers that can be tasked as explorer
	(set-strategic-number sn-maximum-hunt-drop-distance hunt-distance);Dont walk all over the map for resources 
	(set-strategic-number sn-maximum-food-drop-distance food-distance)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance)
	(set-strategic-number sn-maximum-stone-drop-distance 0)
	(set-strategic-number sn-maximum-gold-drop-distance 0)
	(set-strategic-number sn-blot-exploration-map 0);1=rexplore
	(set-strategic-number sn-blot-size blot-size);15=default, 0 scouts w/ high LOS, 1 rest
	(set-strategic-number sn-sentry-distance-variation 0)
)
(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-group-form-distance 20)
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	(set-strategic-number sn-percent-attack-soldiers 100);attack with all men
	(set-strategic-number sn-attack-winning-player 1);attack player with most points
	(set-strategic-number sn-attack-winning-player-factor 10000)
	(set-strategic-number sn-attack-intelligence 1);doesn't really avoid TC/castle fire, but better than nothing
	(set-strategic-number sn-build-frequency 1);try to build somewhere else when interrupted, sometimes it helps when AI trys to build next to enemy
	(set-strategic-number sn-number-build-attempts-before-skip 5)
	(set-strategic-number sn-max-skips-per-attempt 5)
	(set-strategic-number sn-coop-share-attacking 1); usually helps ally too late, but better than nothing
	(set-strategic-number sn-coop-share-information 1); gives information to an AI ally
	(set-strategic-number sn-garrison-rams 0); load infantry in rams
	(set-strategic-number sn-current-age dark); initilisation dark-age
	(set-strategic-number sn-minimum-water-body-size-for-dock 999); don't build docks in small puddles
)
(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-target-evaluation-in-progress 0)
	(set-strategic-number sn-target-evaluation-boat 0)
	(set-strategic-number sn-target-evaluation-rof 0)
	(set-strategic-number sn-target-evaluation-continent 0)
	(set-strategic-number sn-target-evaluation-siege-weapon 500);high value => siege vs buildings, soldier vs soldier
	(set-strategic-number sn-target-evaluation-distance evaluation-distance)
	(set-strategic-number sn-target-evaluation-time-kill-ratio 0)
	(set-strategic-number sn-target-evaluation-hitpoints evaluation-hitpoints)
	(set-strategic-number sn-target-evaluation-damage-capability 1)
	(set-strategic-number sn-target-evaluation-kills 0)
	(set-strategic-number sn-target-evaluation-randomness 0)
	(set-strategic-number sn-target-evaluation-attack-attempts 0)
	(set-strategic-number sn-target-evaluation-range -100)
)
(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-special-attack-type2 special-attack-type2)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-zero-priority-distance 200)
	(set-strategic-number sn-attack-group-gather-spacing 5)
	(set-strategic-number sn-do-not-scale-for-difficulty-level 1)
	(set-goal escrow-purpose-goal 0)
	(generate-random-number 10)
	(chat-to-all "The Horde v2.26 by Narja144@gmail.com")
)
(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-goal control-goal 0); secondary unit
	(set-goal strategy-goal default-strategy)
	(set-goal enemy-goal 0); enemy strategy unkonwn
	(set-goal increase-town-size-goal 0); disable TS increase
	(set-goal unit-goal default-unit)
	(set-goal ranged-unit-type-goal default-ranged)
	(set-goal under-attack-goal 0); not under attack
	(set-goal spread-military-goal 0)
	(enable-timer civ-explore-timer initial-explore-time); disable civ scouting 30s
	(enable-timer attack-timer 1)
	(enable-timer spread-military-timer 220)
	(enable-timer tribute-timer 1)
	(enable-timer one-minute-timer 60)
	(enable-timer regroup-timer 1)
	(set-strategic-number sn-initial-exploration-required 0); set this to 0 to build immediately
)
(defrule
	(true); clear these goals/SNs each rule pass
=>
	(set-strategic-number sn-military-level 0)
	(set-strategic-number sn-archer-threat 0)
	(set-strategic-number sn-infantry-threat 0)
	(set-strategic-number sn-cavalry-threat 0)
	(set-goal anti-cavalry-threat-goal 0)
	(set-goal anti-monk-threat-goal 0)
	(set-goal monk-threat-goal 0)
	(set-goal enemy-sighted-goal 0)
	(set-goal attack-goal 0)
	(set-goal farm-goal 0)
	(set-goal housing-goal 0)
	(set-goal enemy-boats-goal 0)
	(set-goal hostilities-goal 0)
	(set-goal save-wood-goal 0)
)
(defrule
	(or
		(game-time < 1200); don't block early villagers in DM
		(nor
			(and
				(goal train-civ-goal -1)
				(population >= max-civ-pop)
			)
			(goal train-civ-goal 2)
		)
	)	
=>
	(set-goal train-civ-goal 1)
)
(defrule
	(game-time > 1800)
	(or
		(or
			(dropsite-min-distance wood == -1); wood gone
			(dropsite-min-distance wood == 255); or remaining wood is on other islands
		)
		(and
			(unit-type-count-total villager > thirty-percent-pop)
			(game-type == 8)
		)
	)
=>
	(set-goal train-civ-goal -1)
)
(defrule
	(current-age == imperial-age)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(and
			(unit-type-count villager > twenty-five-percent-pop)
			(game-time > 2700)
		)
		(and
			(and
				(players-unit-type-count every-enemy galley-line < 15)
				(players-unit-type-count every-enemy fire-ship-line < 15)
			)
			(warboat-count > 25)
		)
	)
=>
	(set-goal train-civ-goal -1)
)
#load-if-defined DEFEND-WONDER
(defrule
	(unit-type-count-total villager > fourty-percent-pop)
=>
	(set-goal train-civ-goal -1)
)
#end-if
(defrule
	(strategic-number sn-resource-control != 3)
	(nand
		(strategic-number sn-current-age == feudal)
		(and
			(strategic-number sn-resource-control == 2)
			(goal under-attack-goal 0)
		)
	)
=>
	(set-strategic-number sn-resource-control 0)
)
#load-if-defined UP-AVAILABLE
(defrule
	(or
		(or
			(and
				(unit-type-count villager < villager-feudal-min)
				(food-amount >= 50)
			)
			(and
				(food-amount >= 500)
				(strategic-number sn-current-age == dark)
			)
		)
		(strategic-number sn-current-age >= fc-transit)
	)	
=>
	(set-goal micro-goal done)
)
#end-if
#load-if-defined WONDER-RACE
(defrule
	(true)
=>
	(set-goal strategy-goal fast-imp);overwrite all other settings
	(set-goal unit-goal wonder)
	(set-goal control-goal wonder)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total university < 1)
	(current-age == castle-age)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal university)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
=>
	(enable-timer 6 60)(disable-self)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(timer-triggered 6)
	(food-amount < 300); ri-stonecutting
	(can-buy-commodity food)
	(research-available ri-stonecutting)
=>
	(buy-commodity food)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(not (research-available ri-stonecutting))
=>
	(sell-commodity food)
	(delete-building farm)
	(enable-timer lumber-timer 300)
)
(defrule
	(current-age == imperial-age)
	(wood-amount > 1100)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
)
(defrule
	(current-age == imperial-age)
	(wood-amount < 1000)
	(gold-amount > 1150)
	(commodity-buying-price wood <= 150)
=>
	(buy-commodity wood)
)
(defrule
	(current-age == imperial-age)
	(stone-amount < 1000)
	(gold-amount > 1174)
	(commodity-buying-price stone <= 175)
=>
	(buy-commodity stone)
)
(defrule
	(can-build wonder)
=>
	(build wonder)
)
(defrule
	(building-type-count-total wonder > 0)
=>
	(delete-building blacksmith)
	(delete-building market)
	(delete-building university)
	(delete-building monastery)
	(delete-building town-center)
	(set-goal increase-town-size-goal 2)
)
#else
;******************** NAVY INITIALISATION ********************

(defrule
	(goal enemy-boats-goal 1)
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(building-type-count-total blacksmith > 0)
=>
	(enable-wall-placement 2)
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-boat-explore-groups 0)
	(chat-to-player my-player-number "enemy boats sighted... pretend this map has water")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(taunt-detected any-human 34)
=>
	(enable-wall-placement 2)
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-boat-explore-groups 0)
)
#load-if-not-defined FORTRESS-MAP
#load-if-not-defined SALT-MARSH-MAP
(defrule
	(or
		(or
			(cc-players-unit-type-count 0 sea-fish >= 20)
			(cc-players-unit-type-count 0 shore-fish >= 25)
		)
		(and
			(cc-players-unit-type-count 0 sea-fish >= 10)
			(cc-players-unit-type-count 0 shore-fish >= 10)
		)
	)
	(cc-players-unit-type-count 0 413 < snow-water-map) ; snow pine tree = snow / ice map - no dock as cp can't build on them in 1.0c
	(building-type-count town-center > 0); cp can't build docks on nomad either
=>
	(enable-wall-placement 2)
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-boat-explore-groups 0)
	(chat-to-player my-player-number "some fish found on map")
	(disable-self))
#else
(defrule
	(true)
=>
	(enable-wall-placement 2)
	(set-strategic-number sn-maximum-fish-boat-drop-distance 14)
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-boat-explore-groups 0)
	(chat-to-player my-player-number "some fish found on map")
	(disable-self))
#end-if
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(wall-completed-percentage 2 == 100)
	(players-building-type-count my-player-number stone-wall < 15); this will be only true on islands
	(players-building-type-count my-player-number palisade-wall < 15)
=>
	(set-strategic-number sn-garrison-rams 0); don't load rams or the computer messes up with transports
	(set-strategic-number sn-minimum-water-body-size-for-dock water-islands)
	(set-strategic-number sn-group-form-distance 30); big distances to load transport ships
	(set-goal strategy-goal rush)
	(chat-to-player my-player-number "water map detected!")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(building-type-count lumber-camp > 0)
	(building-type-count mill > 0)
	(building-type-count-total dock == 0)
	(wood-amount > 210)
	(game-time > 300)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock 999)
	(chat-to-player my-player-number "dock placement failed, assume land map")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(goal unit-goal my-unique-unit-line)
		(or
			(goal unit-goal ss)
			(goal unit-goal archer)
		)
	)
	(current-age < castle-age)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal militiaman-line)
)

; Check for enemy boats. This is important for mixed maps, as the computer wont attack with ships at all when the enemy has no docks/boats
(defrule 
	(or
		(or
			(players-building-type-count any-enemy dock > 0)
			(players-unit-type-count any-enemy fishing-ship > 0)
		)
		(or
			(players-unit-type-count any-enemy galley-line > 0)
			(players-unit-type-count any-enemy fire-ship-line > 0)
		)
	)
=>
	(set-goal enemy-boats-goal 1)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(game-time > 13)
	(player-valid 3)
	(not (player-valid any-ally))
=>
	(set-goal nr-map-goal 1)
	(set-goal ffa-game-goal 1)
	(disable-self)
)
#else
#load-if-not-defined UP-ALLY-IN-GAME
#load-if-not-defined UP-2-PLAYER-GAME
(defrule
	(game-time > 13)
=>
	(set-goal nr-map-goal 1)
	(set-goal ffa-game-goal 1)
	(disable-self)
)
#end-if
#end-if
#end-if

;******************** MILITARY SUPERIORITY CODE ********************

; 1 = +5 units
; 2 = enemy has < 70% of our military

(defrule
	(military-population > 7)
	(or
		(military-population > 15)
		(players-military-population every-enemy < 4)
	)
	(or
		(military-population > 20)
		(players-military-population every-enemy < 10)
	)
	(or
		(military-population > 25)
		(players-military-population every-enemy < 15)
	)
	(or
		(military-population > 30)
		(players-military-population every-enemy < 20)
	)
	(players-military-population every-enemy < 25)
=>
	(set-strategic-number sn-military-level 1)
)
(defrule
	(military-population > 35)
	(or
		(military-population > 40)
		(players-military-population every-enemy < 30)
	)
	(or
		(military-population > 45)
		(players-military-population every-enemy < 35)
	)
	(or
		(military-population > 50)
		(players-military-population every-enemy < 40)
	)
	(or
		(military-population > 55)
		(players-military-population every-enemy < 45)
	)
	(players-military-population every-enemy < 50)
=>
	(set-strategic-number sn-military-level 1)
)
(defrule
	(military-population > 60)
	(or
		(military-population > 65)
		(players-military-population every-enemy < 55)
	)
	(or
		(military-population > 70)
		(players-military-population every-enemy < 60)
	)
	(or
		(military-population > 75)
		(players-military-population every-enemy < 65)
	)
	(or
		(military-population > 80)
		(players-military-population every-enemy < 70)
	)
	(players-military-population every-enemy < 75)
=>
	(set-strategic-number sn-military-level 1)
)
(defrule
	(military-population > 85)
	(or
		(military-population > 90)
		(players-military-population every-enemy < 80)
	)
	(or
		(military-population > 95)
		(players-military-population every-enemy < 85)
	)
	(or
		(military-population > 100)
		(players-military-population every-enemy < 90)
	)
	(or
		(military-population > 105)
		(players-military-population every-enemy < 95)
	)
	(players-military-population every-enemy < 100)
=>
	(set-strategic-number sn-military-level 1)
)
(defrule
	(military-population > 10)
	(or
		(military-population > 15)
		(players-military-population every-enemy < 2)
	)
	(or
		(military-population > 20)
		(players-military-population every-enemy < 10)
	)
	(or
		(military-population > 25)
		(players-military-population every-enemy < 14)
	)
	(or
		(military-population > 30)
		(players-military-population every-enemy < 17)
	)
	(players-military-population every-enemy < 21)
=>
	(set-strategic-number sn-military-level 2)
)
(defrule
	(military-population > 35)
	(or
		(military-population > 40)
		(players-military-population every-enemy < 24)
	)
	(or
		(military-population > 45)
		(players-military-population every-enemy < 28)
	)
	(or
		(military-population > 50)
		(players-military-population every-enemy < 31)
	)
	(or
		(military-population > 55)
		(players-military-population every-enemy < 35)
	)
	(players-military-population every-enemy < 38)
=>
	(set-strategic-number sn-military-level 2)
)
(defrule
	(military-population > 60)
	(or
		(military-population > 65)
		(players-military-population every-enemy < 42)
	)
	(or
		(military-population > 70)
		(players-military-population every-enemy < 45)
	)
	(or
		(military-population > 75)
		(players-military-population every-enemy < 49)
	)
	(or
		(military-population > 80)
		(players-military-population every-enemy < 52)
	)
	(players-military-population every-enemy < 56)
=>
	(set-strategic-number sn-military-level 2)
)
(defrule
	(military-population > 100)
	(or
		(military-population > 120)
		(players-military-population every-enemy < 70)
	)
	(or
		(military-population > 140)
		(players-military-population every-enemy < 84)
	)
	(players-military-population every-enemy < 98)
=>
	(set-strategic-number sn-military-level 2); test for rushing in pidm
)
(defrule
	(military-population > 23)
	(or
		(military-population > 28)
		(players-military-population every-enemy < 14)
	)
	(or
		(military-population > 35)
		(players-military-population every-enemy < 17)
	)
	(or
		(military-population > 40)
		(players-military-population every-enemy < 21)
	)
	(or
		(military-population > 45)
		(players-military-population every-enemy < 24)
	)
	(players-military-population every-enemy < 27)
=>
	(set-strategic-number sn-military-level 3)
)
(defrule
	(military-population > 50)
	(or
		(military-population > 55)
		(players-military-population every-enemy < 30)
	)
	(or
		(military-population > 60)
		(players-military-population every-enemy < 33)
	)
	(or
		(military-population > 65)
		(players-military-population every-enemy < 36)
	)
	(or
		(military-population > 70)
		(players-military-population every-enemy < 39)
	)
	(players-military-population every-enemy < 42)
=>
	(set-strategic-number sn-military-level 3)
)
(defrule
	(players-military-population any-enemy > 5)
	(or
		(military-population < 2)
		(players-military-population any-enemy > 10)
	)
	(or
		(military-population < 6)
		(players-military-population any-enemy > 15)
	)
	(or
		(military-population < 10)
		(players-military-population any-enemy > 20)
	)
	(or
		(military-population < 15)
		(players-military-population any-enemy > 25)
	)
	(military-population < 20)
=>
	(set-strategic-number sn-military-level -1)
)
(defrule
	(players-military-population any-enemy > 30)
	(or
		(military-population < 25)
		(players-military-population any-enemy > 35)
	)
	(or
		(military-population < 30)
		(players-military-population any-enemy > 40)
	)
	(or
		(military-population < 35)
		(players-military-population any-enemy > 45)
	)
	(or
		(military-population < 40)
		(players-military-population any-enemy > 50)
	)
	(military-population < 45)
=>
	(set-strategic-number sn-military-level -1)
)
(defrule
	(players-military-population any-enemy > 55)
	(or
		(military-population < 50)
		(players-military-population any-enemy > 60)
	)
	(or
		(military-population < 55)
		(players-military-population any-enemy > 65)
	)
	(or
		(military-population < 60)
		(players-military-population any-enemy > 70)
	)
	(or
		(military-population < 65)
		(players-military-population any-enemy > 75)
	)
	(military-population < 70)
=>
	(set-strategic-number sn-military-level -1)
)
(defrule
	(players-military-population any-enemy > 80)
	(or
		(military-population < 75)
		(players-military-population any-enemy > 85)
	)
	(or
		(military-population < 80)
		(players-military-population any-enemy > 90)
	)
	(or
		(military-population < 85)
		(players-military-population any-enemy > 95)
	)
	(or
		(military-population < 90)
		(players-military-population any-enemy > 100)
	)
	(military-population < 95)
=>
	(set-strategic-number sn-military-level -1)
)
(defrule
	(strategic-number sn-infantry-threat < 1)
	(or 
		(or
			(or
				(players-unit-type-count any-enemy militiaman-line > 6)
				(players-unit-type-count any-enemy eagle-warrior-line > 6)
			)
			(or
				(players-unit-type-count any-enemy teutonic-knight-line > 4)
				(players-unit-type-count any-enemy berserk-line > 4)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy samurai-line > 4)
				(players-unit-type-count any-enemy woad-raider-line > 4)
			)
			(players-unit-type-count any-enemy jaguar-man-line > 4)
		)
	)
=>
	(set-strategic-number sn-infantry-threat 1)
)
(defrule
	(strategic-number sn-infantry-threat < 1)
	(or
		(players-unit-type-count any-enemy huskarl-line > 6)
		(players-unit-type-count any-enemy throwing-axeman-line > 6)
	)
=>
	(set-strategic-number sn-infantry-threat 1)
)
(defrule
	(strategic-number sn-infantry-threat < 2)
	(or 
		(or
			(or
				(players-unit-type-count any-enemy militiaman-line > 12)
				(players-unit-type-count any-enemy eagle-warrior-line > 12)
			)
			(or
				(players-unit-type-count any-enemy teutonic-knight-line > 10)
				(players-unit-type-count any-enemy berserk-line > 10)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy samurai-line > 10)
				(players-unit-type-count any-enemy woad-raider-line > 10)
			)
			(players-unit-type-count any-enemy jaguar-man-line > 12)
		)
	)
=>
	(set-strategic-number sn-infantry-threat 2)
)
(defrule
	(strategic-number sn-infantry-threat < 2)
	(or 
		(or
			(and
				(players-unit-type-count any-enemy spearman-line > 18)
				(unit-type-count cavalry-units > 20)
			)
			(players-unit-type-count any-enemy huskarl-line > 12)
		)
		(players-unit-type-count any-enemy throwing-axeman-line > 12)
	)
=>
	(set-strategic-number sn-infantry-threat 2)
)
(defrule
	(strategic-number sn-infantry-threat < 2)
	(or 
		(or
			(or
				(players-unit-type-count any-enemy militiaman-line > 20)
				(players-unit-type-count any-enemy eagle-warrior-line > 20)
			)
			(or
				(players-unit-type-count any-enemy teutonic-knight-line > 15)
				(players-unit-type-count any-enemy berserk-line > 15)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy samurai-line > 15)
				(players-unit-type-count any-enemy woad-raider-line > 15)
			)
			(players-unit-type-count any-enemy jaguar-man-line > 15)
		)
	)
=>
	(set-strategic-number sn-infantry-threat 3)
)
(defrule
	(strategic-number sn-infantry-threat < 3)
	(or 
		(or
			(and
				(players-unit-type-count any-enemy spearman-line > 25)
				(unit-type-count cavalry-units > 20)
			)
			(players-unit-type-count any-enemy huskarl-line > 16)
		)
		(players-unit-type-count any-enemy throwing-axeman-line > 15)
	)
=>
	(set-strategic-number sn-infantry-threat 3)
)
(defrule
	(strategic-number sn-infantry-threat < 3)
	(or 
		(or
			(or
				(players-unit-type-count any-enemy militiaman-line > 36)
				(players-unit-type-count any-enemy eagle-warrior-line > 36)
			)
			(or
				(players-unit-type-count any-enemy teutonic-knight-line > 24)
				(players-unit-type-count any-enemy berserk-line > 24)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy samurai-line > 24)
				(players-unit-type-count any-enemy woad-raider-line > 24)
			)
			(players-unit-type-count any-enemy jaguar-man-line > 24)
		)
	)
=>
	(set-strategic-number sn-infantry-threat 4)
)
(defrule
	(strategic-number sn-infantry-threat < 4)
	(or 
		(or
			(and
				(players-unit-type-count any-enemy spearman-line > 46)
				(unit-type-count cavalry-units > 20)
			)
			(players-unit-type-count any-enemy huskarl-line > 24)
		)
		(players-unit-type-count any-enemy throwing-axeman-line > 24)
	)
=>
	(set-strategic-number sn-infantry-threat 4)
)
(defrule
	(game-time < 1500)
	(players-building-type-count every-enemy castle > 0); early enemy castle and ranged uu civ
	(or
		(or
			(players-civ any-enemy briton)
			(players-civ any-enemy chinese)
		)
		(or
			(or
				(players-civ any-enemy mayan)
				(players-civ any-enemy mongol)
			)
			(or
				(players-civ any-enemy spanish)
				(players-civ any-enemy turkish)
			)
		)
	)
=>
	(set-strategic-number sn-archer-threat 1)
)
(defrule
	(or
		(players-unit-type-count any-enemy hand-cannoneer > 6)
		(or
			(players-unit-type-count any-enemy conquistador-line > 4)
			(players-unit-type-count any-enemy janissary-line > 4)
		)
	)
=>
	(set-strategic-number sn-archer-threat 1)
)
(defrule
	(or 
		(or
			(players-unit-type-count any-enemy archer-line > 13)
			(or
				(players-unit-type-count any-enemy chu-ko-nu-line > 9)
				(players-unit-type-count any-enemy longbowman-line > 9)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy plumed-archer-line > 9)
				(players-unit-type-count any-enemy mangudai-line > 9)
			)
			(or
				(players-unit-type-count any-enemy cavalry-archer-line > 9)
				(players-unit-type-count any-enemy war-wagon-line > 9)
			)
		)
	)
=>
	(set-strategic-number sn-archer-threat 2)
)
(defrule
	(or
		(or
			(or
				(players-unit-type-count any-enemy elephant-archer > 9)
				(players-unit-type-count any-enemy genoese-crossbowman > 9)
			)
			(players-unit-type-count any-enemy hand-cannoneer > 13)
		)
		(or
			(players-unit-type-count any-enemy conquistador-line > 9)
			(players-unit-type-count any-enemy janissary-line > 9)
		)
	)
=>
	(set-strategic-number sn-archer-threat 2)
)
(defrule
	(or 
		(or
			(players-unit-type-count any-enemy archer-line > 25)
			(or
				(players-unit-type-count any-enemy chu-ko-nu-line > 20)
				(players-unit-type-count any-enemy longbowman-line > 20)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy plumed-archer-line > 20)
				(players-unit-type-count any-enemy mangudai-line > 20)
			)
			(or
				(players-unit-type-count any-enemy cavalry-archer-line > 20)
				(players-unit-type-count any-enemy war-wagon-line > 20)
			)
		)
	)
=>
	(set-strategic-number sn-archer-threat 3)
)
(defrule
	(or 
		(or
			(players-unit-type-count any-enemy genoese-crossbowman > 50)
			(or
				(players-unit-type-count any-enemy chu-ko-nu-line > 50)
				(players-unit-type-count any-enemy longbowman-line > 50)
			)
		)
		(or
			(or
				(players-unit-type-count any-enemy plumed-archer-line > 50)
				(players-unit-type-count any-enemy mangudai-line > 50)
			)
			(or
				(players-unit-type-count any-enemy cavalry-archer-line > 50)
				(players-unit-type-count any-enemy war-wagon-line > 40)
			)
		)
	)
=>
	(set-strategic-number sn-archer-threat 4)
)
(defrule
	(or
		(or
			(or
				(players-unit-type-count any-enemy magyar-huszar > 4)
				(players-unit-type-count any-enemy boyar > 4)
			)
			(or
				(or
					(players-unit-type-count any-enemy knight-line > 4)
					(players-unit-type-count any-enemy scout-cavalry-line > 4)
				)
				(or
					(players-unit-type-count any-enemy tarkan-line > 3)
					(players-unit-type-count any-enemy war-elephant-line > 2)
				)
			)
		)
		(or
			(players-unit-type-count any-enemy camel-line > 4)
			(players-unit-type-count any-enemy cataphract-line > 4)
		)
	)
=>
	(set-strategic-number sn-cavalry-threat 1)
)
(defrule
	(or
		(or
			(or
				(players-unit-type-count any-enemy magyar-huszar > 10)
				(players-unit-type-count any-enemy boyar > 10)
			)
			(or
				(or
					(players-unit-type-count any-enemy knight-line > 10)
					(players-unit-type-count any-enemy scout-cavalry-line > 10)
				)
				(or
					(players-unit-type-count any-enemy tarkan-line > 10)
					(players-unit-type-count any-enemy war-elephant-line > 8)
				)
			)
		)
		(or
			(players-unit-type-count any-enemy camel-line > 10)
			(players-unit-type-count any-enemy cataphract-line > 10)
		)
	)
=>
	(set-strategic-number sn-cavalry-threat 2)
)
(defrule
	(or
		(or
			(or
				(players-unit-type-count any-enemy magyar-huszar > 16)
				(players-unit-type-count any-enemy boyar > 16)
			)
			(or
				(or
					(players-unit-type-count any-enemy knight-line > 16)
					(players-unit-type-count any-enemy scout-cavalry-line > 16)
				)
				(or
					(players-unit-type-count any-enemy tarkan-line > 16)
					(players-unit-type-count any-enemy war-elephant-line > 12)
				)
			)
		)
		(or
			(players-unit-type-count any-enemy camel-line > 16)
			(players-unit-type-count any-enemy cataphract-line > 16)
		)
	)
=>
	(set-strategic-number sn-cavalry-threat 3)
)
(defrule
	(or
		(or
			(or
				(players-unit-type-count any-enemy magyar-huszar > 26)
				(players-unit-type-count any-enemy boyar > 22)
			)
			(or
				(or
					(players-unit-type-count any-enemy knight-line > 22)
					(players-unit-type-count any-enemy scout-cavalry-line > 26)
				)
				(or
					(players-unit-type-count any-enemy tarkan-line > 22)
					(players-unit-type-count any-enemy war-elephant-line > 22)
				)
			)
		)
		(or
			(players-unit-type-count any-enemy camel-line > 22)
			(players-unit-type-count any-enemy cataphract-line > 22)
		)
	)
=>
	(set-strategic-number sn-cavalry-threat 4)
)
(defrule
	(or
		(or
			(players-unit-type-count any-enemy camel-line > 9)
			(players-unit-type-count any-enemy spearman-line > 12)
		)
		(or
			(players-unit-type-count any-enemy mameluke-line > 9)
			(and
				(game-time < 1380)
				(players-unit-type-count any-enemy spearman-line > 6)
			)
		)
	)
=>
	(set-goal anti-cavalry-threat-goal 1)
)
(defrule
	(or
		(players-unit-type-count any-enemy scout-cavalry-line > 9)
		(or
			(players-unit-type-count any-enemy eagle-warrior-line > 9)
			(goal enemy-goal eagle-warrior)
		)
	)
=>
	(set-goal anti-monk-threat-goal 1)
)
#load-if-not-defined UP-AVAILABLE ; in UP monks count as military, so this doesn't work anymore
(defrule
	(players-military-population every-enemy < 4)
	(players-population every-enemy > 40)
	(or
		(players-civilian-population every-enemy < 35); uses the fact monk count neither to military nor civilian population	
		(players-population every-enemy > 45)
	)
	(or
		(players-civilian-population every-enemy < 38)
		(players-population every-enemy > 48)
	)
	(or
		(players-civilian-population every-enemy < 41)
		(players-population every-enemy > 51)
	)
	(players-civilian-population every-enemy < 44)
=>
	(set-goal monk-threat-goal 1)
)
#end-if
(defrule
	(or
		(players-unit-type-count any-enemy monk > 5)
		(and
			(game-time < 1200)
			(players-building-type-count any-enemy monastery > 1)
		)
	)
	(or
		(game-time < 1500)
		(players-unit-type-count any-enemy monk > 11)
	)
=>
	(set-goal monk-threat-goal 1)
)
(defrule
	(goal enemy-sighted-goal 0)
	(unit-type-count 363 == 0)
	(unit-type-count 364 == 0)
	(unit-type-count 365 == 0)
	(unit-type-count 366 == 0)
	(unit-type-count 367 == 0)
	(unit-type-count 375 == 0)
	(unit-type-count 377 == 0)
	(unit-type-count 378 == 0)
	(unit-type-count 380 == 0)
	(unit-type-count 507 == 0)
	(unit-type-count 519 == 0)
	(unit-type-count 475 == 0)
	(unit-type-count 476 == 0)
	(unit-type-count 477 == 0)
=>
	(set-goal enemy-sighted-goal -1); and no arrows of me => no danger
)
(defrule
	(unit-type-count trebuchet == 0)
	(unit-type-count unpacked-trebuchet == 0)
=>
	(set-strategic-number sn-trebuchet-count 0))
(defrule
	(or (and (unit-type-count trebuchet == 1)
	(unit-type-count unpacked-trebuchet == 0))
	(and (unit-type-count trebuchet == 0)
	(unit-type-count unpacked-trebuchet == 1)))
=>
	(set-strategic-number sn-trebuchet-count 1))
(defrule
	(or (or (and (unit-type-count trebuchet == 2)
	(unit-type-count unpacked-trebuchet == 0))
	(and (unit-type-count trebuchet == 1)
	(unit-type-count unpacked-trebuchet == 1)))
	(and (unit-type-count trebuchet == 0)
	(unit-type-count unpacked-trebuchet == 2)))
=>
	(set-strategic-number sn-trebuchet-count 2))
(defrule
	(or (or (and (unit-type-count-total trebuchet == 3)
	(unit-type-count unpacked-trebuchet == 0))
	(and (unit-type-count-total trebuchet == 2)
	(unit-type-count unpacked-trebuchet == 1)))
	(or (and (unit-type-count-total trebuchet == 1)
	(unit-type-count unpacked-trebuchet == 2))
	(and (unit-type-count-total trebuchet == 0)
	(unit-type-count unpacked-trebuchet == 3))))
=>
	(set-strategic-number sn-trebuchet-count 3))
(defrule
	(or (or (and (unit-type-count-total trebuchet >= 4)
	(unit-type-count unpacked-trebuchet >= 0))
	(and (unit-type-count-total trebuchet >= 3)
	(unit-type-count unpacked-trebuchet >= 1)))
	(or (and (unit-type-count-total trebuchet >= 2)
	(unit-type-count unpacked-trebuchet >= 2))
	(and (unit-type-count-total trebuchet >= 1)
	(unit-type-count unpacked-trebuchet >= 3))))
=>
	(set-strategic-number sn-trebuchet-count 4))
(defrule
	(unit-type-count-total trebuchet >= 0)
	(unit-type-count unpacked-trebuchet >= 4)
=>
	(set-strategic-number sn-trebuchet-count 4))

; Following rules help to make up for poor scouting.
(defrule
	(game-time > 900)
	(game-time < 1800)
	(strategic-number sn-cavalry-threat == 0)
	(or
		(players-unit-type-count any-enemy knight-line > 0)
		(game-time < 1320)
	)
	(players-building-type-count any-enemy stable > 0)

=>
	(set-strategic-number sn-cavalry-threat 1)
)
(defrule
	(strategic-number sn-cavalry-threat < 2)
	(or
		(and
			(and
				(game-time < 1500)
				(players-unit-type-count any-enemy knight-line > 3)
			)
			(or
				(players-unit-type-count any-enemy knight-line > 5)
				(game-time < 1320)
			)
		)
		(players-building-type-count any-enemy stable > 1)
	)
=>
	(set-strategic-number sn-cavalry-threat 2)
)
(defrule
	(game-time > 1020)
	(game-time < 1260)
	(goal strategy-goal flush)
	(strategic-number sn-cavalry-threat == 0)
	(players-building-type-count every-enemy barracks < 1)
	(players-building-type-count every-enemy archery-range == 0)
	(players-military-population every-enemy < 2)
	(players-building-type-count every-enemy market == 0)
	(nor
		(players-civ any-enemy aztec)
		(players-civ any-enemy mayan)
	)
=>
	(set-strategic-number sn-cavalry-threat 1)
)
#load-if-defined DEATH-MATCH
(defrule
	(strategic-number sn-cavalry-threat < 1)
	(current-age >= castle-age)
	(game-time < 480)
	(nor 
		(or
			(players-civ every-enemy gothic)
			(players-civ every-enemy korean)
		)
		(or
			(players-civ every-enemy viking)
			(players-civ every-enemy briton)
		)
	)
	(nor 
		(players-civ every-enemy japanese)
		(goal meso-enemy-goal 1)
	)
=>
	(set-strategic-number sn-cavalry-threat 1)
)
#end-if
(defrule
	(strategic-number sn-archer-threat < 1)
	(players-current-age every-enemy < imperial-age)
	(players-current-age-time every-enemy < 600)
	(players-building-type-count any-enemy archery-range > 1)
=>
	(set-strategic-number sn-archer-threat 1)
)

; Scouting

#load-if-not-defined DEATH-MATCH
(defrule
	(or
		(players-building-type-count every-enemy dock == 0)
		(and
			(warboat-count > 7)
			(players-building-type-count any-enemy dock == 0)
		)
	)
	(warboat-count > 0)
	(strategic-number sn-number-boat-explore-groups < 1)
	(nand
		(warboat-count < 6)
		(unit-type-count revealer > 0)
	)
=>
	(set-strategic-number sn-number-boat-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 2)
	(chat-local-to-self "search enemy docks")
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == feudal-age)
	(goal strategy-goal flush)
	(military-population > 7); reconaissance
	(players-current-age any-enemy == castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
=>
	(disable-timer scouting-timer)
	(enable-timer scouting-timer 120)
	(set-strategic-number sn-percent-attack-soldiers 1)
	(attack-now)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(players-current-age any-enemy == castle-age)
	(players-military-population any-enemy < 4)
=>
	(disable-timer scouting-timer)
	(enable-timer scouting-timer 120)
	(set-strategic-number sn-percent-attack-soldiers 1)
	(attack-now)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(unit-type-count knight-line == 0)
			(strategic-number sn-military-level >= 0)
		)
		(game-time >= 1380)
	)
	(game-time > 1140)
	(game-time < 1800)
	(timer-triggered scouting-timer)
	(strategic-number sn-infantry-threat == 0)
	(strategic-number sn-archer-threat == 0)
	(strategic-number sn-cavalry-threat == 0)
	(goal monk-threat-goal 0)
=>
	(enable-timer scouting-timer 180)
	(set-strategic-number sn-percent-attack-soldiers 1)
	(attack-now)
)
(defrule
	(game-time > 600)
	(players-building-count every-enemy > 0)
	(or
		(or
			(strategic-number sn-infantry-threat >= 1)
			(strategic-number sn-archer-threat >= 1)
		)
		(or
			(strategic-number sn-cavalry-threat >= 1)
			(goal monk-threat-goal 1)
		)
	)
=>
	(set-strategic-number sn-number-explore-groups 0);disable scouting when found threats to not waste units
)
#end-if; NOT WONDER-RACE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(and
				(strategic-number sn-infantry-threat == 0)
				(strategic-number sn-archer-threat == 0)
			)
			(and
				(strategic-number sn-cavalry-threat == 0)
				(goal monk-threat-goal 0)
			)
		)
		(players-building-count any-enemy == 0)
	)
	(strategic-number sn-number-explore-groups == 0)
=>
	(set-strategic-number sn-number-explore-groups 1); restart scouting when no threats found
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(players-current-age any-enemy == feudal-age)
	(players-current-age-time any-enemy > 360); enemy in feudal age for 6+ mins
	(game-time < 1320)
	(players-military-population any-enemy < 2); yet no military
	(players-building-count any-enemy == 0); not all enemy sighted
	(military-population > 10)
=>
	(set-strategic-number sn-number-explore-groups 3); find the sling
	(set-strategic-number sn-total-number-explorers 3)
	(disable-self)
)
#load-if-not-defined WONDER-RACE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(nor
		(players-civ every-enemy gothic)
		(players-civ every-enemy viking)
	)
	(nor
		(players-civ every-enemy japanese)
		(goal meso-enemy-goal 1)
	)
	(strategic-number sn-cavalry-threat == 0)
	(strategic-number sn-number-explore-groups == 0)
=>
	(set-strategic-number sn-number-explore-groups 1);resume exploring
)
(defrule
	(or
		(players-civ any-enemy aztec)
		(or
			(players-civ any-enemy mayan)
			(players-civ any-enemy incan)
		)
	)
=>
	(set-goal meso-enemy-goal 1)
	(disable-self)
)
#load-if-not-defined POPULATION-CAP-25
#load-if-not-defined UP-MICHI-STYLE
;gather information about what the enemy (mainly 1v1) is doing
(defrule
	(current-age == dark-age); we have +2 villagers, so enemy feudals early?! => flush
	(unit-type-count villager >= 22); or +3 villagers as meso as they start with either one more or free loom and save time.
	(or
		(players-civilian-population every-enemy < fd-pop1)
		(unit-type-count villager >= 23)
	)
	(or
		(players-civilian-population every-enemy < fd-pop2)
		(unit-type-count villager >= 24)
	)
	(or
		(players-civilian-population every-enemy < fd-pop3)
		(unit-type-count villager >= 25)
	)
	(players-civilian-population every-enemy < fd-pop4)
=>
	(set-goal enemy-goal flush)
)
(defrule
	(current-age == dark-age); we have +2 villagers, so enemy feudals early?! => flush
	(unit-type-count villager >= 26)
	(or
		(players-civilian-population every-enemy < fd-pop5)
		(unit-type-count villager >= 27)
	)
	(or
		(players-civilian-population every-enemy < fd-pop6)
		(unit-type-count villager >= 28)
	)
	(or
		(players-civilian-population every-enemy < fd-pop7)
		(unit-type-count villager >= 29)
	)
	(or
		(players-civilian-population every-enemy < fd-pop8)
		(unit-type-count villager >= 30)
	)
	(players-civilian-population every-enemy < fd-pop9)
=>
	(set-goal enemy-goal flush)
)
(defrule
	(or
		(game-time < 1020)
		(players-military-population every-enemy > 11)
	)
	(players-current-age every-enemy == feudal-age)
	(players-military-population every-enemy > 4)
=>
	(set-goal enemy-goal flush)
)
(defrule
	(players-current-age every-enemy == dark-age)
	(or
		(goal ffa-game-goal 1)
		(or
			(players-civilian-population any-human-enemy > 24)
			(and
				(strategic-number sn-minimum-boar-hunt-group-size != 5)
				(players-civilian-population any-enemy > 26)
			)
		)
	)
	(goal enemy-goal flush)
=>
	(set-goal enemy-goal 0)
)
#load-if-defined CHINESE-CIV
(defrule
	(players-current-age every-enemy == dark-age)
	(or
		(or
			(starting-resources >= medium-resources); don't false trigger flush if chinese are able to keep their villager advantage
			(regicide-game)
		)
		(difficulty == hardest)
	)
	(goal enemy-goal flush)
=>
	(set-goal enemy-goal 0)
)
#end-if
(defrule
	(players-current-age every-enemy == castle-age)
	(game-time < 1200)
	(players-military-population every-enemy < 3); enemy fast castle without military could be rush so better be prepared
	(nor
		(goal enemy-goal rush)
		(goal enemy-goal eagle-warrior)
	)
=>
	(set-goal enemy-goal rush)
	(chat-to-player my-player-number "enemy fast castle")
)
#load-if-not-defined DEATH-MATCH
#load-if-not-defined HIGH-RESOURCES-START
#load-if-not-defined DIFFICULTY-HARDEST
(defrule
	(game-time < 1260)
	(players-current-age any-enemy >= castle-age)
	(players-military-population every-enemy > 5)
	(goal enemy-goal flush)
=>
	(set-goal enemy-goal ss)
	(chat-to-player my-player-number "enemy not flushing")
)
(defrule
	(players-civ every-enemy aztec)
	(or 
		(players-building-type-count any-enemy castle > 0)
		(players-unit-type-count any-enemy jaguar-man-line > 0)
	)
	(or
		(game-time < 1500)
		(goal monk-threat-goal 1)
	)
	(not (goal enemy-goal castle))
=>
	(set-goal enemy-goal castle)
	(chat-to-player my-player-number "enemy uu + monk strategy detected")
)
(defrule
	(game-time < 1720)
	(not (goal enemy-goal castle))
	(or
		(and
			(players-current-age every-enemy == feudal-age)
			(not (goal enemy-goal flush))
		)
		(players-unit-type-count any-enemy skirmisher-line > 8)
	)
	(players-military-population any-enemy >= 6)
=>
	(set-goal enemy-goal ss)
	(chat-to-player my-player-number "enemy trash strategy detected")
	(disable-self)
)
(defrule
	(game-time < 1500)
	(or
		(or
			(players-unit-type-count every-enemy eagle-warrior-line > 7)
			(and
				(players-building-type-count every-enemy barracks > 2)
				(players-unit-type-count every-enemy militiaman-line < 3)
			)
		)
		(and
			(game-time < 1200)
			(and
				(players-building-type-count every-enemy barracks > 1)
				(players-military-population every-enemy < 2)
			)
		)
	)
=>
	(set-goal enemy-goal eagle-warrior)
	(chat-to-player my-player-number "24enemy EW rush detected")
	(disable-self)
)
(defrule
	(game-time < 1500)
	(players-unit-type-count every-enemy eagle-warrior-line > 4)
	(players-current-age-time every-enemy < 150)
=>
	(set-goal enemy-goal eagle-warrior)
	(chat-to-player my-player-number "24enemy EW rush detected")
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if ; not michi
#else
(defrule
	(strategic-number sn-current-age == castle)
	(not (goal strategy-goal fast-imp))
=>
	(set-goal strategy-goal fast-imp)
)
#end-if ; pop-25
(defrule
	(or
		(goal under-attack-goal 1)
		(or
			(and
				(strategic-number sn-maximum-town-size >= 40)
				(strategic-number sn-minimum-water-body-size-for-dock < water-islands); TSA is not used on islands
			)
			(strategic-number sn-number-attack-groups > 0)
		)
	)
	(building-type-count-total town-center > 0)
=>
	(set-goal hostilities-goal 1)
	(set-strategic-number sn-gather-defense-units 0)
)

;******************** STRATEGY SELECTION ********************
(defrule
	(game-time < 30)
	(goal strategy-goal flush)
	(or
		(or
			(goal unit-goal my-unique-unit-line)
			(goal unit-goal knight)
		)
		(civ-selected saracen)
	)
=>
	(set-goal unit-goal default-flush-unit); debug
)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal -1)
	(goal enemy-goal flush)
	(nor 
		(or
			(goal control-goal aggressive-rush)
			(goal control-goal shot)
		)
		(or
			(goal strategy-goal sling)
			(goal position-goal pocket)
		)
	)
	(strategic-number sn-current-age == dark); not too early, if the enemy just had idle TC and we have no food for feudal
	(food-amount >= 430)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(set-strategic-number sn-task-ungrouped-soldiers 1); spread military to find forward towers, set back after 6 mins
	(enable-timer spread-military-timer 360)
)
#load-if-not-defined FRANKISH-CIV
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall < 15); not on walled maps
	(goal enemy-goal flush)
	(current-age == dark-age)
	(goal control-goal aggressive-rush)
	(not (goal position-goal pocket))
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(set-goal control-goal 0)
)
#else
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall < 15); not on walled maps
	(goal enemy-goal flush)
	(current-age == dark-age)
	(goal control-goal aggressive-rush)
	(not (player-in-game any-ally))
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(set-goal control-goal 0)
)
#end-if
#end-if
#load-if-not-defined UP-AVAILABLE
#load-if-not-defined BRITON-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age < fc-transit)
	(goal strategy-goal rush)
	(goal unit-goal knight)
=>
	(set-goal control-goal aggressive-rush)
)
#end-if
#end-if
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall < 15); not on walled maps
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal rush)
	(goal enemy-goal flush)
	(or
		(goal unit-goal ss)
		(goal unit-goal my-unique-unit-line)
	)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(set-goal control-goal belated-flush-defense); change gatherer percentages to collect more wood
	(chat-to-player my-player-number "countering enemy flush with feudal war")
)
#load-if-not-defined BRITON-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall < 15); not on walled maps
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal rush)
	(goal enemy-goal flush)
	(nor
		(or
			(goal control-goal aggressive-rush)
			(goal control-goal shot)
		)
		(goal position-goal pocket)
	)
	(building-type-count barracks > 0)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(set-goal control-goal belated-flush-defense); change gatherer percentages to collect more wood
	(chat-to-player my-player-number "countering enemy flush with feudal war")
)
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-defined DEATH-MATCH ; treat this as flush and build an army in feudal age.
(defrule
	(strategic-number sn-current-age == df-transit)
=>
	(set-goal enemy-goal flush)
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(disable-self)
)
#else
#load-if-not-defined SARACEN-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(nor
		(goal strategy-goal flush)
		(goal strategy-goal sling)
	)
	(or
		(building-type-count-total mining-camp == 0)
		(dropsite-min-distance gold < 0)
	)
	(strategic-number sn-current-age == feudal)
	(current-age-time < 10)
	(nor
		(town-under-attack)
		(goal unit-goal eagle-warrior)
	)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal no-gold-flush-unit)
	(set-strategic-number sn-maximum-gold-drop-distance 20)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal unit-goal my-unique-unit)
	(strategic-number sn-current-age == feudal)
	(current-age-time < 10)
	(or
		(dropsite-min-distance stone < 0); no stone found
		(dropsite-min-distance stone > 40); so switch strategy
	)
=>
	(set-goal unit-goal default-ranged); should work for all civs
)
#end-if
(defrule
	(or
		(and
			(player-in-game any-human-enemy)
			(or
				(or
					(map-type black-forest)
					(cc-players-unit-type-count 0 tree > heavy-wood)
				)
				(or
					(map-type mongolia)
					(map-type oasis)
				)
			)
		)
		(building-type-count stone-wall-line > 15)
	)
=>
	(set-goal nr-map-goal 1)
	(disable-self)
)

; *** STRATEGY DEPENDING ON CIV ***

#load-if-not-defined UP-MICHI-STYLE
#load-if-defined AZTEC-CIV
#load-if-not-defined NORMAL-MAP ; don't pick this strategy as flank in 3v3/4v4 TG
#load-if-not-defined LARGE-MAP
#load-if-not-defined GIANT-MAP
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-current-age < ci-transit)
	(game-time > 25)
	(random-number < 3)
	(or
		(nor
			(players-civ every-enemy aztec); EW rush will overrun us
			(or
				(players-civ every-enemy mayan); as will xbow rush
				(players-civ every-enemy briton)
			)
		)
		(building-type-count stone-wall > 15)
	)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal archer)
	(set-goal ranged-unit-type-goal archer)
	(set-goal control-goal 0)
	(disable-self)
)
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-current-age == castle)
	(or
		(and
			(goal strategy-goal boom)
			(or
				(goal unit-goal archer)
				(goal unit-goal eagle-warrior)
			)
		)
		(and
			(research-completed ri-elite-skirmisher)
			(goal unit-goal ss)
		)
	)
	(goal ranged-unit-type-goal archer)
	(building-type-count-total town-center >= tc-level-three)
=>
	(set-goal strategy-goal fast-imp)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal ffa-game-goal -1)
	(goal nr-map-goal -1)
	(strategic-number sn-current-age <= fc-transit)
	(nor
		(players-civ any-ally briton); don't play with too much ranged
		(players-civ any-ally mayan)
	)
	(random-number > 8)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal archer)
	(set-goal control-goal aggressive-rush)
	(disable-self)
)
#load-if-not-defined DEATH-MATCH
#load-if-defined UP-AVAILABLE
(defrule
	(game-time < 850)
	(strategic-number sn-current-age >= fc-transit)
	(goal unit-goal eagle-warrior)
	(goal control-goal 0)
=>
	(set-goal control-goal aggressive-rush)
	(chat-to-player my-player-number "aggressive EW rush")
)
#else
(defrule
	(or
		(or
			(players-civ every-enemy japanese)
			(players-civ every-enemy aztec)
		)
		(or
			(goal ffa-game-goal 1)
			(players-civ every-enemy gothic)
		)
	)
	(random-number > 2)
	(random-number < 5)
=>
	(set-goal unit-goal my-unique-unit-line)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall > 15)
	(random-number > 6)
	(game-time > 20)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal 0)
	(disable-self)
)
(defrule
	(or
		(goal meso-enemy-goal -1)
		(building-type-count-total stone-wall > 15)
	)
	(or
		(random-number == 5)
		(random-number == 6)
	)
	(game-time > 30)
	(not (goal control-goal shot))
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal monk)
	(set-goal ranged-unit-type-goal monk)
	(disable-self)
)
(defrule
	(or
		(strategic-number sn-archer-threat > 1)
		(and
			(players-building-type-count every-enemy archery-range > 1)
			(game-time < 1500)
		)
	)
	(goal unit-goal archer)
	(goal strategy-goal boom)
	(building-type-count stone-wall < 15)
	(building-type-count-total monastery > 0)
	(strategic-number sn-current-age < ci-transit)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal ss)
)
#end-if
(defrule
	(or
		(or
			(players-unit-type-count any-enemy huskarl-line > 15)
			(players-unit-type-count any-enemy samurai-line > 15)
		)
		(or
			(and
				(strategic-number sn-cavalry-threat > 3)
				(goal anti-monk-threat-goal 0)
			)
			(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		)
	)
=>
	(set-goal ranged-unit-type-goal monk)
	(disable-self)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(or
		(and
			(goal unit-goal archer)
			(goal strategy-goal flush)
		)
		(and
			(goal enemy-goal castle)
			(goal unit-goal eagle-warrior)
		)
	)
=>
	(set-goal unit-goal mix)
)
(defrule
	(goal unit-goal monk)
	(or
		(and
			(building-type-count-total barracks > 0)
			(building-type-count-total monastery < 2)
		)
		(research-completed ri-long-swordsman)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(or
		(or
			(goal strategy-goal boom)
			(goal strategy-goal fast-imp)
		)
		(and
			(goal unit-goal ss)
			(goal ranged-unit-type-goal archer)
		)
	)
	(not (goal unit-goal monk))
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(strategic-number sn-current-age < ci-transit)	
	(goal unit-goal eagle-warrior)
	(goal strategy-goal rush)
	(or
		(military-population > 60)
		(unit-type-count-total eagle-warrior-line > 45)
	)	
=>
	(set-goal unit-goal eagle-warrior)
	(set-goal strategy-goal fast-imp)
	(set-goal ranged-unit-type-goal 0)
)
(defrule
	(strategic-number sn-current-age < ci-transit)
	(or
		(random-number == 3)
		(random-number == 4)
	)
	(game-time > 13)
	(goal nr-map-goal 1)
=>
	(set-goal unit-goal eagle-warrior)
	(set-goal strategy-goal fast-imp)
	(set-goal ranged-unit-type-goal 0)
)
(defrule
	(or 
		(players-building-type-count every-enemy castle > 0)
		(or
			(players-unit-type-count any-enemy teutonic-knight-line > 0)
			(players-unit-type-count any-enemy cataphract-line > 0)
		)
	)
	(game-time < 1500)
=>
	(set-goal unit-goal mix)
)
(defrule
	(nor 
		(goal control-goal my-unique-unit-line)
		(goal unit-goal my-unique-unit-line)
	)
	(civilian-population > 90)
	(or
		(and
			(strategic-number sn-current-age >= ci-transit)
			(game-time > 3000)
		)
		(and
			(food-amount > 400)
			(gold-amount < 100)
		)
	)
	(current-age-time > 300)
=>
	(set-goal control-goal militiaman-line)
	(chat-to-player my-player-number "research m@a and long-swordsman")
	(disable-self)
)
(defrule
	(game-time < 2100)
	(players-current-age any-enemy == imperial-age)
	(or
		(goal unit-goal mix)
		(goal unit-goal eagle-warrior)
	)
	(players-unit-type-count any-enemy eagle-warrior-line > 5)
=>
	(set-goal control-goal militiaman-line)
	(chat-to-player my-player-number "research m@a and long-swordsman")
	(disable-self)
)
(defrule
	(food-amount > 150)
	(or
		(gold-amount < 50)
		(food-amount > 300)
	)
	(or
		(and
			(research-completed ri-iron-casting)
			(and
				(goal unit-goal eagle-warrior)
				(goal enemy-goal eagle-warrior)
			)
		)
		(and
			(goal unit-goal monk)
			(players-unit-type-count any-enemy eagle-warrior-line > 7)
		)
	)	
=>
	(set-goal control-goal militiaman-line)
	(chat-to-player my-player-number "long-swordsman to counter EW rush")
	(disable-self)
)
#load-if-not-defined RIVERS-MAP
#load-if-not-defined BALTIC-MAP
(defrule
	(or
		(and
			(strategic-number sn-current-age >= ci-transit)
			(and
				(goal control-goal militiaman-line)
				(research-completed ri-long-swordsman)
			)
		)
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	)
	(nand
		(unit-type-count-total eagle-warrior-line > 20); go for eew instead as some enemy still may have ranged units
		(strategic-number sn-archer-threat > 0)
	)
=>
	(set-goal unit-goal militiaman-line)
	(disable-self)
)
#end-if
#end-if
(defrule
	(not (goal control-goal shot))
	(strategic-number sn-infantry-threat >= 3)
	(dropsite-min-distance stone < 5)
	(building-type-count-total town-center >= tc-level-two)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(building-type-count castle > 1)
	(goal control-goal my-unique-unit-line)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(disable-self)
)
(defrule
	(building-type-count castle > 0)
	(research-available my-unique-research)
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(or
		(map-type baltic)
		(map-type rivers)
	)
	(current-age < castle-age)
	(goal unit-goal eagle-warrior)
	(players-unit-type-count any-enemy galley-line > 0)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock water-islands)
	(set-goal strategy-goal rush)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(map-type baltic)
		(map-type rivers)
	)	
	(goal unit-goal eagle-warrior)
	(or
		(goal enemy-boats-goal 0)
		(warboat-count > 40)
	)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(players-building-type-count any-enemy watch-tower > 3)
		(and
			(and
				(players-unit-type-count every-enemy skirmisher-line > 7)
				(players-unit-type-count every-enemy militiaman-line < 5)
			)
			(or
				(players-unit-type-count every-enemy skirmisher-line > 15)
				(game-time < 1500)
			)
		)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
	(disable-self)
)
(defrule
	(goal strategy-goal flush)
	(goal unit-goal archer)
	(strategic-number sn-current-age == fc-transit)	
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal archer)
	(set-goal control-goal aggressive-rush)
	(disable-self)
)
(defrule
	(strategic-number sn-current-age == dark)
	(player-in-game any-human-enemy)
	(or
		(goal control-goal aggressive-rush)
		(and
			(goal unit-goal eagle-warrior)
			(goal strategy-goal rush)
		)
	)
	(goal nr-map-goal 1)
=>
	(set-goal strategy-goal boom)
	(set-goal control-goal 0)
)
#end-if ; AZTEC CIV STRATEGY
#load-if-defined BRITON-CIV
(defrule
	(goal strategy-goal flush)
	(goal meso-enemy-goal 1)
	(goal enemy-goal rush)
=>
	(set-goal unit-goal militiaman-line)
	(disable-self)
)
(defrule
	(not (goal control-goal shot))
	(or
		(and
			(goal strategy-goal flush)
			(strategic-number sn-current-age == fc-transit)
		)
		(and
			(building-type-count castle > 0)
			(goal unit-goal archer)
		)
	)
=>
	(set-goal unit-goal mix)
	(set-goal control-goal my-unique-unit-line)
	(disable-self)
)
(defrule
	(research-available ri-man-at-arms)
	(or
		(and
			(or
				(or
					(players-unit-type-count any-enemy eagle-warrior-line > 14)
					(players-unit-type-count any-enemy huskarl-line > 20)
				)
				(goal enemy-goal eagle-warrior)
			)
			(unit-type-count villager >= 40)
		)
		(goal forward-threat-goal 1)
	)
=>
	(set-goal control-goal militiaman-line)
	(disable-self)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(random-number == 1)
=>
	(set-goal unit-goal knight)
	(set-goal strategy-goal rush)
	(disable-self)
)
(defrule
	(or
		(random-number == 2)
		(or
			(regicide-game)
			(map-type black-forest)
		)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal strategy-goal rush)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(or
		(or
			(player-in-game any-ally)
			(random-number > 6)
		)
		(players-civ every-enemy aztec)
	)
=>
	(set-goal unit-goal archer)
	(set-goal strategy-goal rush)
	(disable-self)
)
#else
(defrule
	(random-number > 6)
=>
	(set-goal unit-goal archer)
	(set-goal strategy-goal rush)
	(disable-self)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(or
		(or
			(random-number == 2)
			(regicide-game)
		)
		(goal nr-map-goal 1)
	)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-resource-control == 0)
	(building-type-count castle > 0)
	(research-available my-unique-research)
	(population >= del-civ-pop)
	(unit-type-count trade-cart > 10)
=>
	(set-strategic-number sn-resource-control 2)
)
#end-if ; BRITON STRATEGY
#load-if-defined BYZANTINE-CIV
(defrule
	(or
		(and
			(goal strategy-goal flush)
			(strategic-number sn-current-age == fc-transit)
		)
		(and
			(goal unit-goal ss)
			(goal enemy-goal eagle-warrior)
		)
	)	
	(building-type-count castle == 0)
=>
	(set-goal unit-goal mix)
	(disable-self)
)
(defrule
	(dropsite-min-distance stone < 5)
	(building-type-count-total town-center >= tc-level-three)
	(not (goal unit-goal my-unique-unit-line))
=>
	(set-goal control-goal my-unique-unit-line)
	(chat-to-player my-player-number "prepare for unique-units")
	(disable-self)
)
(defrule
	(building-type-count castle > 1)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to unique-units")
	(disable-self)
)
(defrule
	(goal ranged-unit-type-goal -1)
	(research-completed ri-halberdier)
	(food-amount < 300)
	(gold-amount > 700)
	(wood-amount > 400)
=>
	(set-goal ranged-unit-type-goal archer)
)
(defrule
	(random-number > 8)
	(current-age == feudal-age)
	(building-type-count-total archery-range == 0)
	(goal strategy-goal rush)
	(not (goal enemy-goal flush))
	(or
		(or
			(players-civ every-enemy hun)
			(players-civ every-enemy mongol)
		)
		(or
			(players-civ every-enemy persian)
			(players-civ every-enemy frankish)
		)
	)
=>
	(set-goal unit-goal knight)
)
#load-if-defined UP-AVAILABLE
(defrule
	(or
		(goal position-goal pocket)
		(or
			(building-type-count castle > 0)
			(goal nr-map-goal 1)
		)
	)
	(random-number >= 6)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(goal unit-goal militiaman-line)
	(or
		(strategic-number sn-current-age == fc-transit)
		(research-available ri-long-swordsman)
	)
=>
	(set-goal unit-goal ss)
	(set-goal control-goal 0)
)
(defrule
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(or
		(players-civ every-enemy mayan); archer flush
		(or
			(players-civ every-enemy hun); scout or archer flush
			(players-civ every-enemy mongol)
		)
	)
	
=>
	(set-goal unit-goal skirmisher)
)
(defrule
	(or
		(and
			(goal unit-goal knight)
			(game-time > 1800)
		)
		(and
			(goal unit-goal scorpion)
			(building-type-count town-center >= tc-level-four)
		)
	)
	(dropsite-min-distance stone < 6)
=>
	(set-goal control-goal my-unique-unit-line)
	(disable-self)
)
(defrule
	(or
		(goal unit-goal knight)
		(goal unit-goal scorpion)
	)
	(building-type-count castle > 0)
	(or
		(building-type-count castle > 1)
		(strategic-number sn-current-age >= ci-transit)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal control-goal 0)
)
#load-if-not-defined ARABIA-MAP
(defrule
	(current-age == dark-age)
	(random-number > 4)
=>
	(set-goal unit-goal knight)
	(set-goal strategy-goal rush)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(or
		(goal ffa-game-goal 1)
		(or
			(and
				(unit-type-count-total villager > 30)
				(goal strategy-goal flush)
			)
			(random-number > 9)
		)
	)
	(not (players-civ every-enemy aztec))
=>
	(set-goal unit-goal ss)
	(set-goal strategy-goal rush)
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#else
(defrule
	(current-age == dark-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(goal ffa-game-goal 1)
		(and
			(random-number > 6)
			(or
				(goal nr-map-goal 1)
				(random-number > 9)
			)
		)
	)
	(game-time > 13)
	(not (players-civ every-enemy aztec))
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(random-number < 7)
	(game-time > 25)
	(not (goal strategy-goal sling))
=>
	(set-goal unit-goal scorpion)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(random-number < 4)
	(building-type-count stone-wall-line < 15)
	(game-time > 25)
	(not (goal strategy-goal sling))
=>
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#end-if
#load-if-defined CHINESE-CIV
(defrule
	(nor
		(goal unit-goal knight)
		(goal unit-goal my-unique-unit-line)
	)
	(or
		(and
			(goal strategy-goal flush)
			(strategic-number sn-current-age >= fc-transit)
		)
		(and
			(goal unit-goal archer)
			(goal forward-threat-goal 1)
		)
	)
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knight")
)
(defrule
	(goal unit-goal knight)
	(goal strategy-goal rush)
	(strategic-number sn-current-age >= fc-transit)
	(goal ranged-unit-type-goal archer)
=>
	(set-goal ranged-unit-type-goal cavalry-archer)
	(disable-self)
)
(defrule
	(goal unit-goal knight)
	(or
		(goal control-goal 0)
		(goal control-goal aggressive-rush)
	)
	(or
		(and
			(building-type-count-total archery-range > 0)
			(building-type-count-total town-center >= tc-level-three)
		)
		(unit-type-count villager > fourty-percent-pop)
	)
	(dropsite-min-distance stone < 5)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to uu")
)
(defrule
	(goal unit-goal knight)
	(goal control-goal my-unique-unit-line)
	(goal anti-cavalry-threat-goal 1)
	(civilian-population > 80)
	(building-type-count castle > 0)
=>
	(set-goal unit-goal militiaman-line)
	(disable-self)
)
#load-if-defined ARABIA-MAP
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-current-age == dark)
	(unit-type-count-total villager > 20)
	(unit-type-count-total villager < 30)
	(food-amount > 500)
	(goal strategy-goal rush)
	(not (player-valid any-ally))
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(chat-to-player my-player-number "switch to flush")
	(disable-self)
)
#else
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(or
			(goal nr-map-goal 1)
			(building-type-count castle > 0)
		)
		(and
			(random-number < 3)
			(strategic-number sn-minimum-boar-hunt-group-size != 5)
		)
	)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(goal nr-map-goal 1)
	(random-number > 6)
	(game-time > 13)
=>
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal ffa-game-goal -1)
	(building-type-count-total stone-wall < 15)
	(building-type-count-total castle == 0)
	(random-number > 8)
=>
	(set-goal unit-goal archer)
	(set-goal strategy-goal rush)
	(set-goal control-goal aggressive-rush)
	(disable-self)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule
	(goal unit-goal knight)
	(or
		(goal control-goal 0)
		(goal control-goal aggressive-rush)
	)
	(or
		(players-building-type-count any-enemy stable > 1)
		(players-unit-type-count any-enemy camel-line > 5)
	)
	(research-available ri-man-at-arms)
	(players-unit-type-count any-enemy camel-line > 0)
	(dropsite-min-distance stone < 5)
	(game-time < 1500)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal control-goal my-unique-unit-line)
	(players-unit-type-count any-enemy camel-line > 10)
	(building-type-count-total castle > 0)
	(research-available ri-man-at-arms)
	(or
		(building-type-count-total castle > 1)
		(strategic-number sn-archer-threat < 2)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal unit-goal knight)
	(or
		(goal control-goal 0)
		(goal control-goal aggressive-rush)
	)
	(goal anti-cavalry-threat-goal 1)
	(strategic-number sn-current-age >= ci-transit)
	(research-completed ri-hand-cart)
	(building-type-count castle > 0)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal unit-goal knight)
	(or
		(goal control-goal 0)
		(goal control-goal aggressive-rush)
	)
	(goal anti-cavalry-threat-goal 1)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(and
			(food-amount > 400)
			(gold-amount < 100)
		)
	)
	(research-completed ri-hand-cart)
=>
	(set-goal control-goal militiaman-line)
)
(defrule
	(goal unit-goal knight)
	(goal control-goal militiaman-line)
	(players-unit-type-count any-enemy spearman-line > 30)
	(strategic-number sn-archer-threat < 2)
	(research-completed ri-long-swordsman)
	(building-type-count-total barracks >= 3)
=>
	(set-goal unit-goal militiaman-line)
	(chat-to-player my-player-number "switch to militiaman-line")
)
(defrule
	(goal unit-goal militiaman-line)
	(players-unit-type-count every-enemy spearman-line < 20)
	(gold-amount > 500)
	(current-age >= castle-age)
	(not (research-available ri-long-swordsman))
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knight-line")
)
#load-if-defined UP-2-PLAYER-GAME
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total stone-wall > 15)
	(game-time > 10)
	(random-number > 4)
	(or
		(players-civ any-enemy aztec)
		(players-civ any-enemy saracen)
	)
=>
	(set-goal position-goal pocket); pretend, stay in dark a little longer and use extra resources on some early scouts to stop mush
	(set-goal control-goal aggressive-rush)
	(set-goal strategy-goal rush)
	(set-goal unit-goal scout-cavalry)
	(disable-self)
)
(defrule
	(current-age == castle-age)
	(goal unit-goal scout-cavalry)
=>
	(set-goal unit-goal knight)
	(disable-self)
)
#end-if
#end-if ;french
#load-if-defined GOTHIC-CIV; _Goths
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-archer-threat >= 1)
	(not (research-completed ri-champion))
	(can-research my-unique-research)
=>
	(research my-unique-research)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to huskies")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(dropsite-min-distance stone < 6)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(or
			(players-civ any-enemy briton)
			(players-civ any-enemy hun)
		)
		(or
			(or
				(players-civ any-enemy mongol)
				(players-civ any-enemy mayan)
			)
			(and
				(current-age == imperial-age)
				(goal unit-goal ss)
			)
		)
	)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(not (goal control-goal militiaman-line))
	(or
		(or
			(players-unit-type-count any-enemy eagle-warrior-line > 10)
			(strategic-number sn-current-age >= ci-transit)
		)
		(and
			(and
				(food-amount > 500)
				(gold-amount < 100)
			)
			(goal unit-goal knight)
		)
	)
=>
	(set-goal control-goal militiaman-line)
)
(defrule
	(goal unit-goal knight)
	(research-completed ri-long-swordsman)
=>
	(set-goal unit-goal militiaman-line)
	(set-goal control-goal 0)
)
#load-if-defined UP-AVAILABLE
(defrule
	(goal strategy-goal flush)
	(or
		(and
			(or
				(goal position-goal pocket)
				(not (map-type arabia))
			)
			(or
				(random-number >= 6)
				(cc-players-unit-type-count 0 tree > heavy-wood)
			)
		)
		(goal nr-map-goal 1)
	)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal strategy-goal flush)
	(game-time > 20)
	(or
		(goal ffa-game-goal 1)
		(and
			(building-type-count castle > 0)
			(current-age <= feudal-age)
		)
	)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
#load-if-defined HUN-CIV
(defrule
	(current-age >= castle-age)
	(building-type-count archery-range >= 2)
	(nor
		(or
			(goal unit-goal cavalry-archer)
			(goal control-goal shot)
		)
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	)
=>
	(set-goal unit-goal cavalry-archer)
	(set-goal control-goal 0)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal ffa-game-goal -1)
	(building-type-count-total stone-wall < 15)
	(random-number > 6)
	(game-time > 13)
	(nor 
		(or
			(goal strategy-goal flush)
			(goal strategy-goal sling)
		)
		(goal control-goal shot)
	)
=>
	(set-goal control-goal aggressive-rush)
	(set-goal strategy-goal rush)
	(set-goal unit-goal cavalry-archer)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal nr-map-goal -1)
	(goal strategy-goal rush)
	(or
		(and
			(player-in-game any-ally)
			(random-number < 9)
		)
		(and
			(goal forward-threat-goal 1)
			(goal unit-goal cavalry-archer)
		)
	)
=>
	(set-goal control-goal aggressive-rush)
	(set-goal unit-goal knight)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal nr-map-goal 1)
	(building-type-count-total stone-wall < 15)
	(random-number > 6)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal cavalry-archer)
	(set-goal control-goal 0)
	(disable-self)
)
#end-if
#load-if-defined JAPANESE-CIV
(defrule
	(strategic-number sn-current-age >= castle)
	(or
		(goal strategy-goal boom)
		(or
			(goal unit-goal knight)
			(goal unit-goal ss)
		)
	)
	(building-type-count-total town-center >= tc-level-four)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(strategic-number sn-current-age == castle)
	(or
		(research-available ri-long-swordsman)
		(strategic-number sn-current-age == fc-transit)
	)
	(unit-type-count-total militiaman-line < 10)
	(goal unit-goal militiaman-line)
=>
	(set-goal unit-goal mix)
	(set-goal control-goal my-unique-unit-line)
)
(defrule
	(or
		(goal unit-goal mix)
		(and
			(goal unit-goal knight)
			(building-type-count-total castle > 1)
		)
	)
	(building-type-count castle > 0)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(current-age == dark-age)
	(or
		(goal ffa-game-goal 1)
		(or
			(unit-type-count-total villager > 30)
			(random-number > 9)
		)
	)
	(nor 
		(players-civ every-enemy aztec)
		(player-in-game any-ally)
	)	
	(goal nr-map-goal -1)
=>
	(set-goal unit-goal ss)
	(set-goal strategy-goal rush)
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to fast castle strategy")
	(disable-self)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal nr-map-goal 1)
	(game-time > 12)
	(not (goal strategy-goal sling))
=>
	(set-goal unit-goal archer)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(game-time > 12)
	(random-number > 5)
	(building-type-count castle > 0)
	(current-age < castle-age)
	(not (goal strategy-goal sling))
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
#load-if-defined KOREAN-CIV
(defrule
	(dropsite-min-distance stone < 5)
	(building-type-count-total town-center >= tc-level-three)
	(not (goal unit-goal my-unique-unit-line))
=>
	(set-goal control-goal my-unique-unit-line)
	(chat-to-player my-player-number "prepare for unique-units")
	(disable-self)
)
(defrule
	(building-type-count castle > 1)
	(or 
		(and
			(goal unit-goal militiaman-line)
			(goal control-goal my-unique-unit-line)
		)
		(death-match-game)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal militiaman-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(building-type-count castle > 1)
	(nor 
		(goal unit-goal militiaman-line)
		(goal unit-goal my-unique-unit-line)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(current-age == dark-age)
	(or
		(goal ffa-game-goal 1)
		(random-number > 4)
	)
	(random-number < 6)
=>
	(set-goal unit-goal ss)
	(set-goal strategy-goal rush)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to fast castle strategy")
	(disable-self)
)

#load-if-not-defined UP-AVAILABLE
(defrule
	(or
		(and
			(or
				(random-number > 6)
				(players-civ every-enemy aztec)
			)
			(random-number > 4)
		)
		(or
			(regicide-game)
			(and
				(goal strategy-goal flush)
				(map-type gold-rush); wolves will eat out flush
			)
		)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal strategy-goal rush)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal -1)
	(disable-self)
)
#else
(defrule
	(or
		(and
			(or
				(random-number > 6)
				(players-civ every-enemy aztec)
			)
			(random-number > 4)
		)
		(or
			(regicide-game)
			(and
				(goal strategy-goal flush)
				(map-type gold-rush); wolves will eat our flush
			)
		)
	)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal -1)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal nr-map-goal 1)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
#load-if-defined MAYAN-CIV
(defrule
	(or
		(and
			(random-number > 8)
			(game-time < 5)
		)
		(or
			(and
				(or
					(research-completed ri-heresy)
					(strategic-number sn-current-age >= ci-transit)
				)
				(or
					(goal strategy-goal boom)
					(goal strategy-goal fast-imp)
				)
			)
			(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(not (goal strategy-goal boom))
	(strategic-number sn-current-age >= fc-transit)
	(or
		(players-building-type-count any-enemy watch-tower > 3)
		(and
			(and
				(players-unit-type-count every-enemy skirmisher-line > 7)
				(players-unit-type-count every-enemy militiaman-line < 5)
			)
			(or
				(players-unit-type-count every-enemy skirmisher-line > 15)
				(game-time < 1500)
			)
		)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(or
		(random-number == 5)
		(and
			(and
				(current-age == dark-age)
				(goal unit-goal eagle-warrior)
			)
			(or
				(players-civ every-enemy gothic)
				(players-civ every-enemy japanese)
			)
		)
	)
	(building-type-count stone-wall < 15)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(disable-self)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(random-number > 4)
	(goal ffa-game-goal 1)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal archer)
	(disable-self)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal mix)
	(strategic-number sn-cavalry-threat >= 1)
=>
	(set-goal unit-goal ss)
)
#else
(defrule
	(current-age == dark-age)
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(goal ffa-game-goal -1)		
	(random-number == 4)
	(building-type-count stone-wall < 15)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal default-flush-unit)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(goal ffa-game-goal 1)		
		(random-number < 4)
	)
	(game-time > 10)
=>
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(disable-self)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)	
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
(defrule
	(or
		(and
			(random-number > 5)
			(random-number < 9)
		)
		(or
			(players-civ every-enemy aztec)
			(goal position-goal flank)
		)
	)
	(goal ffa-game-goal -1)
	(building-type-count-total castle == 0)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal archer)
	(set-goal control-goal aggressive-rush)
	(set-goal ranged-unit-type-goal archer)
	(disable-self)
)
(defrule
	(dropsite-min-distance stone < 5)
	(building-type-count-total town-center >= tc-level-three)
	(nor 
		(goal unit-goal my-unique-unit-line)
		(or
			(goal control-goal shot)
			(goal control-goal aggressive-rush)
		)
	)
	(or
		(not (goal unit-goal eagle-warrior))
		(strategic-number sn-current-age >= ci-transit)
	)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "prepare for unique-units")
	(disable-self)
)
(defrule
	(or
		(building-type-count castle > 1)
		(regicide-game)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to unique-units")
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(or
		(map-type baltic)
		(map-type rivers)
	)
	(current-age < castle-age)
	(goal unit-goal eagle-warrior)
	(players-unit-type-count any-enemy galley-line > 0)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock water-islands)
	(set-goal strategy-goal rush)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(map-type baltic)
		(map-type rivers)
	)	
	(goal unit-goal eagle-warrior)
	(or
		(goal enemy-boats-goal 0)
		(warboat-count > 40)
	)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock water-mixed)
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(current-age < castle-age)
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total castle == 0)
=>
	(set-goal unit-goal eagle-warrior)
)
#end-if
#load-if-defined MONGOL-CIV
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(random-number > 4)
	(random-number < 7)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal strategy-goal rush)
	(disable-self)
)
(defrule
	(current-age == dark-age)
	(or
		(random-number > 6)
		(or
			(and
				(unit-type-count villager >= 31)
				(goal strategy-goal flush)
			)
			(goal ffa-game-goal 1)
		)
	)
=>
	(set-goal unit-goal knight)
	(set-goal strategy-goal rush)
	(disable-self)
)
#else
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(current-age == dark-age)
	(or
		(goal ffa-game-goal 1)
		(and
			(goal strategy-goal flush)
			(not (map-type arabia))
		)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(current-age == dark-age)
	(game-time > 30)
	(goal strategy-goal flush)
	(random-number < 5)
=>
	(set-goal unit-goal skirmisher)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal flush)
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knights")
	(disable-self)
)
(defrule
	(or
		(goal unit-goal knight)
		(goal unit-goal ss)
	)
	(not (goal control-goal my-unique-unit-line))
	(or
		(and
			(building-type-count-total archery-range > 0)
			(building-type-count-total town-center >= tc-level-three)
		)
		(unit-type-count villager > fourty-percent-pop)
	)
	(dropsite-min-distance stone < 5)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal cavalry-archer)
	(chat-to-player my-player-number "switch to uu")
)
(defrule
	(goal strategy-goal flush)
	(goal unit-goal knight)
	(goal control-goal militiaman-line)
	(or
		(and
			(building-type-count-total archery-range > 0)
			(building-type-count-total town-center >= tc-level-three)
		)
		(unit-type-count villager > fourty-percent-pop)
	)
	(dropsite-min-distance stone < 5)
=>
	(set-goal unit-goal militiaman-line)
	(set-goal uu-up-goal 1)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal cavalry-archer)
	(chat-to-player my-player-number "switch to uu")
)
(defrule
	(goal unit-goal knight)
	(goal control-goal my-unique-unit-line)
	(goal anti-cavalry-threat-goal 1)
	(civilian-population > 90)
	(building-type-count castle > 0)
=>
	(set-goal unit-goal militiaman-line)
	(disable-self)
)
(defrule
	(building-type-count castle > 2)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal militiaman-line)
	(disable-self)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(random-number > 6)
	(game-time > 13)
=>
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#end-if; mongol
#load-if-defined PERSIAN-CIV
(defrule
	(current-age == dark-age)
	(unit-type-count villager == dark-age-villager)
	(goal strategy-goal rush)
	(food-amount < 620); train one extra villager for better eco
	(can-train villager)
=>
	(train villager)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(or
		(goal strategy-goal flush)
		(and
			(research-available imperial-age)
			(dropsite-min-distance stone < 6)
		)
	)
	(unit-type-count-total archer < 8)
	(not (goal strategy-goal fast-imp))
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knights")
	(disable-self)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal flush)
	(unit-type-count-total archer >= 8)
=>
	(set-goal unit-goal knight)
	(set-goal ranged-unit-type-goal archer)
	(chat-to-player my-player-number "switch to knights")
	(disable-self)
)
(defrule
	(random-number > 5)
	(random-number < 9)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
=>
	(set-goal unit-goal scout-cavalry)
	(set-goal strategy-goal flush)
	(disable-self)
)
#load-if-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(or
		(and
			(goal nr-map-goal 1)
			(random-number < 6)
		)
		(building-type-count stone-wall > 15)
	)
	(not (goal strategy-goal sling))
=>
	(set-goal unit-goal knight)
	(set-goal strategy-goal boom)
	(set-goal control-goal 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(or
		(goal position-goal pocket)
		(goal nr-map-goal 1)
	)
	(or
		(random-number < 2)
		(building-type-count stone-wall > 15)
	)
	(random-number < 4)
	(building-type-count town-center >= tc-level-three)
	(current-age-time > 300)
=>
	(set-goal strategy-goal fast-imp)
	(set-goal unit-goal gunpowder-units)
)
(defrule
	(strategic-number sn-current-age == castle)
	(or
		(goal position-goal pocket)
		(goal nr-map-goal 1)
	)
	(not (goal unit-goal my-unique-unit-line))
	(random-number < 6)
	(random-number > 3)
	(building-type-count-total town-center >= tc-level-three)
=>
	(set-goal strategy-goal boom)
	(set-goal control-goal my-unique-unit-line)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal gunpowder-units)
)
#end-if
(defrule
	(or 
		(random-number > 8)
		(and
			(or
				(players-civ every-enemy aztec)
				(building-type-count stone-wall > 15)
			)
			(strategic-number sn-minimum-boar-hunt-group-size == 5); 1.0c only
		)
	)
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
=>
	(set-goal control-goal aggressive-rush)
	(set-goal strategy-goal rush)
	(set-goal unit-goal knight)
	(disable-self)
)
(defrule
	(random-number < 7)
	(random-number > 3)
	(building-type-count-total stone-wall-line < 15)
	(goal nr-map-goal 1)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal control-goal 0)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal gunpowder-units)
)
#end-if ; persian
#load-if-defined SARACEN-CIV
(defrule
	(current-age == dark-age)
	(random-number > 5)
=>
	(set-goal unit-goal knight)
	(set-goal strategy-goal rush)
	(set-goal control-goal aggressive-rush)
	(disable-self)
)
(defrule
	(current-age == dark-age)
	(or
		(or
			(random-number > 8)
			(goal position-goal pocket)
		)
		(and
			(or
				(unit-type-count villager > 29)
				(player-in-game any-ally)
			)
			(goal strategy-goal flush)
		)
	)
	(nor 
		(goal strategy-goal sling)
		(goal control-goal shot)
	)
=>
	(set-goal unit-goal archer)
	(set-goal strategy-goal rush)
	(set-goal control-goal aggressive-rush)
)
(defrule
	(current-age == dark-age)
	(or
		(or
			(random-number > 6)
			(building-type-count stone-wall > 15)
		)
		(and
			(cc-players-unit-type-count 0 tree > heavy-wood)
			(random-number < 4)
		)
	)
	(nor 
		(goal strategy-goal sling)
		(goal control-goal shot)
	)
=>
	(set-goal unit-goal monk)
	(set-goal strategy-goal rush)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(disable-self)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal strategy-goal flush)
	(not (goal unit-goal knight))
=>
	(set-goal unit-goal knight)
)
(defrule
	(or
		(and
			(and
				(goal unit-goal knight)
				(civilian-population > 90)
			)
			(strategic-number sn-current-age >= ci-transit)
		)
		(and
			(goal strategy-goal flush)
			(and
				(strategic-number sn-current-age == feudal)
				(players-unit-type-count any-enemy spearman-line > 6)
			)
		)
	)
=>
	(set-goal unit-goal archer)
	(set-goal ranged-unit-type-goal archer)
	(set-goal control-goal aggressive-rush); also stop slinging here, without even cavalier upgrade it is pretty pointless
)
#load-if-defined REGICIDE
(defrule
	(random-number > 6)
	(goal unit-goal monk)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
#end-if
(defrule
	(or
		(and
			(goal nr-map-goal 1)
			(building-type-count stone-wall-line < 15)
		)
		(and
			(and
				(random-number > 6)
				(regicide-game)
			)
			(goal unit-goal monk)
		)
	)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal monk)
	(set-goal control-goal 0)
)
#end-if
#load-if-defined SPANISH-CIV
(defrule
	(goal control-goal 0)
	(or
		(goal anti-cavalry-threat-goal 1)
		(players-civ any-enemy gothic)
	)
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone < 5)
	(nand
		(strategic-number sn-current-age == castle)
		(goal strategy-goal boom)
	)
=>
	(set-goal control-goal my-unique-unit-line)
	(chat-to-player my-player-number "enable uu")
)
(defrule
	(goal unit-goal knight)
	(goal control-goal my-unique-unit-line)
	(goal anti-cavalry-threat-goal 1)
	(building-type-count castle >= 2)
	(nand
		(research-completed ri-paladin)
		(research-available my-unique-unit-upgrade); Spanish
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(chat-to-player my-player-number "switch to uu")
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age == feudal)
	(or
		(players-unit-type-count any-enemy spearman-line > 6)
		(or
			(players-civ every-enemy mayan)
			(players-civ every-enemy briton)
		)
	)
=>
	(set-goal unit-goal skirmisher)
)
#load-if-defined UP-AVAILABLE
(defrule
	(random-number > 5)
	(or
		(random-number > 8)
		(goal nr-map-goal 1)
	)
	(game-time > 15)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
=>
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(disable-self)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(game-time > 25)
	(not (goal unit-goal my-unique-unit-line))
=>
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#end-if; spanish
#load-if-defined TEUTONIC-CIV
(defrule
	(current-age == dark-age)
	(unit-type-count villager == dark-age-villager)
	(goal strategy-goal rush)
	(food-amount < 620); train one extra villager for better eco
	(can-train villager)
=>
	(train villager)
)
(defrule
	(goal unit-goal knight)
	(goal control-goal 0)
	(building-type-count castle > 0)
	(strategic-number sn-archer-threat < 2)
	(nor
		(goal enemy-goal castle)
		(and
			(research-completed ri-cavalier)
			(not (research-available ri-paladin))
		)
	)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(goal unit-goal knight)
	(goal control-goal my-unique-unit-line)
	(or
		(goal anti-cavalry-threat-goal 1)
		(strategic-number sn-infantry-threat >= 1)
	)
	(nor
		(or
			(players-civ every-enemy hun); dont switch to TK vs ca civs
			(strategic-number sn-archer-threat > 1)
		)
		(goal enemy-goal castle)
	)
	(building-type-count castle > 1)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(or
		(random-number > 7)
		(player-in-game any-ally)
	)
	(building-type-count-total castle == 0)
	(building-type-count-total stone-wall < 15)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
=>
	(set-goal control-goal aggressive-rush)
	(set-goal strategy-goal rush)
	(set-goal unit-goal knight)
	(disable-self)
)
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(goal control-goal aggressive-rush)
=>
	(set-goal control-goal 0)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal strategy-goal flush)
=>
	(set-goal unit-goal knight)
	(disable-self)
)
#load-if-not-defined DEATH-MATCH
#load-if-defined UP-AVAILABLE
(defrule
	(building-type-count stone-wall > 15)
	(game-time > 180)
	(random-number < 4)
	(not (goal control-goal shot))
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal monk)
	(set-goal ranged-unit-type-goal monk)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(random-number > 7)
			(nor
				(players-civ any-enemy briton)
				(players-civ any-enemy mayan)
			)
		)
		(and
			(building-type-count castle > 1)
			(goal unit-goal monk)
		)
	)
=>
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(goal nr-map-goal 1)
	(not (goal ranged-unit-type-goal monk))
	(game-time > 25)
=>
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#end-if;teutonic
#load-if-defined TURKISH-CIV
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(or
		(and
			(or
				(unit-type-count villager >= dark-age-villager)
				(random-number > 7)
			)
			(not (goal enemy-goal flush))
		)
		(player-in-game 3)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal knight)
)
#else
(defrule
	(or
		(and
			(or
				(goal ffa-game-goal 1)
				(and
					(random-number > 4)
					(goal nr-map-goal 1)
				)
			)
			(or
				(goal strategy-goal flush)
				(goal control-goal aggressive-rush)
			)
		)
		(regicide-game)
	)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal ranged-unit-type-goal 0)
	(set-goal control-goal 0)
)
#end-if
#load-if-defined DEATH-MATCH
(defrule
	(strategic-number sn-infantry-threat > 1)
=>
	(set-goal ranged-unit-type-goal gunpowder-units)
	(disable-self)
)
#end-if
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age == feudal)
	(players-unit-type-count any-enemy spearman-line > 6)
=>
	(set-goal unit-goal archer)
	(set-goal ranged-unit-type-goal archer)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal strategy-goal flush)
	(goal unit-goal default-ranged)
=>
	(set-goal unit-goal knight)
)
(defrule
	(goal unit-goal knight)
	(goal control-goal militiaman-line)
	(players-unit-type-count any-enemy spearman-line > 30)
	(strategic-number sn-archer-threat < 2)
	(research-completed ri-champion)
	(building-type-count-total barracks >= 3)
=>
	(set-goal unit-goal militiaman-line)
	(chat-to-player my-player-number "switch to militiaman-line")
)
(defrule
	(current-age == dark-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count stone-wall > 15)
	(game-time > 13)
	(random-number < 5)
=>
	(set-goal strategy-goal fast-imp)
	(set-goal unit-goal gunpowder-units)
	(set-goal ranged-unit-type-goal -1)
	(set-goal control-goal 0)
	(disable-self)
)
#load-if-defined UP-2-PLAYER-GAME
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total stone-wall > 15)
	(game-time > 10)
	(random-number > 7)
	(or
		(players-civ every-enemy aztec)
		(players-civ every-enemy saracen)
	)
=>
	(set-goal position-goal pocket); pretend, stay in dark a little longer and use extra resources on some early scouts to stop mush
	(set-goal control-goal aggressive-rush)
	(set-goal strategy-goal rush)
	(set-goal unit-goal scout-cavalry)
	(disable-self)
)
(defrule
	(current-age == castle-age)
	(goal unit-goal scout-cavalry)
=>
	(set-goal unit-goal knight)
	(disable-self)
)
#end-if
#end-if
#load-if-defined VIKING-CIV
#load-if-defined UP-1-PLAYER-TEAM
(defrule
	(random-number < 4)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal archer)
	(disable-self)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(current-age < castle-age)
	(not (goal strategy-goal flush))
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal militiaman-line)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age == fc-transit)
	(military-population < 15)
	(not (goal unit-goal knight))
=>
	(set-goal unit-goal knight)
	(set-goal control-goal militiaman-line)
	(chat-to-player my-player-number "switch to knight")
)
(defrule
	(goal aofe-game-goal 1)
	(goal control-goal 0)
	(goal strategy-goal boom)
	(civilian-population > 90)
	(strategic-number sn-cavalry-threat > 2)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal control-goal 0)
	(or
		(and
			(civilian-population > 90)
			(or
				(strategic-number sn-current-age >= ci-transit)
				(and
					(food-amount > 400)
					(gold-amount < 200)
				)
			)
		)
		(or
			(goal anti-cavalry-threat-goal 1)
			(goal enemy-goal eagle-warrior)
		)
	)
	(not (goal strategy-goal boom))
=>
	(set-goal control-goal militiaman-line)
)
(defrule
	(goal control-goal 0)
	(or
		(or
			(goal enemy-goal eagle-warrior)
			(and
				(players-unit-type-count any-enemy huskarl-line > 4)
				(civilian-population > 60)
			)
		)
		(and
			(research-completed ri-arbalest)
			(research-completed ri-ring-archer-armor)
		)
	)
	(goal strategy-goal boom)
=>
	(set-goal control-goal militiaman-line)
)
(defrule
	(civilian-population >= 60)
	(research-completed ri-long-swordsman)
	(not (goal unit-goal militiaman-line))
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal militiaman-line)
	(chat-to-player my-player-number "switch to militiaman-line")
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal default-unit)
	(current-age < castle-age)
=>
	(set-goal unit-goal knight)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal nr-map-goal 1)
	(game-time > 25)
=>
	(set-goal unit-goal archer)
	(set-goal position-goal pocket); pretend
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#load-if-defined REGICIDE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(game-time > 25)
=>
	(set-goal unit-goal my-unique-unit)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal strategy-goal boom)
	(disable-self)
)
#end-if
#end-if; viking-civ
#load-if-defined INCAN-CIV
(defrule
	(or
		(strategic-number sn-current-age >= ci-transit)
		(and
			(current-age == feudal-age)
			(goal enemy-goal flush)
		)
	)
	(or
		(goal strategy-goal boom)
		(goal strategy-goal fast-imp)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(players-building-type-count any-enemy watch-tower > 3)
		(and
			(players-unit-type-count every-enemy skirmisher-line > 7)
			(or
				(players-unit-type-count every-enemy skirmisher-line > 15)
				(game-time < 1500)
			)
		)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal eagle-warrior)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(random-number < 5)
	(or
		(random-number > 3)
		(goal nr-map-goal 1)
	)
	(game-time > 13)
=>
	(set-goal unit-goal archer)
	(set-goal control-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(random-number > 4)
	(or
		(random-number < 9)
		(goal nr-map-goal 1)
	)
	(game-time > 13)
=>
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(current-age == castle-age)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-three)
=>
	(set-goal strategy-goal fast-imp)
	(disable-self)
)
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(current-age == castle-age)
	(goal strategy-goal boom)
	(or
		(and
			(building-type-count-total town-center < 3); enemy attacked and disrupted our TC
			(stone-amount < 80)
		)
		(strategic-number sn-military-level < 0); or we fell behind on military very quickly
	)
=>
	(set-goal strategy-goal rush)
	(disable-self)
)
#load-if-not-defined UP-1-PLAYER-TEAM
#load-if-not-defined UP-2-PLAYER-TEAM
(defrule	
	(or
		(goal strategy-goal boom)
		(goal strategy-goal fast-imp)
	)
	(not (goal unit-goal my-unique-unit-line))
=>
	(set-goal strategy-goal rush)
)
#end-if
#end-if
#end-if
(defrule
	(random-number > 8)
	(goal ffa-game-goal -1)
	(building-type-count-total castle == 0)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal archer)
	(set-goal control-goal aggressive-rush)
	(set-goal ranged-unit-type-goal archer)
	(disable-self)
)
(defrule
	(dropsite-min-distance stone < 5)
	(building-type-count-total town-center >= tc-level-three)
	(nor 
		(goal unit-goal my-unique-unit-line)
		(goal control-goal shot)
	)
	(or
		(or
			(strategic-number sn-cavalry-threat > 2)
			(strategic-number sn-infantry-threat > 2)
		)
		(and
			(goal unit-goal archer)
			(strategic-number sn-current-age >= ci-transit)
		)
	)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "prepare for unique-units")
	(disable-self)
)
(defrule
	(building-type-count castle > 0)
	(or
		(strategic-number sn-cavalry-threat > 2)
		(building-type-count castle > 1)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(chat-to-player my-player-number "switch to unique-units")
	(disable-self)
)
#end-if; INCAN-CIV
#load-if-defined MAGYAR-CIV
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal flush)
	(random-number > 6)
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knights")
	(disable-self)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(dropsite-min-distance stone < 5)
=>
	(set-goal uu-up-goal 1)
)
(defrule
	(or
		(regicide-game)
		(goal nr-map-goal 1)
	)
	(game-time > 13)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal cavalry-archer)
	(set-goal ranged-unit-type-goal cavalry-archer)
	(set-goal control-goal 0)
	(disable-self)
)
(defrule
	(building-type-count castle == 0)
	(building-type-count stone-wall-line > 15)
	(or
		(players-civ every-enemy aztec)
		(players-civ every-enemy saracen)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal scout-cavalry)
	(set-goal control-goal aggressive-rush)
	(disable-self)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(random-number > 5)
	(nor 
		(goal enemy-goal flush)
		(goal strategy-goal sling)
	)
	(or
		(or
			(players-civ any-enemy hun)
			(players-civ any-enemy mongol)
		)
		(or
			(players-civ any-enemy persian)
			(or
				(players-civ any-enemy frankish)
				(players-civ any-enemy magyar)
			)
		)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal knight)
	(disable-self)
)
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(goal nr-map-goal -1)
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(random-number > 5)
	(game-time > 5)
	(nor
		(goal unit-goal knight)
		(goal strategy-goal sling)
	)
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal scout-cavalry)
	(disable-self)
)
#end-if
(defrule
	(goal unit-goal ss)
	(or
		(research-available imperial-age)
		(strategic-number sn-current-age >= ci-transit)
	)
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "enable camels")
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(or
		(and
			(goal unit-goal knight)
			(game-time > 1800)
		)
		(and
			(goal unit-goal scorpion)
			(building-type-count-total town-center >= tc-level-four)
		)
	)
	(dropsite-min-distance stone < 6)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(or
		(goal unit-goal knight)
		(goal unit-goal scorpion)
	)
	(building-type-count castle > 0)
	(or
		(building-type-count-total castle > 1)
		(strategic-number sn-current-age >= ci-transit)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal control-goal 0)
)
(defrule
	(food-amount > 150)
	(or
		(gold-amount < 50)
		(food-amount > 300)
	)
	(or
		(goal unit-goal monk)
		(goal strategy-goal flush)
	)
	(players-unit-type-count any-enemy eagle-warrior-line > 7)
=>
	(set-goal unit-goal militiaman-line)
	(chat-to-player my-player-number "long-swordsman to counter EW rush")
	(disable-self)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-current-age == dark)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(random-number > 7)
	(or
		(goal nr-map-goal 1)
		(random-number > 8)
	)
	(game-time > 13)
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal strategy-goal boom)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(goal nr-map-goal 1)
		(goal position-goal pocket)
	)
	(random-number < 8)
	(random-number > 5)
	(game-time > 25)
=>
	(set-goal unit-goal scorpion)
	(set-goal position-goal pocket)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal strategy-goal boom)
	(disable-self)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(random-number < 3)
	(game-time > 25)
=>
	(set-goal unit-goal monk)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(set-goal strategy-goal rush)
	(disable-self)
)
#end-if
#end-if; slavic-civ
#load-if-defined ITALIAN-CIV
(defrule
	(random-number > 5)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(or
			(players-civ any-enemy hun)
			(players-civ any-enemy mongol)
		)
		(or
			(players-civ any-enemy persian)
			(or
				(players-civ any-enemy frankish)
				(players-civ any-enemy magyar)
			)
		)
	)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal 0)
	(disable-self)
)
(defrule
	(game-time > 20)
	(goal ffa-game-goal 1)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
	(set-goal ranged-unit-type-goal 0)
	(disable-self)
)
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(goal nr-map-goal -1)
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(random-number > 5)
	(game-time > 13)
	(not (goal unit-goal my-unique-unit-line))
=>
	(set-goal strategy-goal flush)
	(set-goal unit-goal archer)
	(disable-self)
)
(defrule
	(goal nr-map-goal -1)
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(random-number > 3)
	(random-number < 6)
=>
	(set-goal strategy-goal rush)
	(set-goal control-goal aggressive-rush)
	(set-goal unit-goal archer)
)
(defrule
	(goal nr-map-goal 1)
	(random-number > 3)
	(random-number < 6)
	(game-time > 13)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal monk)
)
#end-if
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(goal unit-goal archer)
	(strategic-number sn-cavalry-threat > 1)
=>
	(set-goal control-goal my-unique-unit-line)
	(set-goal uu-up-goal 1)
)
(defrule
	(goal control-goal my-unique-unit-line)
	(building-type-count castle > 0)
	(not (goal unit-goal gunpowder-units))
=>
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(or
		(strategic-number sn-infantry-threat > 2)
		(players-civ every-enemy gothic)
	)
=>
	(set-goal unit-goal gunpowder-units)
)
#end-if ;italy

#load-if-not-defined UP-POCKET-POSITION
#load-if-not-defined BRITON-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(goal strategy-goal boom)
	(goal unit-goal my-unique-unit-line)
	(goal train-civ-goal 1)
	(strategic-number sn-resource-control == 0)
	(players-military-population every-enemy > 3)
	(players-building-type-count every-enemy town-center < 2)
	(unit-type-count-total my-unique-unit-line < 3)
	(building-type-count castle > 0)
	(building-type-count stone-wall-line < 15)
	(current-age-time < 300)
	(current-age == castle-age)
	(food-amount < unique-unit-food)
=>
	(set-goal train-civ-goal -1)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#end-if ; NOT MICHI

#load-if-not-defined BRITON-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined VIKING-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-defined UP-MICHI-STYLE
(defrule
	(building-type-count-total barracks == 0)
	(or
		(taunt-detected any-computer 230)
		(taunt-detected any-human 230)
	)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal monk)
	(set-goal ranged-unit-type-goal monk)
)
#else
(defrule
	(building-type-count-total barracks == 0)
	(or
		(taunt-detected any-computer 230)
		(taunt-detected any-human 230)
	)
=>
	(set-goal strategy-goal rush)
	(set-goal unit-goal monk)
	(set-goal ranged-unit-type-goal monk)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(or
		(strategic-number sn-archer-threat > 1)
		(and
			(players-building-type-count any-enemy archery-range > 1)
			(goal enemy-goal ss)
		)
	)
	(strategic-number sn-infantry-threat == 0)
=>
	(set-goal unit-goal skirmisher)
	(chat-to-player my-player-number "switch to skirmisher")
)
#load-if-not-defined UP-AVAILABLE
#load-if-not-defined DEATH-MATCH
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined TEUTONIC-CIV
(defrule
	(players-unit-type-count any-enemy eagle-warrior-line > 6)
	(players-current-age any-enemy == imperial-age); enemy trying EEW fast imp rush
	(game-time < 2100)
	(nor
		(research-completed ri-long-swordsman)
		(goal control-goal militiaman-line)
	)
	(not (goal control-goal shot))
	(unit-type-count jaguar-man-line < 4); don't do this with aztec uu strategy
=>
	(set-goal control-goal militiaman-line)
	(set-goal enemy-goal eagle-warrior)
	(set-strategic-number sn-resource-control ri-long-swordsman)
;	(chat-to-player my-player-number "research m@a and long-swordsman")
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-not-defined AZTEC-CIV
#load-if-not-defined VIKING-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(goal strategy-goal boom); not loaded civ change theirs in the civ specific strategy part above
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-goal strategy-goal rush)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-islands)
	(current-age < castle-age)
	(goal unit-goal my-unique-unit-line); change it or it will bug as no extra stone will be gathered during castle age advance
	(building-type-count-total castle == 0)
=>
	(set-goal unit-goal militiaman-line)
)
#end-if
(defrule
	(goal strategy-goal rush)
	(or
		(goal unit-goal ss)
		(goal unit-goal mix)
	)
	(not (goal control-goal my-unique-unit-line))
	(research-available imperial-age)
	(dropsite-min-distance stone < 6)
=>
	(set-goal unit-goal default-unit)
	(chat-to-player my-player-number "switch to default unit")
)
#end-if
#end-if
(defrule
	(goal strategy-goal flush)
	(goal unit-goal scout-cavalry)
	(gold-amount > 250)
	(building-type-count stable > 0)
=>
	(set-goal unit-goal skirmisher); use this to decrease gold gatherer percentage
)
(defrule
	(goal strategy-goal flush)
	(or
		(goal unit-goal scout-cavalry)
		(goal unit-goal skirmisher)
	)
	(strategic-number sn-current-age >= fc-transit)
=>
	(set-goal unit-goal default-ranged)
	(chat-to-player my-player-number "switch back to default ranged")
)
(defrule
	(goal strategy-goal flush)
	(goal unit-goal default-ranged)
	(or
		(or
			(civ-selected frankish)
			(civ-selected persian)
		)
		(or
			(civ-selected spanish)
			(civ-selected teutonic)
		)
	)
=>
	(set-goal unit-goal knight)
	(chat-to-player my-player-number "switch to knights")
)
(defrule
	(goal strategy-goal flush)
	(goal unit-goal default-ranged)
	(or
		(or
			(civ-selected gothic)
			(civ-selected japanese)
		)
		(or
			(civ-selected viking)
			(civ-selected celtic)
		)
	)
=>
	(set-goal unit-goal militiaman-line)
	(chat-to-player my-player-number "switch to militiaman-line")
)
#else ; not PIDM
(defrule
	(not (goal unit-goal cavalry-archer))
	(research-completed ri-bloodlines)
	(research-completed ri-paladin)
		
=>
	(set-goal unit-goal knight)
)
(defrule
	(nor
		(research-completed ri-bloodlines)
		(research-completed ri-paladin)
	)
=>
	(set-goal unit-goal my-unique-unit-line)
)
#end-if ;PIDM
#load-if-defined UP-MICHI-STYLE
#load-if-defined AZTEC-CIV; _Aztecs
(defrule
	(random-number < 4)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal monk)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
)
(defrule
	(random-number >= 4)
	(random-number < 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
)
(defrule
	(random-number >= 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
)
(defrule
	(can-research-with-escrow my-unique-research)
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined BRITON-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined BYZANTINE-CIV; _Greeks
(defrule
	(random-number < 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
(defrule
	(random-number >= 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(set-goal uu-up-goal 1)
)
(defrule
	(can-research-with-escrow my-unique-research)
	(research-completed my-unique-unit-upgrade); Byzantines
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined CHINESE-CIV
(defrule
	(random-number < 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined GOTHIC-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined HUN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal cavalry-archer)
)
#end-if
#load-if-defined JAPANESE-CIV; _Japanese
(defrule
	(random-number < 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(set-goal uu-up-goal 1)
)
(defrule
	(research-completed my-unique-unit-upgrade); Japanese
	(strategic-number sn-trebuchet-count >= 4)
	(can-research-with-escrow my-unique-research)
=>
	(release-escrow wood)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined KOREAN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined MAYAN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined MONGOL-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined PERSIAN-CIV
(defrule
	(random-number < 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined SARACEN-CIV; _Arabs
(defrule
	(random-number < 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 8)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal monk)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
)
(defrule
	(can-research-with-escrow my-unique-research)
	(or
		(research-completed my-unique-unit-upgrade); Saracens
		(unit-type-count my-unique-unit-line > 4)
	)
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined SPANISH-CIV
(defrule
	(random-number < 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined TEUTONIC-CIV
(defrule
	(random-number < 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(set-goal uu-up-goal 1)
)
(defrule
	(random-number >= 6)
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined TURKISH-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
(defrule
	(research-completed my-unique-unit-upgrade); Turks
=>
	(set-goal unit-goal gunpowder-units)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined VIKING-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal archer)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined INCAN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal eagle-warrior)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal archer)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#load-if-defined ITALIAN-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal gunpowder-units)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal 0)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined MAGYAR-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal knight)
	(set-goal control-goal my-unique-unit-line)
	(set-goal ranged-unit-type-goal archer)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(strategic-number sn-current-age == dark)
=>
	(set-goal strategy-goal boom)
	(set-goal unit-goal my-unique-unit-line)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
	(set-goal uu-up-goal 1)
)
#end-if
#load-if-not-defined INDIAN-CIV
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal unit-goal knight)
	(or
		(and
			(not (research-completed ri-cavalier))
			(or
				(food-amount < 1300)
				(gold-amount < 750)
			)
		)
		(research-available ri-paladin)
	)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = ri-paladin")
)
#else
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal unit-goal knight)
	(unit-type-count camel-line > 7)
	(or
		(and
			(not (research-completed ri-heavy-camel))
			(or
				(food-amount < 1200)
				(gold-amount < 600)
			)
		)
		(research-available ri-imperial-camel)
	)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = ri-imperial-camel")
)
#end-if
(defrule
	(nand
		(civ-selected mayan)
		(population < max-civ-pop)
	)
	(building-type-count castle > 0)
	(research-available my-unique-unit-upgrade); Indians
	(or
		(goal unit-goal my-unique-unit-line)
		(goal control-goal my-unique-unit-line)
	)
		
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = my-unique-unit-upgrade")
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal strategy-goal boom)
=>
	(set-goal strategy-goal rush)
	(set-strategic-number sn-free-siege-targeting 1)
)
#end-if ; MICHI MAP
(defrule
	(strategic-number sn-current-age == castle)
	(game-time > 1800)
	(goal unit-goal monk)
	(wood-amount > 400)
	(food-amount > 800)
	(gold-amount < 300)
=>
	(set-goal unit-goal ss)
	(set-goal control-goal 0)
	(set-goal ranged-unit-type-goal monk)
)
(defrule
	(game-time > 3000)
	(goal ranged-unit-type-goal monk)
	(unit-type-count trade-cart < 6)
	(dropsite-min-distance gold > 10)
=>
	(set-goal ranged-unit-type-goal 0)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal strategy-goal flush)
	(goal unit-goal default-ranged)
	(or
		(players-civ every-enemy byzantine)
		(players-unit-type-count every-enemy skirmisher-line > 10)
	)
=>
	(set-goal unit-goal mix)
)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(or
		(goal unit-goal archer)
		(goal strategy-goal flush)
	)
	(or
		(research-available ri-ballistics)
		(building-type-count-total university == 0)
	)
	(or
		(and
			(strategic-number sn-cavalry-threat >= 1)
			(strategic-number sn-infantry-threat == 0)
		)
		(players-unit-type-count any-enemy eagle-warrior-line > 10)
	)
=>
	(set-difficulty-parameter ability-to-maintain-distance 100)
)
#else
(defrule
	(or
		(or
			(unit-type-count longbowman-line > 50)
			(unit-type-count chu-ko-nu-line > 50)
		)
		(or
			(unit-type-count genoese-crossbowman > 50)
			(unit-type-count war-wagon-line > 50)
		)
	)
=>
	(set-difficulty-parameter ability-to-maintain-distance 100)
)
(defrule
	(unit-type-count longbowman-line < 30)
	(unit-type-count chu-ko-nu-line < 30)
	(unit-type-count genoese-crossbowman < 30)
	(unit-type-count war-wagon-line < 30)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
)
#end-if
(defrule
	(players-unit-type-count any-enemy monk > 12)
	(research-available ri-heresy)
	(building-type-count monastery > 0)
=>
	(set-strategic-number sn-resource-control ri-heresy)
)
(defrule
	(or
		(and
			(current-age == feudal-age)
			(goal strategy-goal rush)
		)
		(players-military-population any-enemy > 3)
	)
	(or
		(goal enemy-goal flush)
		(players-military-population any-enemy > 3)
	)
	(can-research ri-loom); loom fast when enemy looks dangerous
=>
	(research ri-loom)
)
(defrule
	(building-type-count town-center > 0)
	(current-age >= castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(unit-type-count villager > villager-siege-workshop)
	(building-type-count-total siege-workshop < 1)
	(goal forward-threat-goal 1); don't check wood to block other buildings if enemy forwarded us
	(nand
		(unit-type-count ranged-units < 5)
		(strategic-number sn-military-level < 0)
	)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined UP-2-PLAYER-GAME
#load-if-not-defined HUN-CIV
(defrule
	(building-type-count-total town-center >= tc-level-two)
	(goal strategy-goal boom)
	(goal unit-goal my-unique-unit-line)
	(or
		(goal monk-threat-goal 1)
		(or
			(players-unit-type-count any-enemy mangonel-line > 1)
			(players-unit-type-count any-enemy scorpion-line > 4)
		)
	)
	(wood-amount >= 200)
	(current-age >= castle-age)
	(building-type-count-total siege-workshop < 1)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(wood-amount >= 200)
	(current-age >= castle-age)
	(strategic-number sn-resource-control < 2)
	(building-type-count town-center >= tc-level-three)
	(goal strategy-goal boom)
	(or
		(goal unit-goal knight)
		(civ-selected teutonic)
	)
	(or
		(strategic-number sn-archer-threat > 0)
		(building-type-count-total stone-wall-line > 10)
	)
	(building-type-count-total siege-workshop < 1)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(current-age >= castle-age)
	(wood-amount >= 200)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(or
		(strategic-number sn-archer-threat > 1)
		(building-type-count-total stone-wall-line > 10)
	)
	(building-type-count-total siege-workshop < 1)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(current-age >= castle-age)
	(wood-amount >= 200)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(goal unit-goal cavalry-archer)
	(building-type-count-total town-center == 1)
	(building-type-count-total stable == 1)
	(building-type-count-total archery-range > 3)
	(building-type-count-total siege-workshop < 1)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
(defrule
	(building-type-count town-center > 0)
	(current-age >= castle-age)
	(or
		(strategic-number sn-military-level > 1)
		(goal hostilities-goal 1)
	)
	(or
		(strategic-number sn-minimum-boar-hunt-group-size == 5)
		(and
			(or
				(players-building-type-count any-enemy castle > 0)
				(goal unit-goal default-ranged)
			)
			(strategic-number sn-military-level > 2)
		)
	)
	(goal under-attack-goal 0)
	(building-type-count-total siege-workshop < 1)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(building-type-count town-center > 0)
	(building-type-count-total monastery > 0)
	(research-completed ri-bodkin-arrow)
	(current-age >= castle-age)
	(strategic-number sn-military-level > 0)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal siege-workshop)
	(or 
		(or
			(goal unit-goal ss)
			(goal strategy-goal boom)
		)
		(or 
			(goal unit-goal my-unique-unit-line)
			(goal unit-goal mix)
		)
	)
	(not (goal forward-threat-goal 1)); don't build an aggressive siege-workshop with these strategies
=>
	(set-goal increase-town-size-goal 0)
)
#load-if-defined PERSIAN-CIV; _Aryans
(defrule
	(can-research-with-escrow my-unique-research)
	(or
		(research-completed my-unique-unit-upgrade); Persians
		(unit-type-count my-unique-unit-line > 4)
	)
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined SPANISH-CIV
(defrule
	(population > del-civ-pop)
	(current-age-time > 300)
	(can-research ri-supremacy)
=>
	(research ri-supremacy)
	(set-strategic-number sn-allow-civilian-defense 3)
)
#end-if
#end-if ; not WONDER-RACE
(defrule
	(building-type-count-total town-center > 0)
	(or 
		(housing-headroom < housing-headroom1); too late actually, but if we have no food we can't train vils anyways.
		(and
			(population > 10)
			(housing-headroom < 4)
		)
	)
	(population-headroom > 0)
=>
	(set-goal housing-goal 1)
)
#load-if-not-defined WONDER-RACE
(defrule
	(housing-headroom < 10)
	(or
		(goal strategy-goal flush)
		(building-type-count-total blacksmith > 0)
	)
	(nand
		(goal unit-goal my-unique-unit-line)
		(strategic-number sn-current-age == fc-transit); build additonal houses in castle age to get builder for the castle
	)
	(strategic-number sn-current-age >= feudal)
	(population < eighty-five-percent-pop)
	(housing-headroom < housing-headroom2)
	(population-headroom > 0)
=>
	(set-goal housing-goal 1)
)
(defrule
	(or
		(population > 60)
		(and
			(strategic-number sn-current-age >= castle)
			(or
				(goal unit-goal eagle-warrior)
				(goal unit-goal archer)
			)
		)
	)	
	(strategic-number sn-current-age >= feudal)
	(or
		(housing-headroom < housing-headroom2)
		(population > seventy-five-percent-pop)
	)
	(population-headroom > 0)
	(nand
		(goal strategy-goal boom)
		(building-type-count-total town-center < 2)
	)
=>
	(set-goal housing-goal 1)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal housing-goal 1)
	(can-build house)
=>
	(build house)
	(set-goal housing-goal 0)
)
#else
(load-random + "The Horde\Userpatch3")
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-not-defined TURKISH-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(goal strategy-goal flush)
;	(or
		(or
			(building-type-count stone-wall > 10)
			(regicide-game); don't flush when enemy has a castle
		)
;		(map-type gold-rush); wolves will eat our flushing units
;	)
=>
	(chat-to-player my-player-number "change strategy to default fast castle unit")
	(set-goal strategy-goal rush)
	(set-goal unit-goal default-unit)
)
#end-if
#end-if
#load-if-not-defined DIFFICULTY-HARDEST
#load-if-not-defined HIGH-RESOURCES-START
#load-if-not-defined MEDIUM-RESOURCES-START
(defrule
	(nand
		(goal need-loom-goal 1)
		(research-available ri-loom)
	)
	(or
		(and
			(current-age == dark-age)
			(unit-type-count villager < 33)
		)
		(current-age == feudal-age)
	)
	(nand
		(goal unit-goal wonder)
		(strategic-number sn-minimum-boar-hunt-group-size != 5)
	)
	(unit-type-count villager < 35)
	(goal strategy-goal fast-imp)
	(can-train villager)
=>
	(train villager)
)
#load-if-defined WONDER-RACE
#load-if-defined UP-AVAILABLE
(defrule
	(nand
		(goal need-loom-goal 1)
		(research-available ri-loom)
	)
	(or
		(or
			(and
				(current-age == dark-age)
				(unit-type-count villager < villager-wonder-dark)
			)
			(and
				(current-age >= feudal-age)
				(unit-type-count villager < villager-wonder-feudal)
			)
		)
		(current-age == imperial-age)
	)
	(can-train villager)
=>
	(train villager)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-not-defined WONDER-RACE
(defrule
	(nand
		(goal need-loom-goal 1)
		(research-available ri-loom)
	)
	(current-age == dark-age)
	(building-type-count town-center > 1); double arabia
	(unit-type-count villager < 40)
	(food-amount < 430)
	(can-train villager)
=>
	(train villager)
	(set-strategic-number sn-total-number-explorers 2)
	(set-strategic-number sn-number-explore-groups 2)
)
#load-if-defined POST-IMPERIAL-AGE-START
(load "The Horde\PIDM")
#end-if
#end-if

;******************** RESOURCE MANAGEMENT AND AGE UP ********************
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count-total villager > 24)
	(or
		(unit-type-count-total villager > 25)
		(or
			(goal unit-goal archer)
			(goal aofe-game-goal 1)
		)
	)
	(goal strategy-goal flush)
	(food-amount > 460)
=>
	(set-goal train-civ-goal -1)
)
(defrule
	(unit-type-count-total villager > 27)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(unit-type-count villager > villager-flush)
	(or
		(or
			(unit-type-count-total villager > 25)
			(goal unit-goal archer)
		)
		(difficulty == hardest)
	)
	(goal strategy-goal flush)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(unit-type-count villager >= up-dark-age-villager)
	(or
		(food-amount >= 650)
		(or
			(unit-type-count-total villager >= 30)
			(goal control-goal shot)
		)
	)
	(not (goal strategy-goal fast-imp))
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(or
		(unit-type-count villager >= 33)
		(goal strategy-goal wonder)
	)
	(unit-type-count villager >= villager-wonder-dark)
	(goal strategy-goal fast-imp)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
#end-if
(defrule
	(death-match-game)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 12)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(or
		(or
			(unit-type-count-total villager >= dark-age-villager)
			(game-type == 8)
		)
		(or
			(goal strategy-goal flush)
			(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		)
	)
	(unit-type-count-total villager >= villager-feudal-min)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(or
		(difficulty != hard)
		(or
			(population-cap == 25)
			(starting-resources != low-resources)
		)
	)
	(unit-type-count-total villager >= villager-feudal-min)
	(can-research feudal-age)
=>
	(set-strategic-number sn-current-age df-transit)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-town-size 12)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
	(chat-to-allies "41up")
	(research feudal-age)
)
(defrule
	(current-age == feudal-age)
	(unit-type-count villager > 16); pretend dark age if feudal age start
=>
	(enable-timer lumber-timer 60)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-current-age feudal)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-minimum-number-hunters 0)
	(disable-self)
)
#load-if-not-defined WONDER-RACE
(defrule
	(strategic-number sn-current-age == feudal)
	(or
		(gold-amount < 200)
		(or
			(goal unit-goal eagle-warrior)
			(goal unit-goal monk)
		)
	)
	(food-amount >= 700)
	(nor
		(goal strategy-goal boom)
		(goal control-goal shot)
	)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)
#load-if-defined SARACEN-CIV
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(game-time < 1800); don't do this late game
	(nor 
		(goal strategy-goal sling)
		(and
			(goal unit-goal my-unique-unit-line)
			(building-type-count castle == 0)
		)
	)
	(commodity-selling-price stone > 95)
	(or
		(wood-amount < 300); prevent sell/rebuy for TC loop
		(stone-amount >= 200)
	)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)
#end-if
#end-if
(defrule
	(nor 
		(goal strategy-goal sling)
		(goal unit-goal my-unique-unit-line)
	)
	(strategic-number sn-current-age == feudal)
	(stone-amount >= 200)
	(food-amount < 670)
	(gold-amount > 180)
	(building-type-count market == 1)
=>
	(sell-commodity stone)
	(buy-commodity food)
	(chat-to-player my-player-number "sell stone and buy food for age up")
	(chat-to-allies-using-id 22122)
)
(defrule
	(strategic-number sn-resource-control != ri-heresy)
	(game-time < 1800)
	(goal monk-threat-goal 1)
	(or
		(and
			(research-available ri-light-cavalry)
			(gold-amount >= 200)
		)
		(unit-type-count scout-cavalry-line < 6)
	)
	(goal enemy-goal rush)
	(food-amount < 80)
	(building-type-count stable > 0)
	(can-buy-commodity food)
=>
	(buy-commodity food)
)
(defrule
	(or
		(dropsite-min-distance wood > 20)
		(cc-players-unit-type-count 0 tree < 20)
	)
	(wood-amount < 200)
	(or
		(gold-amount > 200)
		(wood-amount < 60)
	)
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "buy wood")
)
(defrule
	(game-time < 1500)
	(wood-amount < 120)
	(gold-amount > 350)
	(or
		(unit-type-count-total 219 >= 1)
		(unit-type-count-total 228 >= 1); dead lumberjacks
	)
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "buy wood")
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(strategic-number sn-resource-control < 2)
	(goal monk-threat-goal 1)
	(building-type-count stable > 0)
	(building-type-count market > 0)
	(or
		(unit-type-count scout-cavalry-line < 6)
		(research-available ri-light-cavalry)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
#end-if
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(or
		(game-time < 1800)
		(research-available ri-horse-collar)
	)
	(or
		(food-amount < 120)
		(and
			(food-amount < 300)
			(gold-amount > 275)
		)
	)
	(gold-amount > 200)
	(commodity-buying-price food < 140)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "3 Special Saracen Market Rule")
)
(defrule
	(game-time < 1500)
	(building-type-count-total stable < 2)
	(building-type-count-total archery-range < 2)
	(wood-amount < 120)
	(gold-amount > 200)	
	(or
		(unit-type-count-total 219 >= 1)
		(unit-type-count-total 228 >= 1); dead lumberjacks
	)
	(commodity-buying-price wood < 120)
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "4 Special Saracen Market Rule")
)
#end-if
#end-if ; NOT WONDER-RACE
(defrule
	(civilian-population >= 15)
	(research-available castle-age)
	(strategic-number sn-current-age >= fc-transit)
=>
	(set-strategic-number sn-current-age feudal)
	(chat-to-player my-player-number "castle-age research failed!"); castle research failed, set our age-tracking back
)
(defrule
	(civilian-population >= 15)
	(can-research castle-age)
=>
	(set-strategic-number sn-current-age fc-transit)
	(set-strategic-number sn-maximum-town-size 10)
	(research castle-age)
	(chat-to-allies "41up")
)
(defrule
	(current-age == castle-age)
	(unit-type-count villager > 16)
=>
	(set-strategic-number sn-camp-max-distance castle-age-camp-distance)
	(set-strategic-number sn-maximum-fish-boat-drop-distance -1)
	(set-strategic-number sn-maximum-town-size 12)
	(set-strategic-number sn-maximum-hunt-drop-distance 18)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-wood-dropsite-distance 15)
	(set-strategic-number sn-current-age castle)
	(enable-timer scouting-timer 120)
	(disable-self)
)
(defrule
	(or	
		(strategic-number sn-gold-dropsite-distance >= 40)
		(strategic-number sn-stone-dropsite-distance >= 40)
	)
=>
	(set-strategic-number sn-gold-dropsite-distance 5)
	(set-strategic-number sn-stone-dropsite-distance 5)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
)
#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined DEATH-MATCH
(defrule
	(or
		(and
			(goal strategy-goal flush)
			(wood-amount > 420)
		)
		(and
			(stone-amount == 0); if there are many players selling stone for castle age advance, not everyone gets enough gold
			(and
				(gold-amount < 200)
				(food-amount > 750)
			)
		)
	)
	(research-available castle-age)
	(strategic-number sn-current-age == feudal)
	(commodity-selling-price wood > 40)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "sell excess wood")
)
#end-if
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or
		(research-available imperial-age)
		(current-age >= imperial-age)
	)
	(wood-amount > 430)
	(commodity-selling-price wood > 40)
	(or
		(building-type-count town-center >= tc-level-four)
		(and
			(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
			(stone-amount < 50)
		)
	)
	(cc-players-unit-type-count 0 tree > 100)
	(gold-amount < 800)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "sell excess wood")
)
#end-if
#end-if
(defrule
	(current-age >= imperial-age)
	(or
		(civilian-population >= 90)
		(game-time > 3600)
	)
	(food-amount > 600)
	(or
		(and
			(commodity-selling-price food > 40)
			(gold-amount < 150)
		)
		(and
			(food-amount > 1650)
			(gold-amount < 800)
		)
	)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "sell excess food")
)
(defrule
	(or
		(strategic-number sn-minimum-water-body-size-for-dock < water-islands); don't sell too much on water maps, we can't gatherer on other islands
		(commodity-selling-price wood > 40)
	)
	(cc-players-unit-type-count 0 tree > 100)
	(food-amount < 2000); sell food first
	(wood-amount > 1200)
	(dropsite-min-distance wood < 7)
	(gold-amount < 800)
	(or
		(starting-age < post-imperial-age)
		(or
			(commodity-selling-price wood > 40)
			(food-amount < 800)
		)
	)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "sell excess wood")
)
(defrule
	(strategic-number sn-resource-control == ri-heresy)
	(wood-amount > 220)
	(gold-amount < 1100)
	(commodity-selling-price wood > 20)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "emergency sell wood - need ri-heresy")
)
(defrule
	(strategic-number sn-resource-control == ri-heresy)
	(food-amount > 300)
	(gold-amount < 1100)
	(commodity-selling-price food > 20)
	(not (research-completed ri-light-cavalry))
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "emergency sell food - need ri-heresy")
)
(defrule
	(research-available imperial-age)
	(food-amount > 1100)
	(gold-amount < 800)
	(nand
		(and
			(gold-amount < 500)
			(wood-amount > 350)
		)
		(and
			(population < max-civ-pop)
			(strategic-number sn-minimum-boar-hunt-group-size == 5)
		)
	)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "5 Sell Food - need gold for imperial-age")
)
(defrule
	(research-available imperial-age)
	(wood-amount > 400)
	(food-amount > 800)
	(gold-amount < 700)
	(dropsite-min-distance wood < 7)
	(nand
		(gold-amount < 500)
		(population < max-civ-pop)
	)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "5 Sell Wood - need gold for imperial-age")
)
(defrule
	(research-available imperial-age)
	(civilian-population >= up-max-civ)
	(players-unit-type-count every-ally villager >= 95)
	(food-amount < 500)
	(gold-amount >= 800)
	(players-building-type-count every-ally market > 0)
=>
	(chat-to-allies-using-id 22122)
	(disable-self)
)
(defrule
	(strategic-number sn-resource-control != ri-heresy)
	(or
		(and
			(and
				(food-amount < 1000)
				(research-available imperial-age)
			)
			(gold-amount > 950)
		)
		(and
			(and
				(food-amount < 800)
				(research-available castle-age)
			)
			(gold-amount > 350)
		)
	)
	(civilian-population >= 15)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "3 buy food for age up")
)
(defrule
	(strategic-number sn-resource-control != ri-heresy)
	(goal under-attack-goal 1)
	(civilian-population < fourty-percent-pop)
	(food-amount < 100)
	(gold-amount > 350)
	(commodity-buying-price food < 170)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-allies-using-id 22122)
)
(defrule
	(wood-amount >= 275)
	(stone-amount < 100)
	(building-type-count-total town-center == 0)
	(or
		(can-buy-commodity stone)
		(and
			(players-building-type-count any-ally market > 0)
			(timer-triggered tribute-timer)
		)
	)
	(unit-type-count villager > 0)
=>
	(buy-commodity stone)
	(chat-to-allies-using-id 22125)
	(enable-timer tribute-timer 30)
)
(defrule
	(strategic-number sn-resource-control < 2)
	(wood-amount >= 330)
	(stone-amount < 100)
	(civilian-population < 80)
	(current-age-time > 300)
	(current-age >= castle-age)
	(or
		(building-type-count-total town-center < 2)
		(building-type-count town-center >= 2)
	)
	(building-type-count-total town-center < 3)
	(not (goal strategy-goal fast-imp))
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
	(chat-to-player my-player-number "6")
)
(defrule
	(strategic-number sn-resource-control < 2)
	(wood-amount >= 330)
	(stone-amount < 100)
	(civilian-population < 80)
	(current-age-time > 300)
	(current-age >= castle-age)
	(building-type-count town-center >= 2)
	(building-type-count-total town-center < 4)
	(not (goal strategy-goal fast-imp))
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
	(chat-to-player my-player-number "6")
)
(defrule
	(stone-amount < 650)
	(civilian-population < 80)
	(current-age >= imperial-age)
	(building-type-count-total castle == 0)
	(gold-amount > 400)
	(unit-type-count trade-cart > 4)
	(or
		(dropsite-min-distance stone > 20)
		(dropsite-min-distance stone < 0)
	)
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
	(chat-to-player my-player-number "6")
)
(defrule
	(research-available imperial-age)
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-strategic-number sn-current-age castle)
	(chat-to-player my-player-number "imperial-age research failed!"); imperial research failed, set our age-tracking back
)
(defrule
	(research-available imperial-age)
	(civilian-population > 95)
	(game-time >= 2400)
	(population > seventy-five-percent-pop)
=>
	(set-escrow-percentage food 10)(set-escrow-percentage gold 20)
)
(defrule
	(can-research-with-escrow imperial-age)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(set-strategic-number sn-current-age ci-transit)
	(chat-to-allies "41up")
	(research imperial-age)
)
(defrule
	(or
		(population < sixty-percent-pop)
		(military-population < 20)
	)
	(goal under-attack-goal 1)
	(strategic-number sn-military-level < 0)
=>
	(release-escrow food)(release-escrow gold)
)
(defrule
	(or
		(unit-type-count villager > 14)
		(or
			(death-match-game)
			(and
				(or
					(starting-resources == high-resources)
					(difficulty == hardest)
				)
				(game-time > 90)
			)
		)
	)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-current-age imperial)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)(disable-self)
)
#load-if-not-defined WONDER-RACE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal forward-threat-goal 1)
	(current-age >= castle-age)
	(wood-amount < 200)
	(building-type-count-total siege-workshop == 0)
	(nand
		(strategic-number sn-military-level < 0)
		(goal under-attack-goal 1)
	)
	(or
		(goal unit-goal archer)
		(goal unit-goal cavalry-archer)
	)
=>
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = siege-workshop")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-military-level > 1)
	(or
		(nor
			(goal strategy-goal fast-imp); don't delay fast imp or booms
			(goal strategy-goal boom)
		)
		(goal control-goal shot); except if meso shot
	)
	(building-type-count siege-workshop > 0)
	(unit-type-count-total siege-units == 0)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control == 0)
	(or
		(goal strategy-goal rush)
		(goal strategy-goal flush)
	)
	(strategic-number sn-military-level > 1)
	(goal unit-goal default-ranged)
	(building-type-count siege-workshop > 0)
	(unit-type-count-total battering-ram-line < 3)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal forward-threat-goal 1)
	(building-type-count siege-workshop > 0)
	(or
		(unit-type-count-total battering-ram-line == 0)
		(players-building-type-count every-enemy watch-tower > 3)
	)
	(unit-type-count-total battering-ram-line < 3)
	(strategic-number sn-trebuchet-count == 0)
	(nand
		(strategic-number sn-military-level < 0)
		(goal under-attack-goal 1)
	)
	(civilian-population > 22)
=>
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal forward-threat-goal 1)
	(building-type-count siege-workshop > 0)
	(players-building-type-count every-enemy watch-tower > 5)
	(unit-type-count-total battering-ram-line < 8)
	(strategic-number sn-trebuchet-count == 0)
	(nand
		(strategic-number sn-military-level < 0)
		(goal under-attack-goal 1)
	)
=>
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count siege-workshop > 0)
	(unit-type-count-total battering-ram-line == 0)
	(strategic-number sn-trebuchet-count == 0)
	(goal team-coordination-goal 1)
	(players-building-type-count any-enemy stone-wall > 10)
=>
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count siege-workshop > 0)
	(unit-type-count-total battering-ram-line == 0)
	(current-age == imperial-age)
	(nor 
		(can-afford-unit battering-ram-line)
		(research-available ri-theocracy)
	)
	(nor 
		(research-available ri-illumination)
		(research-available ri-block-printing)
	)
	(strategic-number sn-trebuchet-count == 0)
=>
	(set-strategic-number sn-resource-control battering-ram)
	(chat-to-player my-player-number "save-resources = battering-ram")
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(goal forward-threat-goal 1)
			(unit-type-count battering-ram-line < 2)
		)
		(strategic-number sn-resource-control == battering-ram)
	)
	(can-train-with-escrow battering-ram-line)
=>
	(release-escrow wood)(release-escrow gold)
	(train battering-ram-line)
	(set-strategic-number sn-resource-control 0)
)
(defrule
	(building-type-count dock > 0)
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(research-available ri-war-galley)
	(goal enemy-boats-goal 1)
	(or
		(and
			(unit-type-count fire-ship-line > 14)
			(research-completed ri-bow-saw)
		)
		(or
			(civ-selected viking)
			(unit-type-count galley-line > 6)
		)
	)
	(food-amount < 230)
=>
	(set-goal train-civ-goal navy)
	(set-strategic-number sn-resource-control navy)
	(chat-to-player my-player-number "save-resources for navy upgrades")
)
(defrule
	(gold-amount > 300)
	(food-amount < 200)
	(strategic-number sn-resource-control == navy)
	(or
		(research-available ri-war-galley)
		(research-available ri-careening)
	)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "3 buy food for navy-upgrades")
)
(defrule
	(goal train-civ-goal 1)
	(strategic-number sn-cavalry-threat >= 1)
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-military-level >= 0)
	(military-population > 10)
	(building-type-count barracks > 0)
	(not (players-civ every-enemy aztec))
	(nand
		(goal unit-goal knight)
		(unit-type-count villager < 60)
	)
	(research-available ri-pikeman)
=>
	(set-strategic-number sn-resource-control ri-pikeman)
	(set-goal train-civ-goal ri-pikeman)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(research-available ri-chain-mail)
=>
	(set-goal train-civ-goal ri-chain-mail); stop villager training only EWs
	(chat-to-player my-player-number "save-resources = ri-chain-mail")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal ri-chain-mail)
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(research-completed ri-pikeman)
	(research-available ri-chain-mail)	
=>
	(set-strategic-number sn-resource-control ri-chain-mail);stop all units; vils remain stopped
	(chat-to-player my-player-number "save-resources = ri-chain-mail")
)
(defrule
	(or
		(strategic-number sn-resource-control == ri-long-swordsman)
		(or
			(goal train-civ-goal ri-chain-mail)
			(goal train-civ-goal ri-pikeman)
		)
	)
	(gold-amount > 300)
	(food-amount < 150)
	(can-buy-commodity food)
=>
	(buy-commodity food)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count skirmisher-line > 7)
	(research-available ri-elite-skirmisher)
	(nor
		(and
			(wood-amount < 150)
			(and
				(food-amount > 250); get eskirms over 2nd TC or monastery
				(gold-amount > 250); but don't slow down all other researches
			)
		)
		(and
			(wood-amount > 400); better spend the wood on buildings as gold is low.
			(gold-amount < 75)
		)
	)
	(goal strategy-goal flush)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control ri-elite-skirmisher)
	(chat-to-player my-player-number "save-resources = ri-elite-skirmisher")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(research-available ri-elite-skirmisher)	
	(or
		(building-type-count-total town-center >= tc-level-three)
		(strategic-number sn-archer-threat > 0)
	)
	(current-age-time > 120); don't immediately block everything
	(unit-type-count skirmisher-line > 7)
	(building-type-count archery-range > 0)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control ri-elite-skirmisher)
	(chat-to-player my-player-number "save-resources = ri-elite-skirmisher")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-archer-threat >= 1)
	(research-available ri-elite-skirmisher)
	(or
		(nand
			(town-under-attack)
			(strategic-number sn-military-level < 0)
		)
		(building-type-count-total town-center >= tc-level-four)
	)
	(building-type-count-total town-center >= tc-level-three)
	(military-population > 14)
	(building-type-count archery-range > 0)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control ri-elite-skirmisher)
	(chat-to-player my-player-number "save-resources = ri-elite-skirmisher")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-archer-threat >= 1)
	(research-available ri-elite-skirmisher)
	(or
		(goal unit-goal archer)
		(goal unit-goal cavalry-archer)
	)
	(or
		(building-type-count-total town-center >= tc-level-two)
		(building-type-count-total siege-workshop > 0)
	)
	(military-population > 19)
	(building-type-count archery-range > 0)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control ri-elite-skirmisher)
	(chat-to-player my-player-number "save-resources = ri-elite-skirmisher")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-archer-threat >= 1)
	(research-available ri-elite-skirmisher)
	(or
		(goal unit-goal eagle-warrior)
		(and
			(goal unit-goal knight)
			(goal control-goal aggressive-rush)
		)
	)
	(building-type-count archery-range > 0)
	(military-population > 14)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control ri-elite-skirmisher)
	(chat-to-player my-player-number "save-resources = ri-elite-skirmisher")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal ranged-unit-type-goal archer)
	(or
		(goal unit-goal archer)
		(and
			(goal unit-goal knight)
			(goal anti-cavalry-threat-goal 1)
		)
	)
	(research-available ri-crossbow)
	(building-type-count archery-range >= 1)
=>
	(set-goal train-civ-goal ri-crossbow)
	(set-strategic-number sn-resource-control ri-crossbow)
	(chat-to-player my-player-number "save-resources = ri-crossbow")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal ranged-unit-type-goal archer)
	(or
		(and
			(wood-amount > 150)
			(food-amount < 70)
		)
		(goal enemy-goal eagle-warrior)
	)
	(gold-amount > 250)
	(research-available ri-crossbow)
	(building-type-count archery-range >= 1)
=>
	(set-goal train-civ-goal ri-crossbow)
	(set-strategic-number sn-resource-control ri-crossbow)
	(chat-to-player my-player-number "save-resources = ri-crossbow")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(current-age == castle-age)
	(goal train-civ-goal 1)
	(or
		(and
			(goal unit-goal archer)
			(building-type-count archery-range >= 1)
		)
		(and
			(unit-type-count ranged-units > 8)
			(goal unit-goal my-unique-unit-line)
		)
	)
	(research-available ri-fletching)
=>
	(set-goal train-civ-goal ri-fletching)
)
(defrule
	(strategic-number sn-military-level >= 0)
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(unit-type-count ranged-units >= 10)
	(goal strategy-goal flush)
	(not (research-available ri-long-swordsman))
	(research-available ri-bodkin-arrow)
=>
	(set-goal train-civ-goal ri-bodkin-arrow)
	(set-strategic-number sn-resource-control ri-bodkin-arrow)
	(chat-to-player my-player-number "save-resources = ri-bodkin-arrow")
)
#load-if-not-defined BRITON-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal unit-goal archer)
	(research-available ri-bodkin-arrow)
	(nand
		(strategic-number sn-cavalry-threat >= 1)
		(unit-type-count spearman-line < 10)
	)
	(nor 
		(research-available ri-crossbow)
		(or
			(goal strategy-goal boom)
			(goal strategy-goal fast-imp)
		)
	)
=>
	(set-goal train-civ-goal ri-bodkin-arrow)
	(set-strategic-number sn-resource-control ri-bodkin-arrow)
	(chat-to-player my-player-number "save-resources = ri-bodkin-arrow")
)
#else
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal unit-goal archer)
	(research-available ri-bodkin-arrow)
	(nand
		(strategic-number sn-cavalry-threat >= 1)
		(unit-type-count spearman-line < 10)
	)
	(research-completed ri-crossbow)
	(or
		(building-type-count-total town-center == 1)
		(unit-type-count villager > 55)
	)
=>
	(set-goal train-civ-goal ri-bodkin-arrow)
	(set-strategic-number sn-resource-control ri-bodkin-arrow)
	(chat-to-player my-player-number "save-resources = ri-bodkin-arrow")
)
#end-if
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(or
		(unit-type-count-total war-galley > 0)
		(and
			(building-type-count-total stable < 2)
			(unit-type-count cavalry-archer-units >= 15)
		)
	)
	(research-available ri-bodkin-arrow)
=>
	(set-goal train-civ-goal ri-bodkin-arrow)
	(set-strategic-number sn-resource-control ri-bodkin-arrow)
	(chat-to-player my-player-number "save-resources = ri-bodkin-arrow")
)
#load-if-defined AZTEC-CIV; _Aztecs
(defrule
	(can-research-with-escrow my-unique-research)
	(nand
		(research-available ri-elite-eagle)
		(unit-type-count eagle-warrior-line > 17)
	)
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined BRITON-CIV; _Saxons
(defrule
	(can-research-with-escrow my-unique-research)
=>
	(release-escrow wood)(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined CHINESE-CIV; _Chinese
(defrule
	(unit-type-count my-unique-unit-line > 9)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined FRANKISH-CIV; _Franks
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count-total my-unique-unit-line > 10)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined GOTHIC-CIV
(defrule
	(can-research-with-escrow ri-perfusion)
=>
	(release-escrow wood)(release-escrow gold)
	(research ri-perfusion)
)
#end-if
#load-if-defined MAYAN-CIV; _Mayans
(defrule
	(not (research-available ri-elite-eagle))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-current-age >= ci-transit)
	(strategic-number sn-military-level >= 0)
	(research-available ri-eagle-warrior)
	(goal unit-goal eagle-warrior)
=>
	(set-strategic-number sn-resource-control ri-elite-eagle)
	(chat-to-player my-player-number "save-resources = ri-eagle-warrior")
)
#end-if
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(and
			(and
				(strategic-number sn-current-age == ci-transit)
				(strategic-number sn-military-level >= 0)
			)
			(nand
				(food-amount > 800)
				(gold-amount > 500)
			)
		)
		(research-available ri-elite-eagle)
	)
	(goal unit-goal eagle-warrior)
=>
	(set-strategic-number sn-resource-control ri-elite-eagle)
	(chat-to-player my-player-number "save-resources = ri-elite-eagle")
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(research-available ri-arbalest)
	(or
		(and
			(food-amount > 350)
			(gold-amount < 300)
		)
		(food-amount < 350)
	)
	(goal unit-goal archer)
=>
	(set-strategic-number sn-resource-control ri-arbalest)
	(chat-to-player my-player-number "save-resources = ri-arbalest")
)
#load-if-not-defined TURKISH-CIV; they get chemistry for free
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(research-available ri-chemistry)
		(and
			(strategic-number sn-current-age == ci-transit)
			(or
				(food-amount < 300)
				(gold-amount < 200)
			)
		)
	)
	(building-type-count university > 0)
	(goal unit-goal gunpowder-units)
=>
	(set-strategic-number sn-resource-control ri-chemistry)
	(chat-to-player my-player-number "save-resources = ri-chemistry")
)
#end-if
#load-if-not-defined RIVERS-MAP
#load-if-not-defined BALTIC-MAP
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(strategic-number sn-resource-control < 2)
	(or
		(soldier-count >= 45)
		(game-time < 3600)
	)
	(soldier-count > 15)
	(nand
		(building-type-count dock == 0); we lost the naval battle so train more soldiers to defend
		(and
			(current-age >= castle-age)
			(game-time > 1800)
		)
	)
	(population-cap <= 250)
=>
	(set-strategic-number sn-resource-control 1); train navy only
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(population >= del-civ-pop)
	(or
		(civilian-population > 70)
		(game-time > 5400)
	)
	(players-unit-type-count every-enemy fire-ship-line < 12)
	(players-unit-type-count every-enemy galley-line < 12)
	(warboat-count > 40)
	(or
		(and
			(soldier-count > 19)
			(unit-type-count transport-ship < 2)
		)
		(soldier-count < 21)
	)
	(population-cap <= 250)
=>
	(set-goal train-civ-goal -1)
	(delete-unit villager)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(population >= del-civ-pop)
	(current-age == imperial-age)
	(or
		(warboat-count < 45)
		(and
			(unit-type-count transport-ship > 1)
			(or
				(dropsite-min-distance wood > 20)
				(cc-players-unit-type-count 0 tree < 20)
			)
		)
	)
	(building-type-count dock > 0)
=>
	(set-goal train-civ-goal -1)
	(delete-unit villager)
)
#end-if
#end-if
#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(research-available ri-chain-barding)
	(gold-amount >= 150)
	(or
		(and
			(civ-selected saracen)
			(goal hostilities-goal 1)
		)
		(goal control-goal shot)
	)
=>
	(set-goal train-civ-goal ri-chain-barding)
	(set-strategic-number sn-resource-control ri-chain-barding)
	(chat-to-player my-player-number "save-resources = ri-chain-barding")
)
#end-if
#end-if
; Place TC upgrades always before villager training or they won't fire unless you reached max villager
(defrule
	(strategic-number sn-resource-control == 3)
	(or
		(not (research-available ri-hand-cart))
		(unit-type-count-total villager < 60)
	)
	(research-completed ri-wheel-barrow)
=>
	(release-escrow wood)(set-escrow-percentage wood 0)
	(set-strategic-number sn-resource-control 0)
	(set-goal train-civ-goal 1)
)
(defrule
	(goal train-civ-goal 1)
	(unit-type-count villager >= 40)
	(can-train villager)
	(research-available ri-wheel-barrow)
	(can-buy-commodity food)
	(food-amount >= 75)
	(food-amount < 175)
	(wood-amount >= 50); enough wood for it
=>
	(buy-commodity food)
	(research ri-wheel-barrow)
	(chat-to-player my-player-number "Attempting to research ri-wheel-barrow: Buy Food")
	(set-goal train-civ-goal 2)
	(set-strategic-number sn-resource-control 3)
)
(defrule
	(goal train-civ-goal 1)
	(unit-type-count villager >= 50)
	(research-available ri-wheel-barrow)
	(strategic-number sn-military-level >= 0)
=>
	(set-goal train-civ-goal 2)
	(set-strategic-number sn-resource-control 3)
	(chat-to-player my-player-number "save-resources = ri-wheel-barrow")	
)
(defrule
	(strategic-number sn-resource-control == 3)
	(players-building-type-count any-ally market > 0)
	(unit-type-count villager >= 60)
	(research-available ri-hand-cart)
	(food-amount > 300)
	(wood-amount < 150)
=>
	(chat-to-allies-using-id 22123)
	(disable-self)
)
(defrule
	(nor
		(town-under-attack)
		(and
			(building-type-count-total town-center == 1)
			(goal strategy-goal fast-imp)
		)
	)
	(goal train-civ-goal 1)
	(strategic-number sn-resource-control < 4)
	(unit-type-count villager >= 60)
	(research-available ri-hand-cart)
	(can-buy-commodity food)
	(food-amount < 300)
=>
	(set-escrow-percentage wood 100)
	(buy-commodity food)
	(chat-to-player my-player-number "Attempting to research ri-hand-cart: Buy Food")
	(set-strategic-number sn-resource-control 3)
)
(defrule
	(nor
		(town-under-attack)
		(and
			(building-type-count-total town-center == 1)
			(goal strategy-goal fast-imp)
		)
	)
	(strategic-number sn-resource-control < 4)
	(unit-type-count villager >= 60)
	(research-available ri-hand-cart)
	(can-buy-commodity wood)
	(food-amount >= 300); enough food for it
	(wood-amount >= 100)
	(wood-amount < 200)
=>
	(set-escrow-percentage wood 100)
	(buy-commodity wood)
	(chat-to-player my-player-number "Attempting to research ri-hand-cart: Buy Wood")
	(set-strategic-number sn-resource-control 3)
)
(defrule
	(strategic-number sn-resource-control == 3)
	(research-available ri-hand-cart)
	(escrow-amount wood >= 200)
=>
	(set-escrow-percentage wood 0)
)
(defrule
	(or
		(or
			(goal strategy-goal sling)
			(goal strategy-goal flush)
		)
		(population-cap < 49) ;Ł erase cap 75
	)
	(unit-type-count villager >= 16)
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
	(set-goal train-civ-goal 1)
	(set-strategic-number sn-resource-control 0)
)
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(unit-type-count villager >= 29)
	(strategic-number sn-resource-control < 4)
	(or
		(current-age >= castle-age)
		(and
			(current-age-time < 20)
			(food-amount > wb-food)
		)
	)
	(nand 
		(goal unit-goal my-unique-unit-line)
		(research-available ri-stone-mining)
	)
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
	(set-goal train-civ-goal 1)
	(set-strategic-number sn-resource-control 0)
)
#else
(defrule
	(unit-type-count villager >= 28)
	(strategic-number sn-resource-control < 4)
	(or
		(current-age >= castle-age)
		(and
			(current-age-time < 20)
			(food-amount > wb-food)
		)
	)
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
	(set-goal train-civ-goal 1)
	(set-strategic-number sn-resource-control 0)
)
#end-if
(defrule
	(unit-type-count-total villager >= 60)
	(can-research-with-escrow ri-hand-cart)
	(research-completed ri-city-councils)
=>
	(release-escrow wood)(set-escrow-percentage wood 0)
	(research ri-hand-cart)
	(set-goal train-civ-goal 1)
	(set-strategic-number sn-resource-control 0)
)
#end-if ; not WONDER-RACE
#load-if-defined DIFFICULTY-HARDEST
(defrule
	(or
		(not (can-train villager))
		(unit-type-count villager > 11)
	)
	(can-research ri-loom)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
	(research ri-loom)
)
#else
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == dark-age-villager)
	(food-amount < 450)
=>
	(set-goal need-extra-farms-goal 2)
)
(defrule
	(or
		(or
			(research-available ri-wheel-barrow)
			(civ-selected viking)
		)
		(or
			(and
				(gold-amount > 220)
				(food-amount < 730)
			)
			(or
				(current-age >= castle-age)
				(goal strategy-goal flush)
			)
		)
	)
	(current-age >= feudal-age)
	(can-research ri-loom)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
	(research ri-loom)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(or
		(and
			(unit-type-count villager == dark-age-villager); research ri-loom to prevent idle TC time
			(food-amount < 480)
		)
		(and
			(or
				(unit-type-count male-hunter > 0); research ri-loom to protect hunters
				(unit-type-count female-hunter > 0)
			)
			(strategic-number sn-maximum-hunt-drop-distance > 12)
		)
	)
	(can-research ri-loom)
=>
	(research ri-loom)
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
)
#else
#load-if-defined SCANDANAVIA-MAP
(defrule
	(current-age == dark-age)	
	(can-research ri-loom)
=>
	(research ri-loom)
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
)
#end-if
#end-if
#load-if-not-defined UP-AVAILABLE
#load-if-not-defined HUN-CIV; huns aren't housed at the start for obvious reasons.
#load-if-not-defined PERSIAN-CIV; persians have 50F extra, so most likely no idle tc time due to < 50F.
(defrule
	(building-type-count town-center > 0); not on nomad
	(game-time > 17)
	(game-time < 21)
	(unit-type-count female-shepherd == 0)
	(unit-type-count male-shepherd == 0)
	(unit-type-count female-forager == 0)
	(unit-type-count male-forager == 0)
=>
	(set-goal need-loom-goal 1)
)
#end-if
#else
(defrule
	(unit-type-count villager < 10)
	(not (can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(not (can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
)
#end-if

(defrule
	(current-age == feudal-age)
	(goal strategy-goal rush)
	(current-age-time >= 23)
	(building-type-count-total blacksmith == 0)
	(or
		(or
			(research-available ri-wheel-barrow)
			(civ-selected viking)
		)
		(current-age-time >= 60)
	)
=>
	(set-goal need-loom-goal 1)
)
(defrule
	(can-research ri-loom)
	(or
		(goal need-loom-goal 1)
		(or
			(and
				(strategic-number sn-mill-max-distance >= 30); scandi/nomad map
				(food-amount < 50)
			)
			(or
				(civ-selected mayan)
				(civ-selected chinese)
			)
		)
	)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
	(research ri-loom)
)
#load-if-defined LOW-RESOURCES-START
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-defined FORTRESS-MAP
(defrule
	(goal train-civ-goal 1)
	(or
		(and
			(current-age == feudal-age)
			(gold-amount < 190)
		)
		(and
			(unit-type-count villager < 31)
			(current-age == dark-age)
		)
	)
	(can-train villager)
=>
	(train villager)
)
#end-if
#end-if
#end-if
#end-if
#end-if ;not hardest
#load-if-not-defined WONDER-RACE
(defrule
	(goal train-civ-goal 1)
	(current-age == feudal-age)
	(or
		(goal strategy-goal rush)
		(goal strategy-goal boom)
	)
	(or
		(food-amount < 760)
		(current-age-time < 30)
	)
	(or
		(current-age-time < 55)
		(starting-age == feudal-age)
	)
	(can-train villager)
=>
	(train villager)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(or
		(unit-type-count female-forager > 0); when the last berries are gone, wait a few seconds for retasking villagers
		(unit-type-count male-forager > 0)
	)
	(current-age == dark-age)
	(building-type-count-total mill == 1)
	(sheep-and-forage-too-far)
=>
	(enable-timer second-mill-timer 15)
	(disable-self)
)
(defrule
	(timer-triggered second-mill-timer)
	(or
		(unit-type-count female-forager > 0)
		(unit-type-count male-forager > 0)
	)
	(current-age == dark-age)
	(unit-type-count villager > 23)
	(building-type-count-total mill == 1)
	(sheep-and-forage-too-far)
	(can-build mill)
=>
	(build mill)
)
#load-if-not-defined SCANDANAVIA-MAP
(defrule
	(unit-type-count female-forager == 0); berries run out fast
	(unit-type-count male-forager == 0); increase hunt-distance and research loom after hunters deteceted
	(current-age == dark-age)
	(building-type-count-total lumber-camp > 0)
	(unit-type-count villager > 20)
	(or
		(unit-type-count villager < 26)
		(and
			(civ-selected mongol); try late dark age hunting with mongols to use their civ bonus
			(unit-type-count-total villager > 28)
		)
	)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance loom-hunt-distance)
)
#else
(defrule
	(building-type-count town-center > 0)
	(strategic-number sn-current-age == dark)
	(or
		(or 
			(unit-type-count female-hunter >= 1)
			(unit-type-count male-hunter >= 1)
		)
		(and
			(building-type-count-total mill == 0); as there are no berries build 1st mill anyways
			(game-time > 180)
		)
	)
	(can-build mill)
	(building-type-count-total mill < 2)
=>
	(set-strategic-number sn-preferred-mill-placement 1); mill deer with UP
	(build mill)
)
(defrule
	(current-age == dark-age)
	(building-type-count mill > 0)
	(or
		(building-type-count house > 1)
		(civ-selected hun)
	)
	(building-type-count-total farm < 4)
=>
	(set-goal farm-goal 1)
)
#end-if ; SCANDANAVIA-MAP
#end-if
#load-if-not-defined DEATH-MATCH
#load-if-not-defined SCANDANAVIA-MAP
(defrule
	(strategic-number sn-minimum-civilian-explorers > 0)
	(timer-triggered civ-explore-timer)
	(game-time > 90)
	(strategic-number sn-maximum-wood-drop-distance == 0)
=>
	(set-strategic-number sn-maximum-wood-drop-distance -1)
	(chat-local-to-self "enable wood gathering")
)
(defrule
	(game-time > 90)
	(strategic-number sn-percent-civilian-explorers == 0)
	(building-type-count-total mill == 0)
	(unit-type-count villager < 11)
	(sheep-and-forage-too-far)
	(strategic-number sn-current-age == dark)
	(building-type-count town-center > 0)
=>
	(set-strategic-number sn-percent-civilian-builders 0)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-minimum-civilian-explorers 12)
	(set-strategic-number sn-maximum-food-drop-distance 32)
	(set-strategic-number sn-maximum-wood-drop-distance 0)
	(enable-timer civ-explore-timer 20)
	(chat-local-to-self "civ explore again")
	(disable-self)
)
#end-if
#end-if
#load-if-not-defined UP-AVAILABLE
#load-if-not-defined GOLD-RUSH-MAP
(defrule
	(or 
		(unit-type-count female-hunter >= 1)
		(unit-type-count male-hunter >= 1)
	)
	(or
		(civ-selected japanese)
		(and
			(civ-selected aztec)
			(goal unit-goal eagle-warrior)
		)
	)
	(goal farm-goal 1)
	(can-build mill)
	(building-type-count-total mill < 2)
=>
	(set-strategic-number sn-mill-max-distance 26)
	(build mill)
)
#end-if
#end-if
; try to push to castle age
(defrule
	(goal strategy-goal flush)
	(or
		(or
			(goal enemy-goal flush)
			(goal enemy-goal eagle-warrior)
		)
		(current-age-time >= 720)
	)
	(research-available castle-age)
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-military-level >= 0)
	(goal under-attack-goal 0)
	(game-time >= 1300)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = castle-age")
)
(defrule
	(goal strategy-goal flush)
	(research-available castle-age)
	(strategic-number sn-resource-control == 2)
	(military-population < 15)
	(goal under-attack-goal 1)
=>
	(set-strategic-number sn-resource-control 0)
)
(defrule
	(or
		(strategic-number sn-minimum-boar-hunt-group-size == 5)
		(players-military-population every-enemy < 5)
	)
	(goal strategy-goal flush)
	(goal forward-threat-goal 1)
	(strategic-number sn-current-age == feudal)
	(strategic-number sn-resource-control == 0)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = castle-age")
)
; try to push to imperial age
(defrule
	(research-available imperial-age)
	(strategic-number sn-current-age == castle)
	(strategic-number sn-resource-control == 0)
	(building-type-count town-center >= tc-level-two)
	(population > 140)
	(strategic-number sn-military-level >= 0)
	(nor 
		(town-under-attack)
		(and
			(players-current-age any-enemy == imperial-age)
			(strategic-number sn-military-level >= 2)
		)
	)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = imperial-age")
)
(defrule
	(strategic-number sn-current-age == castle)
	(strategic-number sn-resource-control == 0)
	(population >= 135)
	(or
		(strategic-number sn-military-level >= 0)
		(unit-type-count cavalry-units > 20)
	)
	(goal under-attack-goal 0)
	(or
		(goal strategy-goal fast-imp)
		(and
			(goal strategy-goal boom)
			(goal unit-goal knight)
		)
	)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = imperial-age")
)
(defrule
	(strategic-number sn-resource-control == 2)
	(strategic-number sn-current-age == castle)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-three)
	(not (research-available imperial-age))
	(goal unit-goal knight)
	(food-amount > 400)
	(gold-amount > 400)
=>
	(set-goal strategy-goal fast-imp)
	(disable-self)
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-current-age == castle)
	(or
		(building-type-count monastery > 0)
		(building-type-count siege-workshop > 0)
	)
=>
	(set-strategic-number sn-resource-control 2); block resources and don't train monks or scorps before imperial age up
)
#end-if
(defrule
	(strategic-number sn-resource-control == 0)
	(or
		(and
			(research-available ri-cavalier)
			(or
				(goal unit-goal knight-line)
				(unit-type-count knight-line > 12)
			)
		)
		(and	
			(research-available ri-hussar)
			(nor 
				(goal unit-goal militiaman-line)
				(civ-selected magyar)
			)
		)
	)
	(not (research-completed ri-champion))
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(strategic-number sn-resource-control == 0)
	(or
		(and	
			(or
				(research-available ri-two-handed-swordsman)
				(research-available ri-champion)
			)
			(or
				(goal unit-goal militiaman-line)
				(goal control-goal militiaman-line)
			)
		)
		(and
			(goal ranged-unit-type-goal archer)
			(research-available ri-arbalest)
		)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-current-age >= ci-transit)
	(or
		(or
			(research-available ri-blast-furnace)
			(research-available ri-plate-mail)
		)
		(research-available ri-chain-mail)
	)
	(unit-type-count infantry-units > 12)
	(or
		(food-amount < 350)
		(gold-amount < 225)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-current-age >= ci-transit)
	(or
		(or
			(research-available ri-blast-furnace)
			(research-available ri-plate-barding)
		)
		(research-available ri-chain-barding)
	)
	(unit-type-count cavalry-units > 12)
	(or
		(food-amount < 350)
		(gold-amount < 225)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(strategic-number sn-resource-control == 0)
	(strategic-number sn-current-age == ci-transit)
	(population >= eighty-five-percent-pop)
	(goal unit-goal knight)
	(or
		(strategic-number sn-military-level >= 0)
		(unit-type-count knight-line > 19)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(strategic-number sn-resource-control == 0)
	(goal unit-goal knight)
	(research-available ri-paladin)
	(unit-type-count knight-line > 22)
	(population > eighty-five-percent-pop)
=>
	(set-strategic-number sn-resource-control 2)
)
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-resource-control == 0)
	(unit-type-count camel-line > 7)
	(or
		(research-available ri-heavy-camel)
		(research-available ri-imperial-camel)
	)
	(population > eighty-five-percent-pop)
=>
	(set-strategic-number sn-resource-control 2)
)
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control == 0)
	(or
		(or
			(research-available ri-bracer)
			(research-available ri-chemistry)
		)
		(research-available ri-ring-archer-armor)
	)
	(or
		(food-amount < 300)
		(gold-amount < 250)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
#load-if-not-defined TURKISH-CIV
(defrule
	(goal train-civ-goal ri-crossbow)
	(strategic-number sn-resource-control == ri-crossbow)
	(nor
		(research-available ri-elite-skirmisher); archery range used for elite skirmisher research
		(research-completed ri-elite-skirmisher)
	)
	(building-type-count archery-range == 1)
=>
	(set-goal train-civ-goal 1)
	(set-strategic-number sn-resource-control 0)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(strategic-number sn-resource-control == 0)
	(building-type-count castle > 0)
	(or
		(research-available my-unique-research)
		(research-available ri-heavy-scorpion)
	)
	(population > eighty-five-percent-pop)
	(unit-type-count scorpion-line > 6)
=>
	(set-strategic-number sn-resource-control 2)
)
#end-if
(defrule
	(strategic-number sn-resource-control == 0)
	(population > eighty-five-percent-pop)
	(unit-type-count scorpion-line > 9)
	(research-available ri-heavy-scorpion)
=>
	(set-strategic-number sn-resource-control 2)
	(set-goal save-wood-goal 1)
)
(defrule
	(goal uu-up-goal 1)
	(population > max-civ-pop)
	(current-age-time > 120)
	(research-available my-unique-unit-upgrade); Celts
	(building-type-count castle > 0)
	(or
		(or
			(unit-type-count female-gold-miner > 0); don't start escrowing when gold income is low
			(unit-type-count male-gold-miner > 0)
		)
		(unit-type-count trade-cart > 5)
	)
=>
	(set-escrow-percentage food 30)(set-escrow-percentage gold 30)
	(set-goal escrow-purpose-goal my-unique-unit-line)
)
#load-if-not-defined AZTEC-CIV ; Jaguars aren't useful in trash wars
#load-if-not-defined BRITON-CIV ; Same as most ranged uu
#load-if-not-defined CHINESE-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(goal escrow-purpose-goal my-unique-unit-line)
	(unit-type-count female-gold-miner == 0)
	(unit-type-count male-gold-miner == 0)
	(unit-type-count trade-cart == 0)
=>
	(release-escrow food)
	(set-escrow-percentage food 0); pile up relic/market gold first, as this will take long
)
(defrule
	(or
		(and
			(goal escrow-purpose-goal my-unique-unit-line)
			(or
				(escrow-amount food >= escrow-amount-food)
				(population < max-civ-pop)
			)
		)
		(and
			(research-available imperial-age)
			(escrow-amount food >= imp-food)
		)
	)
=>
	(set-escrow-percentage food 0)
)
(defrule
	(or
		(and
			(goal escrow-purpose-goal my-unique-unit-line)
			(escrow-amount gold >= escrow-amount-gold)
		)
		(and
			(research-available imperial-age)
			(escrow-amount gold >= imp-gold)
		)
	)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 0)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
(defrule
	(goal escrow-purpose-goal my-unique-unit-line)
	(or
		(or
			(not (research-available my-unique-unit-upgrade)); SYS
			(building-type-count castle == 0); not included in check above
		)
		(and
			(population < 160)
			(goal under-attack-goal 1)
		)
	)
=>
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(release-escrow food)(release-escrow gold)
	(set-goal escrow-purpose-goal 0)
)
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(current-age >= castle-age)
	(strategic-number sn-resource-control == 2)
	(population < eighty-five-percent-pop)
	(or
		(population < 135)
		(and
			(strategic-number sn-military-level < 0)
			(nor
				(and
					(goal unit-goal knight)
					(research-available ri-cavalier)
				)
				(and
					(goal unit-goal militiaman-line)
					(research-available ri-two-handed-swordsman)
				)
			)
		)
	)
=>
	(set-strategic-number sn-resource-control 0)
)
#end-if
#load-if-defined UP-AVAILABLE
#load-if-defined SPANISH-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count religious-units > 12)
	(research-completed ri-theocracy)
	(research-available ri-inquisition)
	(building-type-count castle > 0)
=>
	(set-strategic-number sn-resource-control ri-inquisition)
	(chat-to-player my-player-number "save-resources = ri-inquisition")
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count religious-units > 12)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(goal hostilities-goal 1)
	)
	(building-type-count castle > 0)
	(research-available ri-orthodoxy)
=>
	(set-strategic-number sn-resource-control ri-orthodoxy)
	(chat-to-player my-player-number "save-resources = ri-orthodoxy")
)
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control == 0)
	(or
		(goal unit-goal monk)
		(goal ranged-unit-type-goal monk)
	)
	(unit-type-count-total monk > 5)
	(or
		(or
			(research-available ri-theocracy)
			(research-available ri-illumination)
		)
		(research-available ri-block-printing)
	)
=>
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(research-available imperial-age)
	(strategic-number sn-resource-control == 0)
	(goal unit-goal monk)
	(or
		(food-amount > 900)
		(unit-type-count-total monk > 30)
	)
	(unit-type-count-total monk > 20)
=>
	(set-strategic-number sn-resource-control 2)
	(chat-to-player my-player-number "save-resources = imperial-age")
)
(defrule
	(food-amount >= 175)
	(or
		(goal train-civ-goal ri-crossbow)
		(and
			(food-amount >= 265)
			(goal train-civ-goal ri-pikeman)
		)
	)
=>
	(set-goal train-civ-goal 1)
)
(defrule
	(or
		(building-type-count-total stone-wall > 20)
		(and
			(goal strategy-goal boom)
			(strategic-number sn-military-level >= 0)
		)
	)
	(or
		(goal train-civ-goal ri-crossbow)
		(goal train-civ-goal ri-bodkin-arrow)
	)
=>
	(set-goal train-civ-goal 1)
)
#load-if-defined DEATH-MATCH
(defrule
	(strategic-number sn-resource-control < 2)
	(civilian-population < fourty-percent-pop)
	(population >= eighty-five-percent-pop)
	(game-time < 1200)
=>
	(set-strategic-number sn-resource-control 2)
)
#load-if-defined DARK-AGE-START
(defrule
	(strategic-number sn-resource-control > 2)
	(food-amount > 2000)
	(gold-amount > 2000)
	(wood-amount > 2000)
=>
	(set-strategic-number sn-resource-control 0); resource control not needed in DM
	(set-goal save-wood-goal 0)
)
#end-if
#end-if
#load-if-not-defined WONDER-RACE
(defrule
	(or
		(players-tribute-memory any-computer-ally food == 100)
		(players-tribute-memory any-computer-ally gold == 100)
	)
	(players-population any-computer-ally >= del-civ-pop)
=>
	(clear-tribute-memory every-computer food)
	(clear-tribute-memory every-computer gold)
	(enable-timer tribute-timer 1); some scripts send only 100 of one res, even if they have tons of it, so ask for more.
)
(defrule
	(building-type-count town-center > 0)
	(players-building-type-count any-ally market > 0)
	(or
		(unit-type-count villager < 5)
		(and
			(players-civilian-population every-ally > fourty-percent-pop)
			(unit-type-count villager < twenty-five-percent-pop)
		)
	)
	(food-amount < 100)
	(not (town-under-attack))
	(timer-triggered tribute-timer)
=>
	(chat-to-allies-using-id 22122)
	(enable-timer tribute-timer 30)
)
(defrule
	(building-type-count town-center >= tc-level-two)
	(players-building-type-count any-ally market > 0)
	(game-time > 1800)
	(or
		(unit-type-count villager < 90)
		(strategic-number sn-resource-control == 2)
	)
	(food-amount < 100)
	(gold-amount > 200)
	(timer-triggered tribute-timer)
=>
	(chat-to-allies-using-id 22122)
	(enable-timer tribute-timer 30)
)
(defrule
	(building-type-count town-center >= tc-level-two)
	(players-building-type-count any-ally market > 0)
	(strategic-number sn-resource-control == 2)
	(food-amount > 500)
	(gold-amount < 200)
	(timer-triggered tribute-timer)
=>
	(chat-to-allies-using-id 22124)
	(enable-timer tribute-timer 30)
)
(defrule
	(players-building-type-count any-ally market > 0)
	(goal save-wood-goal 1)
	(wood-amount < 250)
	(timer-triggered tribute-timer)
=>
	(chat-to-allies-using-id 22123)
	(enable-timer tribute-timer 60)
)
(defrule
	(players-building-type-count any-ally market > 0)
	(strategic-number sn-resource-control < 4)
	(food-amount > 500)
	(gold-amount > 400)
	(wood-amount < 150)
	(timer-triggered tribute-timer)
=>
	(chat-to-allies-using-id 22123)
	(enable-timer tribute-timer 60)
)
(defrule
	(taunt-detected any-ally 3)
	(food-amount > 1000)
	(research-completed ri-banking)
	(building-type-count market > 0)
	(current-age == imperial-age)
=>
	(acknowledge-taunt this-any-ally 3)
	(tribute-to-player this-any-ally food 400)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "tribute food")
)
(defrule
	(taunt-detected any-ally 3)
	(food-amount > 300)
	(or
		(research-completed ri-banking)
		(food-amount > 1200)
	)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 3)
	(tribute-to-player this-any-ally food 100)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "tribute food")
)
(defrule
	(taunt-detected any-ally 4)
	(wood-amount > 900)
	(goal save-wood-goal 0)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 4)
	(tribute-to-player this-any-ally wood 300)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "tribute wood")
)
(defrule
	(taunt-detected any-ally 4)
	(wood-amount > 300)
	(goal save-wood-goal 0)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 4)
	(tribute-to-player this-any-ally wood 100)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "tribute wood")
)
(defrule
	(taunt-detected any-ally 5)
	(gold-amount > 300)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 5)
	(tribute-to-player this-any-ally gold 100)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "tribute gold")
)
(defrule
	(taunt-detected any-ally 6)
	(building-type-count-total market > 0)
	(or
		(stone-amount > 750)
		(and
			(players-building-type-count any-ally town-center == 0)
			(stone-amount >= 130)
		)
	)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 6)
	(tribute-to-player this-any-ally stone 100)
	(chat-to-player-using-id this-any-ally 22079)
	(chat-local-to-self "tribute stone")
)
(defrule
	(or
		(or
			(taunt-detected any-ally 3)
			(taunt-detected any-ally 4)
		)
		(or
			(taunt-detected any-ally 5)
			(taunt-detected any-ally 6)
		)
	)
	(building-type-count market == 0)
=>
	(chat-to-player-using-id this-any-ally 22164)
	(acknowledge-taunt this-any-ally 3)
	(acknowledge-taunt this-any-ally 4)
	(acknowledge-taunt this-any-ally 5)
	(acknowledge-taunt this-any-ally 6)
)
(defrule
	(or
		(or
			(taunt-detected any-ally 3)
			(taunt-detected any-ally 4)
		)
		(or
			(taunt-detected any-ally 5)
			(taunt-detected any-ally 6)
		)
	)
=>
	(acknowledge-taunt this-any-ally 3)
	(acknowledge-taunt this-any-ally 4)
	(acknowledge-taunt this-any-ally 5)
	(acknowledge-taunt this-any-ally 6)
)
#end-if ; NOT WONDER-RACE

;********************BASICS ********************

(defrule
	(strategic-number sn-current-age == dark)
	(building-type-count town-center > 0)
	(building-type-count-total mill == 0)
	(resource-found food)
	(or
		(or 
			(unit-type-count male-forager > 0)
			(unit-type-count female-forager > 0)
		)
		(and
			(death-match-game)
			(current-age == dark-age)
		)
	)
	(can-build mill)
=>
	(build mill)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(current-age == dark-age)
	(building-type-count town-center > 0)
	(building-type-count-total mill == 0); emergency mill for no berries
	(game-time > 180)
	(or
		(and
			(sheep-and-forage-too-far)
			(food-amount < 50)
		)
		(unit-type-count-total villager >= emergency-mill-villager); some other foood sources available
	)
	(or
		(wood-amount > 200)
		(building-type-count lumber-camp > 0)
	)
	(can-build mill)
=>
	(build mill)
	(set-strategic-number sn-mill-max-distance 12); reduce distance in case it couldn't be built due to insufficient exploration.
	(chat-to-player my-player-number "build emergency mill")
)
#end-if
(defrule
	(strategic-number sn-minimum-civilian-explorers > 0)
	(or
		(and
			(or
				(unit-type-count sheep > 1)
				(resource-found food)
			)
			(strategic-number sn-mill-max-distance < 30)
		)
		(timer-triggered civ-explore-timer)
	)
=>
	(disable-timer civ-explore-timer)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-percent-civilian-builders 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(building-type-count town-center >= 1); this idea from ER rarely fails
	(game-time >= 15); increase lumber camp distance when we still found no wood after 15s
	(or ; so the scout has some time to find a forest
		(not (resource-found wood))
		(building-type-count-total stone-wall > 15); also increase in walled maps, as we may find the forest with the wall
	)
	(strategic-number sn-mill-max-distance < 30)
=>
	(set-strategic-number sn-camp-max-distance 18)
	(disable-self)
)
(defrule
	(building-type-count town-center >= 1)
	(game-time >= 18); and even further when still no wood after 18s
	(not (resource-found wood))
	(strategic-number sn-mill-max-distance < 30)
=>
	(set-strategic-number sn-camp-max-distance 21)
	(disable-self)
)
(defrule
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total stone-wall < 15)
	(or
		(dropsite-min-distance gold > 12)
		(building-type-count-total mining-camp > 0)
	)
=>
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-camp-max-distance second-camp-distance)
	(set-strategic-number sn-wood-dropsite-distance 7); move wood gatherers from far stragglers to the camp
	(disable-self)
)
(defrule
	(building-type-count-total lumber-camp > 1)
	(building-type-count-total mining-camp == 0)
	(dropsite-min-distance gold > 3)
	(dropsite-min-distance gold < 12); close gold like in gold rush maps
=>
	(set-strategic-number sn-camp-max-distance 12); so only a small camp max distance is required, else the gold will be skipped.
	(set-strategic-number sn-wood-dropsite-distance 4)
	(disable-self)
)
(defrule
	(current-age == dark-age); don't trigger this later when initial gold is gone.
	(building-type-count town-center >= 1); mainly a fix for nomad map where gold may be farther away
	(building-type-count-total lumber-camp > 0); as the computer doesn't care about resources when placing the initial TC.
	(unit-type-count villager >= 24)
	(dropsite-min-distance gold > 24)
	(dropsite-min-distance gold < 64)
=>
	(set-strategic-number sn-camp-max-distance 60)
	(disable-self)
)
(defrule
	(game-time > lumber-delay)
	(resource-found wood)
	(or
		(and
			(building-type-count-total mill > 1)
			(map-type scandanavia)
		)
		(or
			(building-type-count-total mill > 0)
			(and
				(wood-amount > 200)
				(strategic-number sn-mill-max-distance > 30)
			)
		)
	)
	(building-type-count-total lumber-camp == 0)
	(can-build lumber-camp)
=>
	(build lumber-camp)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
)
#end-if ; no DM
(defrule ;build additional lumber camps
	(resource-found wood)
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(unit-type-count villager >= villager-lumber-camp)
	(or
		(building-type-count-total lumber-camp < 2)
		(unit-type-count villager >= 45)
	)
	(or
		(building-type-count-total lumber-camp < 3)
		(unit-type-count villager >= 60)
	)
	(building-type-count-total lumber-camp < 5)
	(can-build lumber-camp)
=>
	(build lumber-camp)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-maximum-wood-drop-distance 30)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
)
(defrule ;build additional lumber camps
	(resource-found wood)
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(unit-type-count villager >= villager-lumber-camp)
	(or
		(strategic-number sn-minimum-boar-hunt-group-size == 5)
		(building-type-count-total dock > 0)
	)
	(or
		(building-type-count-total lumber-camp < 2)
		(unit-type-count villager >= 45)
	)
	(building-type-count-total lumber-camp < 3)
	(can-build lumber-camp)
=>
	(build lumber-camp)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-maximum-wood-drop-distance 30)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
)
; Lumber Camp Replacement when either fast when 1st lumber-camp placed really bad or in feudal-age when flushing or after castle-age is available
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(or
		(goal increase-town-size-goal 0)
		(current-age <= feudal-age)
	)
	(building-type-count town-center > 0)
	(or
		(and
			(building-type-count lumber-camp > 0)
			(dropsite-min-distance wood > 3)
		)
		(and
			(unit-type-count-total villager >= villager-feudal-min)
			(building-type-count-total lumber-camp == 0); debug for no placement
		)
	)
	(strategic-number sn-camp-max-distance < 35)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-camp-max-distance 35)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(chat-to-player my-player-number "bad lumber camp placement!: camp-max-distance 35")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or 
		(not (goal strategy-goal flush))
		(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	)
	(resource-found gold)
	(or
		(unit-type-count villager >= villager-gold)
		(strategic-number sn-current-age >= df-transit)
	)
	(can-build mining-camp)
	(building-type-count-total mining-camp == 0)
=>
	(build mining-camp)
)
#end-if ; NOT PIDM
(defrule
	(resource-found wood)
	(dropsite-min-distance wood > 3)
	(dropsite-min-distance wood < 255)
	(unit-type-count villager >= 20)
	(building-type-count town-center > 0)
	(building-type-count-total lumber-camp < 20)
	(timer-triggered lumber-timer)
	(can-build lumber-camp)
=>
	(enable-timer lumber-timer 180)
	(build lumber-camp)
)
(defrule
	(resource-found gold)
	(goal strategy-goal flush)
	(or
		(and
			(or
				(building-type-count-total stable > 0)
				(building-type-count-total archery-range > 1)
			)
			(wood-amount > 135)
		)
		(and
			(goal unit-goal militiaman-line)
			(building-type-count-total barracks > 0)
		)	
	)
	(can-build mining-camp)
	(building-type-count-total mining-camp == 0)
=>
	(build mining-camp)
)
(defrule
	(resource-found gold)
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total market > 0)
	(can-build mining-camp)
	(building-type-count-total mining-camp == 0)
=>
	(build mining-camp)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(resource-found gold)
	(dropsite-min-distance gold > 5);rebuild  bad camps
	(dropsite-min-distance gold < 255)
	(building-type-count mining-camp > 0)
	(commodity-selling-price stone < 105); no saracens or already some stone sold
	(can-build mining-camp)
	(or
		(building-type-count mining-camp < 6)
		(strategic-number sn-camp-max-distance > 45)
	)
	(building-type-count-total mining-camp < 15)
=>
	(build mining-camp)
)
(defrule
	(resource-found stone)
	(dropsite-min-distance stone > 5)
	(dropsite-min-distance stone < 255)
	(building-type-count mining-camp > 1)
	(or
		(building-type-count mining-camp < 6)
		(strategic-number sn-camp-max-distance > 45)
	)
	(can-build mining-camp)
	(building-type-count-total mining-camp < 15)
	(unit-type-count villager > 50)
=>
	(build mining-camp)
)
(defrule
	(wood-amount > 200)
	(dropsite-min-distance gold > 1); build subsequent mining camps to avoid crowd
	(dropsite-min-distance gold < 255); check for gold still on the map
	(civilian-population > 70)
	(game-time < 2700)
	(can-build mining-camp)
	(building-type-count-total mining-camp < 5)
=>
	(set-strategic-number sn-gold-dropsite-distance 5)
	(set-strategic-number sn-stone-dropsite-distance 5)
	(set-strategic-number sn-camp-max-distance 35)
	(build mining-camp)
)
#end-if
(defrule
	(resource-found gold)
	(or
		(or
			(unit-type-count-total 229 >= 1); dead miners detected
			(unit-type-count-total 221 >= 1)
		)
		(strategic-number sn-gold-gatherer-percentage > 30)
	)
	(unit-type-count-total villager > 37)
	(can-build mining-camp)
	(building-type-count-total mining-camp < 3)
=>
	(build mining-camp)
	(set-strategic-number sn-maximum-stone-drop-distance 40)
	(set-strategic-number sn-stone-dropsite-distance 40)
	(set-strategic-number sn-maximum-gold-drop-distance 3)
	(set-strategic-number sn-gold-dropsite-distance 3)
)
#load-if-defined WONDER-RACE
(defrule
	(or
		(building-type-count-total blacksmith > 0)
		(strategic-number sn-current-age >= castle)
	)
	(or
		(dropsite-min-distance gold > 2)
		(dropsite-min-distance stone > 2)
	)
	(building-type-count-total mining-camp < 2)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#else
(defrule
	(strategic-number sn-resource-control != battering-ram)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(or
		(or
			(research-completed ri-bow-saw)
			(building-type-count-total town-center >= tc-level-three)
		)
		(or
			(strategic-number sn-stone-gatherer-percentage > 0)
			(wood-amount > 210)
		)
	)
	(stone-amount < 100)
	(current-age-time > 180)
	(building-type-count-total mining-camp < 4)
	(dropsite-min-distance stone > 4)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(building-type-count-total market > 0)
	(building-type-count-total blacksmith > 0)
	(commodity-selling-price stone > 100)
	(building-type-count-total mining-camp < 4)
	(or
		(and
			(building-type-count-total mining-camp < 2)
			(dropsite-min-distance stone > 5)
		)
		(and
			(current-age == castle-age)
			(building-type-count stable > 1)
		)
	)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#end-if
#load-if-defined UP-MICHI-STYLE
(defrule
	(building-type-count-total blacksmith > 0)
	(building-type-count-total mining-camp == 1)
	(dropsite-min-distance stone > 3)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#end-if
(defrule
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total mining-camp == 1)
	(dropsite-min-distance stone > 3)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(or
		(and
			(game-time > 2400); 40min
			(cc-players-unit-type-count 0 tree < heavy-wood); don't build on the enemy side in very woody maps
		)
		(dropsite-min-distance wood > 15)
	)
	(strategic-number sn-camp-max-distance < 45)
=>
	(set-strategic-number sn-minimum-dropsite-buffer 50)
	(set-strategic-number sn-camp-max-distance 45)
	(set-strategic-number sn-percent-building-cancellation 75)
)
#load-if-not-defined BLACK-FOREST-MAP ;dont lose villagers by trying to build on enemy's side
(defrule
	(game-time > 3000); 50min
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(or
		(goal ffa-game-goal -1)
		(game-time > 5400); 90 min
	)
	(goal increase-town-size-goal 0)
	(strategic-number sn-camp-max-distance < 90)
=>
	(set-strategic-number sn-camp-max-distance 90))
#end-if
#end-if
(defrule
	(cc-players-unit-type-count 0 tree < heavy-wood)
	(or
		(game-time > 3600); 60min
		(death-match-game)
	)
	(or
		(goal ffa-game-goal -1)
		(game-time > 5400); 90 min
	)
	(game-time > 600)
	(goal increase-town-size-goal 0)
=>
	(set-strategic-number sn-camp-max-distance 254)(disable-self))
(defrule
	(or
		(or
			(unit-type-count-total 219 >= 1)
			(unit-type-count-total 228 >= 1)
		)
		(civilian-population >= 100)
	)
	(can-build lumber-camp)
	(dropsite-min-distance wood > 0)
	(dropsite-min-distance wood < 255)
	(timer-triggered lumber-timer)
=>
	(build lumber-camp)
	(enable-timer lumber-timer 300)
	(set-strategic-number sn-dropsite-separation-distance 10)
)
#load-if-not-defined DEATH-MATCH
#load-if-not-defined DIFFICULTY-HARDEST
(defrule
	(strategic-number sn-current-age == dark)
	(or
		(unit-type-count villager < villager-lumber-camp)
		(or
			(building-type-count-total lumber-camp > 1)
			(and
				(building-type-count-total dock > 0)
				(strategic-number sn-minimum-boar-hunt-group-size == 5)
			)
		)
	)
	(or
		(unit-type-count villager < 30)
		(wood-amount > 130)
	)
	(building-type-count-total lumber-camp > 0)
=>
	(set-goal farm-goal 1)
)
(defrule
	(strategic-number sn-current-age == df-transit)
	(or
		(wood-amount >= 385);175stable+150bs+60farm
		(and
			(goal strategy-goal rush)
			(building-type-count-total farm < fast-castle-min-farm)
		)
	)
	(idle-farm-count < 1)
	(building-type-count-total lumber-camp > 0)
=>
	(set-goal farm-goal 1)
)
#end-if ; NOT HARDEST
#end-if ; NOT DM
#load-if-not-defined WONDER-RACE
(defrule
	(goal strategy-goal sling)
	(strategic-number sn-current-age >= feudal)
	(not (research-available ri-horse-collar))
	(idle-farm-count < 2)
=>
	(set-goal farm-goal 1)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-current-age == feudal)
	(or
		(or
			(and
				(building-type-count-total archery-range > 1)
				(building-type-count-total blacksmith > 0)
			)
;			(research-completed ri-man-at-arms)
			(goal unit-goal militiaman-line)
		)
		(building-type-count-total stable > 0)
	)
	(building-type-count-total archery-range > 0)
	(idle-farm-count < 2)
=>
	(set-goal farm-goal 1)
)
#load-if-defined UP-AVAILABLE
(defrule
	(or
		(goal strategy-goal flush)
		(food-amount < 400)
	)
	(strategic-number sn-current-age == feudal)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(idle-farm-count < 1)
	(wood-amount > 150)
=>
	(set-goal strategy-goal flush)
	(set-goal farm-goal 1)
)
#end-if
(defrule
	(strategic-number sn-current-age == fc-transit)
	(not (research-available ri-horse-collar))
	(or
		(or
			(building-type-count-total archery-range > 2)
			(building-type-count-total stable > 1)
		)
		(and
			(goal unit-goal eagle-warrior)
			(building-type-count-total barracks > 0)
		)
	)
	(idle-farm-count < 2)
=>
	(set-goal farm-goal 1)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(research-completed ri-horse-collar)
	(building-type-count-total farm < farm-count)
	(nor
		(or
			(goal unit-goal my-unique-unit-line); delay farms until castle age to have more workers for the castle with uu startegy
			(goal control-goal shot); get food from ally
		)
		(or
			(goal unit-goal knight); use rule above
			(goal unit-goal default-ranged)
		)
	)
	(idle-farm-count < 2)
=>
	(set-goal farm-goal 1)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(or
		(and
			(goal strategy-goal rush)
			(building-type-count-total blacksmith > 0)
		)
		(game-time > 1200)
	)
	(not (goal unit-goal my-unique-unit-line))
	(idle-farm-count < 2)
=>
	(set-goal farm-goal 1)
)
#load-if-not-defined SARACEN-CIV ;buy food with them instead of farming
(defrule
	(strategic-number sn-current-age == fc-transit)
	(building-type-count-total blacksmith > 0)
	(or
		(or 
			(goal unit-goal mix)
			(goal unit-goal ss)
		)
		(and
			(goal strategy-goal boom)
			(research-completed ri-horse-collar)
		)
	)
	(building-type-count-total farm < 14)
=>
	(set-goal farm-goal 1)
)
(defrule
	(building-type-count town-center >= 1)
	(strategic-number sn-current-age >= castle)
	(or
		(idle-farm-count < 2)
		(or
			(building-type-count-total town-center >= tc-level-three)
			(and
				(building-type-count-total town-center >= tc-level-two)
				(or
					(wood-amount > 335); 275 for 3rd TC + 60
					(goal strategy-goal boom); build as many farms as possible after 2nd TC
				)
			)
		)
	)
=>
	(set-goal farm-goal 1)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(or
		(and
			(or
				(building-type-count-total blacksmith > 0)
				(difficulty == hardest)
			)
			(building-type-count-total farm < 9); maintain minimum farm count
		)
		(and
			(and
				(current-age == dark-age)
				(goal need-extra-farms-goal 2)
			)
			(building-type-count-total farm < 16)
		)
	)
	(current-age-time > 60)
=>
	(set-goal farm-goal 1)
)
#end-if
#load-if-not-defined POPULATION-CAP-25
(defrule
	(goal strategy-goal fast-imp)
	(goal farm-goal 1)
	(strategic-number sn-current-age == castle)
	(or
		(building-type-count-total monastery == 0)
		(building-type-count-total siege-workshop == 0)
	)
=>
	(set-goal farm-goal 0)
)
#end-if
#else
(defrule
	(building-type-count town-center >= 1)
	(strategic-number sn-current-age >= castle)
	(or
		(idle-farm-count < 2)
		(building-type-count-total town-center >= tc-level-three)
	)
	(or
		(or
			(commodity-buying-price food > 130)
			(commodity-selling-price stone < 100)
		)
		(or
			(or
				(goal strategy-goal boom)
				(building-type-count farm < 8)
			)
			(game-time > 1800)
		)
	)
=>
	(set-goal farm-goal 1)
)
#end-if ;SARACEN-CIV
(defrule
	(or
		(unit-type-count female-forager > 0)
		(unit-type-count male-forager > 0)
	)
	(building-type-count mill == 1)
	(sheep-and-forage-too-far); save for 2nd mill on maps with more berries, eg. yucatan
	(wood-amount < 100)
=>
	(set-goal farm-goal 0)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(goal unit-goal scout-cavalry)
	(building-type-count-total mining-camp == 0)
	(players-unit-type-count any-enemy spearman-line > 1)
	(building-type-count-total farm > 9)
=>
	(set-goal farm-goal 0); get gold camp for archers
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal farm-goal 1)
	(current-age == dark-age)
	(or
		(building-type-count-total farm > 15)
		(and	
			(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
			(or
				(strategic-number sn-current-age == df-transit)
				(and
					(wood-amount < 210); place farms only if still enough wood left for dock
					(unit-type-count-total villager < 26)
				)
			)
		)
	)
=>
	(set-goal farm-goal 0)
)
#else
(defrule
	(goal farm-goal 1)
	(current-age == dark-age)
	(or
		(building-type-count-total farm > 15)
		(and
			(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
			(or
				(wood-amount < 210); place farms only if still enough wood left for dock
				(and
					(building-type-count-total dock > 0)
					(wood-amount < 135)
				)
			)
		)
	)
=>
	(set-goal farm-goal 0)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(and
			(strategic-number sn-current-age == df-transit)
			(or
				(unit-type-count male-hunter > 0)
				(unit-type-count female-hunter > 0)
			)
		)
		(or
			(and
				(current-age == feudal-age)
				(not (goal strategy-goal flush))
			)
			(and
				(current-age >= castle-age)
				(idle-farm-count > 2)
			)
		)
	)
=>
	(set-goal farm-goal 0)
)
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(building-type-count town-center > 0)
	(current-age >= castle-age)
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(building-type-count monastery > 2); get fast imp with mush
		(or
			(goal strategy-goal fast-imp)
			(goal control-goal shot)
		)
	)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(game-time < 480)
	(or
		(death-match-game)
		(game-time < 300)
	)
=>
	(set-goal farm-goal 0)
)
#end-if
#load-if-not-defined DEATH-MATCH
(defrule
	(building-type-count town-center > 0)
	(current-age >= castle-age)
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal unit-goal archer)
	(or
		(and
			(goal control-goal aggressive-rush)
			(civ-selected mayan)
		)
		(and
			(players-building-type-count any-enemy watch-tower > 0)
			(goal strategy-goal rush)
		)
	)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal save-wood-goal 0)
	(not (goal strategy-goal boom))
	(building-type-count-total town-center >= tc-level-four)
	(goal ranged-unit-type-goal 0)
	(goal unit-goal knight)
	(building-type-count-total siege-workshop < 2)
	(wood-amount >= 300)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(wood-amount > 450)
	(gold-amount > 200)
	(players-building-type-count any-enemy watch-tower > 4)
	(strategic-number sn-resource-control == battering-ram)
	(building-type-count-total siege-workshop < 2)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(wood-amount > 500)
	)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(building-type-count-total town-center >= tc-level-four)
	(or
		(building-type-count-total town-center >= tc-level-five)
		(not (goal strategy-goal boom))
	)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#load-if-not-defined UP-POCKET-POSITION
#load-if-not-defined GOTHIC-CIV
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-archer-threat > 0)
	(strategic-number sn-military-level < 0)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#else
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(goal unit-goal scorpion)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total siege-workshop < 1)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
#load-if-defined CELTIC-CIV
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(current-age >= castle-age)
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-two)
	(goal save-wood-goal 0)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(and
			(or
				(goal unit-goal knight)
				(building-type-count-total town-center >= tc-level-three)
			)
			(building-type-count-total siege-workshop == 0)
		)
	)
	(building-type-count-total siege-workshop < 3)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-five)
	(building-type-count-total siege-workshop < 3)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
#load-if-defined SLAVIC-CIV
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal save-wood-goal 0)
	(current-age >= castle-age)
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-two)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(building-type-count-total siege-workshop == 0)
	)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(building-type-count-total siege-workshop == 1)
	)
	(building-type-count-total siege-workshop < 3)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-five)
	(building-type-count-total siege-workshop < 3)
	(wood-amount >= 200)
=>
	(set-goal increase-town-size-goal siege-workshop)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
(defrule
	(goal increase-town-size-goal siege-workshop)
	(building-type-count-total siege-workshop > 0)
	(or
		(building-type-count siege-workshop < 1)
		(building-type-count-total siege-workshop > 1)
	)
	(or
		(building-type-count siege-workshop < 2)
		(building-type-count-total siege-workshop > 2)
	)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal siege-workshop)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(strategic-number sn-military-level > 0)
		(goal control-goal aggressive-rush)
	)
	(players-building-type-count any-enemy stone-wall > 15)
	(building-type-count-total siege-workshop == 0)
	(can-build siege-workshop)
=>
	(build-forward siege-workshop)
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal siege-workshop)
	(can-build siege-workshop)
=>
	(build siege-workshop)
	(set-goal increase-town-size-goal 2)
)
(defrule
	(building-type-count-total town-center == 1)
	(or
		(goal strategy-goal flush)
		(building-type-count farm > 18)
	)
	(building-type-count farm > 15)
	(building-type-count-total mill < 2)
	(can-build mill)
=>
	(set-strategic-number sn-mill-max-distance 20)
	(set-strategic-number sn-dropsite-separation-distance 10)
	(build mill)
)
(defrule
	(building-type-count farm > 24)
	(or
		(building-type-count farm > sub-mill-farm)
		(building-type-count-total town-center == 1)
	)
	(building-type-count-total mill < 3)
	(can-build mill)
=>
	(set-strategic-number sn-mill-max-distance 23)
	(set-strategic-number sn-dropsite-separation-distance 10)
	(build mill)
)
(defrule
	(building-type-count farm > sub-mill-farm2)
	(or
		(building-type-count-total mill < 4)
		(building-type-count farm > 45)
	)
	(building-type-count-total mill < 5)
	(can-build mill)
=>
	(set-strategic-number sn-mill-max-distance 27)
	(set-strategic-number sn-dropsite-separation-distance 10)
	(build mill)
)
#load-if-not-defined POPULATION-CAP-25
(defrule
	(goal save-wood-goal 0)
	(goal enemy-boats-goal 1)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total dock < 5)
	(or
		(stone-amount < 200)
		(building-type-count-total dock < 1)
	)
	(or
		(building-type-count-total dock < 2)
		(civilian-population > 60)
	)
	(or
		(building-type-count-total dock < 4)
		(civilian-population > 80)
	)
	(can-build dock)
=>
	(build dock)
)
(defrule
	(goal save-wood-goal 0)
	(strategic-number sn-current-age == dark)
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(building-type-count-total lumber-camp > 0); fish boom instead of farming is better with UP
	(or
		(building-type-count-total mill > 0)
		(goal dark-build-order-goal 1)
	)
	(building-type-count-total dock < 2)
	(or
		(building-type-count-total dock < 1)
		(and
			(unit-type-count-total villager > 28); high villager => low food
			(food-amount < 400); probably stupid stuff happened like fishing ship going to the exact opposite side to fish (rarely)
		)
	)
	(can-build dock)
=>
	(build dock)
)
(defrule
	(strategic-number sn-current-age >= df-transit)
	(or
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		(or
			(players-unit-type-count any-enemy galley-line > 0)
			(players-unit-type-count any-enemy fire-ship-line > 0)
		)
	)
	(goal save-wood-goal 0)
	(building-type-count-total dock < 2)
	(or
		(goal strategy-goal flush)
		(building-type-count-total blacksmith > 0)
	)
	(can-build dock)
=>
	(build dock)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(building-type-count-total blacksmith > 0)
		(starting-age == post-imperial-age)
	)
	(building-type-count-total dock < 8)
	(or
		(building-type-count-total dock < 3)
		(building-type-count-total town-center >= tc-level-two)
	)
	(or
		(building-type-count-total dock < 4)
		(or
			(civilian-population > 80)
			(death-match-game)
		)
	)
	(can-build dock)
=>
	(build dock)
)
(defrule
	(current-age-time < 300)
	(current-age == castle-age)
	(building-type-count monastery == 1)
	(strategic-number sn-resource-control <= 2)
	(unit-type-count-total monk == 0)
	(unit-type-count-total 134 == 0); dead monk
	(unit-type-count-total 286 == 0); monk with relic
	(building-type-count-total market == 0)
	(nand (goal control-goal aggressive-rush)
	(goal unit-goal knight)); not when rushing
	(cc-players-unit-type-count 0 relic > 0)
	(gold-amount < 100)
=>
	(set-strategic-number sn-resource-control monk)
	(chat-to-player my-player-number "save-resources = monk")
)
(defrule
	(current-age-time < 300)
	(building-type-count monastery == 1)
	(strategic-number sn-resource-control <= 2)
	(unit-type-count-total monk == 0)
	(unit-type-count-total 134 == 0); dead monk
	(goal control-goal aggressive-rush)
	(goal unit-goal knight)
	(or
		(strategic-number sn-cavalry-threat > 0); still get a monk if enemy is krushing, as they're good vs cavalry
		(goal enemy-goal ss); enemy spam trash so it's not likely we're going to attack quick
	)
	(not (player-in-game any-ally))
	(cc-players-unit-type-count 0 relic > 0)
	(gold-amount < 100)
=>
	(set-strategic-number sn-resource-control monk)
	(chat-to-player my-player-number "save-resources = monk")
)
(defrule
	(strategic-number sn-resource-control == monk)
	(or
		(and
			(unit-type-count female-gold-miner == 0)
			(unit-type-count male-gold-miner == 0)
		)
		(and
			(or
				(town-under-attack)
				(strategic-number sn-military-level < 0)
			)
			(strategic-number sn-military-level < 1)
		)
	)
=>
	(set-strategic-number sn-resource-control 0)
)
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(gold-amount > 250)
	)
	(current-age == castle-age)
	(current-age-time < 480)
	(unit-type-count-total monk < 3)
	(unit-type-count-total 134 == 0); 134 = dead monk; dont make monks when they're dying while trying to collect relics behind enemy bases.
	(can-train monk)
=>
	(train monk)
)
#end-if
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(strategic-number sn-resource-control == monk)
	)
	(unit-type-count-total monk == 0)
	(unit-type-count-total 134 == 0); 134 = dead monk; dont make monks when they're dying while trying to collect relics behind enemy bases.
	(can-train monk)
=>
	(train monk)
)

; ********** RESEARCH **********

(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(goal train-civ-goal ri-chain-barding)
	)
	(or
		(unit-type-count cavalry-units > mid-min-number-upgrade)
		(and
			(or
				(civ-selected saracen)
				(or
					(goal control-goal shot)
					(difficulty == hardest)
				)
			)
			(goal unit-goal knight)
		)
	)
	(can-research-with-escrow ri-chain-barding)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-chain-barding)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(can-research ri-bow-saw)
	(goal train-civ-goal 1)
	(or
		(goal position-goal pocket)
		(or
			(current-age-time > 120)
			(goal unit-goal my-unique-unit-line)
		)
	)
	(not (goal strategy-goal fast-imp))
	(or
		(building-type-count-total monastery > 0)
		(xnor
			(civ-selected aztec)
			(goal unit-goal eagle-warrior)
		)
	)
=>
	(research ri-bow-saw)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(can-research ri-bow-saw)
	(goal train-civ-goal 1)
	(or
		(and
			(goal strategy-goal fast-imp)
			(or
				(strategic-number sn-current-age >= ci-transit)
				(unit-type-count villager > 45)
			)
		)
		(goal strategy-goal boom)
	)
=>
	(research ri-bow-saw)
)
(defrule
	(nand
		(goal strategy-goal fast-imp)
		(strategic-number sn-current-age < ci-transit)
	)
	(strategic-number sn-resource-control <= 2)
	(goal train-civ-goal 1)
	(or
		(or
			(goal position-goal pocket)
			(strategic-number sn-minimum-boar-hunt-group-size == 5)
		)
		(or
			(current-age-time > 120)
			(goal unit-goal my-unique-unit-line)
		)
	)
	(nand
		(goal unit-goal default-ranged)
		(research-available ri-bodkin-arrow)
	)
=>
	(research ri-heavy-plow)
)
(defrule
	(nand
		(research-available ri-war-galley)
		(civ-selected viking)
	)
	(warboat-count > 12)
	(goal enemy-boats-goal 1)
	(or
		(strategic-number sn-resource-control < 2)
		(players-unit-type-count any-enemy galley-line > 0)
	)
	(can-research ri-careening)
=>
	(research ri-careening)
)
(defrule
	(or
		(research-completed ri-bow-saw)
		(civ-selected viking)
	)
	(can-research ri-war-galley)
=>
	(research ri-war-galley)
)
(defrule
	(can-research-with-escrow ri-fast-fire-ship)
=>
	(release-escrow wood)(release-escrow gold)
	(set-escrow-percentage wood 0)(set-escrow-percentage gold 0)
	(research ri-fast-fire-ship)
)
(defrule
	(can-research-with-escrow ri-galleon)
=>
	(release-escrow wood)(release-escrow food)
	(set-escrow-percentage wood 0)(set-escrow-percentage food 0)
	(research ri-galleon)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(research-available ri-galleon)
	(building-type-count dock > 0)
=>
	(set-escrow-percentage wood 20)(set-escrow-percentage food 20)
	(set-goal escrow-purpose-goal navy)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(research-available ri-fast-fire-ship)
	(building-type-count dock > 0)
=>
	(set-escrow-percentage wood 20)(set-escrow-percentage gold 20)
	(set-goal escrow-purpose-goal navy)
)
(defrule
	(goal escrow-purpose-goal navy)
	(or
		(nor
			(research-available ri-fast-fire-ship)
			(research-available ri-galleon)
		)
		(building-type-count dock == 0)
	)
=>
	(set-goal escrow-purpose-goal 0)
	(release-escrow wood)(release-escrow food)(release-escrow gold)
	(set-escrow-percentage wood 0)(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
)
(defrule
	(nor 
		(research-available ri-galleon)
		(research-available ri-fast-fire-ship)
	)
	(can-research-with-escrow ri-cannon-galleon)
=>
	(release-escrow food)(release-escrow wood)
	(research ri-cannon-galleon)
)
(defrule
	(nor 
		(research-available ri-galleon)
		(research-available ri-fast-fire-ship)
	)
	(or
		(can-research-with-escrow ri-shipwright)
		(or
			(can-research-with-escrow ri-dry-dock)
			(can-research-with-escrow ri-deck-guns)
		)
	)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-shipwright)
	(research ri-dry-dock)
	(research ri-deck-guns)
)
(defrule
	(strategic-number sn-resource-control <= 1)
	(building-type-count-total town-center > 0)
	(or
		(goal strategy-goal sling)
		(or 
			(strategic-number sn-current-age >= fc-transit)
			(goal strategy-goal flush)
		)
	)
	(nand
		(goal unit-goal my-unique-unit-line)
		(research-available ri-stone-mining)
	)
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)
#load-if-not-defined SARACEN-CIV
(defrule
	(strategic-number sn-resource-control <= 1)
	(building-type-count-total town-center > 0)
	(strategic-number sn-current-age >= fc-transit)
	(nand
		(goal unit-goal my-unique-unit-line)
		(research-available ri-stone-mining)
	)
	(or
		(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
		(research-completed ri-bow-saw)
	)
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)
#else
(defrule
	(strategic-number sn-resource-control <= 1)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(or
			(commodity-selling-price stone < 100)
			(commodity-buying-price food > 130)
		)
		(or
			(dropsite-min-distance stone > 5)
			(or
				(strategic-number sn-stone-gatherer-percentage == 0)
				(goal strategy-goal boom)
			)
		)
	)
	(or
		(building-type-count-total barracks > 0)
		(goal unit-goal my-unique-unit-line)
	)
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)
#end-if
(defrule
	(strategic-number sn-resource-control <= 1)
	(building-type-count-total town-center > 0)
	(or
		(and
			(goal strategy-goal flush)
			(or
				(not (research-available ri-man-at-arms))
				(or
					(building-type-count-total archery-range > 1)
					(building-type-count-total stable > 0)
				)
			)
		)
		(goal strategy-goal sling)
	)
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(civilian-population >= 42)
	(or
		(and
			(goal strategy-goal flush)
			(or
				(and
					(food-amount > 600)
					(gold-amount < 75)
				)
				(goal unit-goal archer)
			)
		)
		(goal strategy-goal sling)
	)
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(strategic-number sn-gold-gatherer-percentage >= 20)
			(or
				(goal unit-goal knight)
				(goal unit-goal monk)
			)
		)
		(civilian-population >= 50)
	)
	(strategic-number sn-current-age >= fc-transit)
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(or
			(or
				(unit-type-count cavalry-units > low-min-number-upgrade)
				(unit-type-count cavalry-archer-units > low-min-number-upgrade)
			)
			(strategic-number sn-current-age >= ci-transit)
		)
		(or
			(goal unit-goal knight)
			(goal unit-goal cavalry-archer)
		)
	)
	(can-research ri-bloodlines)
=>
	(research ri-bloodlines)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count scout-cavalry > mid-min-number-upgrade);scouts do not count as cavalry-units(!)
		(unit-type-count conquistador-line > mid-min-number-upgrade)
	)
	(can-research ri-bloodlines)
=>
	(research ri-bloodlines)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(research-completed ri-gold-mining)
	(research-completed ri-wheel-barrow)
	(research-completed ri-scale-mail)
	(goal unit-goal eagle-warrior)
	(goal strategy-goal rush)
	(strategic-number sn-current-age >= fc-transit)
	(can-research ri-forging)
=>
	(research ri-forging)
)
#end-if
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count infantry-units > low-min-number-upgrade)
		(research-completed ri-scale-barding)
	)
	(unit-type-count cavalry-units > 5)
	(strategic-number sn-current-age >= fc-transit)
	(can-research ri-forging)
=>
	(research ri-forging)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(not (goal train-civ-goal ri-chain-mail))
	(or 
		(unit-type-count cavalry-units > low-min-number-upgrade)
		(research-completed ri-scale-mail)
	)
	(unit-type-count infantry-units > 5)
	(nand
		(goal strategy-goal boom)
		(goal hostilities-goal 0)
	)
	(strategic-number sn-current-age >= fc-transit)
	(can-research ri-forging)
=>
	(research ri-forging)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count infantry-units > mid-min-number-upgrade)
		(and
			(goal unit-goal eagle-warrior)
			(building-type-count-total barracks > 0); don't research too early on islands
		)
	)
	(or
		(and
			(strategic-number sn-current-age >= fc-transit)
			(research-completed ri-gold-mining)
		)
		(or
			(goal hostilities-goal 1)
			(death-match-game)
		)
	)
	(can-research ri-scale-mail)
=>
	(research ri-scale-mail)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(unit-type-count cavalry-units > low-min-number-upgrade)
			(unit-type-count scout-cavalry > mid-min-number-upgrade)
		)
		(and
			(building-type-count-total stable > 1)
			(food-amount > 300)
		)
	)
	(strategic-number sn-current-age >= fc-transit)
	(can-research ri-scale-barding)
=>
	(research ri-scale-barding)
)
(defrule
	(or
		(and
			(strategic-number sn-resource-control <= 2)
			(or
				(or 
					(and
						(building-type-count-total siege-workshop > 0)
						(nand
							(goal enemy-goal eagle-warrior)
							(strategic-number sn-archer-threat == 0)
						)
					)
					(strategic-number sn-archer-threat >= 1)
				)
				(unit-type-count-total skirmisher-line > mid-min-number-upgrade)
			)
		)
		(strategic-number sn-resource-control == ri-elite-skirmisher)
	)
	(can-research ri-elite-skirmisher)
=>
	(research ri-elite-skirmisher)
)
(defrule
	(or
		(or
			(unit-type-count eagle-warrior-line > 11)
			(and
				(not (civ-selected aztec))
				(current-age-time >= 300)
			)
		)
		(goal unit-goal eagle-warrior)
	)
	(can-research-with-escrow ri-elite-eagle)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(research ri-elite-eagle)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count monk > 4)
=>
	(research ri-sanctity)
	(research ri-theocracy)
	(research ri-illumination)
	(research ri-block-printing)
)
#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count monk > 4)
	(can-research ri-fervor); bugged, movement speed bonus only counts for monks with relics
=>
	(research ri-fervor)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(building-type-count-total monastery > 2)
	(unit-type-count monk > 19)
	(current-age == imperial-age)
	(population >= max-pop)
	(can-research ri-herbal-medicine)
=>
	(research ri-herbal-medicine)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count monk > 19)
	(research-completed ri-block-printing)
	(can-research ri-redemption)
=>
	(research ri-redemption)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal ranged-unit-type-goal monk); redemption will lure monks into death so avoid it unless enemy tries to counter monks with siege
	(or
		(players-unit-type-count any-enemy scorpion-line > 2)
		(or
			(players-unit-type-count any-enemy bombard-cannon > 0)
			(players-unit-type-count any-enemy mangonel-line > 0)
		)
	)
	(can-research ri-redemption)
=>
	(research ri-redemption)
)
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(strategic-number sn-resource-control == ri-heresy)
	)
	(unit-type-count monk > 5)
	(or
		(and
			(unit-type-count monk > 12)
			(strategic-number sn-current-age >= ci-transit)
		)
		(players-unit-type-count any-enemy monk > 3)
	)
	(can-research ri-atonement)
=>
	(research ri-atonement)
)
#load-if-defined CELTIC-CIV; _Celts
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(can-research ri-heavy-scorpion)
		(can-research my-unique-research)
	)
	(unit-type-count scorpion-line > low-min-number-upgrade)
=>
	(research ri-heavy-scorpion)
	(research my-unique-research); 1 of 2
)
#else
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count scorpion-line > low-min-number-upgrade)
	(can-research ri-heavy-scorpion)
=>
	(research ri-heavy-scorpion)
)
#end-if
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow my-unique-unit-upgrade); Celts
=>
	(release-escrow wood)(release-escrow food)(release-escrow gold)
	(research my-unique-unit-upgrade); x_Celts (1 of 2)
	(set-goal uu-up-goal 0)
)
(defrule
	(current-age-time > 300)
	(game-time > 1800); not in DM
	(gold-amount > 2000)
	(or (or (civ-selected saracen)(civ-selected turkish))(civ-selected japanese))
	(can-research-with-escrow my-unique-unit-upgrade); Celts
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-unit-upgrade); x_Celts (2 of 2)
	(set-goal uu-up-goal 0)
)
(defrule
	(population >= del-civ-pop)
	(current-age-time > 300)
	(gold-amount > 2000)
	(or (or (civ-selected saracen)(civ-selected turkish))(civ-selected byzantine))
	(can-research-with-escrow my-unique-research)
=>
	(release-escrow food)(release-escrow gold)
	(research my-unique-research); 2 of 2
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-long-swordsman)
	)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(or
		(goal strategy-goal flush)
		(strategic-number sn-current-age >= fc-transit)
	)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-long-swordsman)
	)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(can-research ri-champion)
=>
	(research ri-champion)
)
(defrule
	(or
		(and
			(strategic-number sn-resource-control <= 2)
			(or
				(goal strategy-goal flush)
				(current-age-time > 240)
			)
		)
		(strategic-number sn-resource-control == ri-crossbow)
	)
	(or
		(goal ranged-unit-type-goal archer)
		(and
			(unit-type-count archer > 10)
			(goal hostilities-goal 1)
		)
	)
	(can-research ri-crossbow)
=>
	(research ri-crossbow)
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-arbalest)
	)
	(or
		(goal ranged-unit-type-goal archer)
		(and
			(unit-type-count archer-line > 15)
			(goal hostilities-goal 1)
		)
	)
	(can-research ri-arbalest)
=>
	(research ri-arbalest)
)
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined SLAVIC-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(or 
		(goal anti-cavalry-threat-goal 0)
		(or		
			(unit-type-count knight-line > high-min-number-upgrade)
			(goal unit-goal knight)
		)
	)
	(or
		(unit-type-count knight-line > 19)
		(or 
			(research-completed ri-bloodlines)
			(civ-selected frankish)
		)
	)
	(can-research ri-cavalier)
=>
	(research ri-cavalier)
)
#else
(defrule
	(strategic-number sn-resource-control <= 2)	
	(unit-type-count knight-line > 19)
	(can-research ri-cavalier)
=>
	(research ri-cavalier)
)
#end-if
#else
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal unit-goal knight)
	(or 
		(research-completed ri-bloodlines)
		(civ-selected frankish)
	)
	(can-research ri-cavalier)
=>
	(research ri-cavalier)
)
#end-if
(defrule
	(strategic-number sn-resource-control <= 2)
	(or 
		(research-completed ri-bloodlines)
		(civ-selected frankish)
	)
	(can-research-with-escrow ri-paladin)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-paladin)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(unit-type-count ranged-units > mid-min-number-upgrade)
			(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
		)
		(goal ranged-unit-type-goal cavalry-archer)
	)
	(or
		(or
			(gold-amount < 200)
			(strategic-number sn-current-age >= ci-transit)
		)
		(goal hostilities-goal 1)
	)
	(can-research-with-escrow ri-thumb-ring)
=>
	(release-escrow wood)(release-escrow food)
	(research ri-thumb-ring)
)
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined GOTHIC-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(research-completed ri-bloodlines)
		(research-available ri-bloodlines)
	)
	(or
		(unit-type-count villager >= 40); dont research this at castle age start when rushing
		(population >= del-civ-pop)
	)
	(or
		(and
			(food-amount > 350)
			(or 
				(gold-amount < 200)
				(strategic-number sn-current-age >= ci-transit)
			)
		)
		(unit-type-count scout-cavalry > 6)
	)
	(can-research ri-light-cavalry)
=>
	(research ri-light-cavalry)
)
#end-if
(defrule
	(or
		(goal monk-threat-goal 1)
		(and
			(strategic-number sn-resource-control <= 2)
			(and
				(and
					(food-amount > 400)
					(gold-amount < 100)
				)
				(or
					(civ-selected frankish)
					(civ-selected briton)
				)
			)
		)
	)
	(can-research ri-light-cavalry)
=>
	(research ri-light-cavalry)
)
(defrule
	(game-time < 1500)
	(or
		(players-building-type-count every-enemy monastery > 1)
		(and
			(players-building-type-count every-enemy castle > 0)
			(players-unit-type-count every-enemy monk > 3)
		)
	)
	(can-research ri-light-cavalry)
=>
	(research ri-light-cavalry)
)
#end-if
(defrule
	(nand
		(civ-selected magyar)
		(goal monk-threat-goal 0); get UU instead
	)
	(strategic-number sn-resource-control <= 2)
	(can-research ri-hussar)
=>
	(research ri-hussar)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(goal unit-goal cavalry-archer)
		(and
			(civ-selected hun)
			(unit-type-count trade-cart > 5)
		)
	)
	(unit-type-count cavalry-archer-line >= mid-min-number-upgrade)
	(can-research ri-heavy-cavalry-archer)
=>
	(research ri-heavy-cavalry-archer)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(research-completed ri-crossbow)
			(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
		)
		(or
			(or
				(unit-type-count ranged-units > mid-min-number-upgrade)
				(goal strategy-goal flush)
			)
			(unit-type-count galley-line > 4)
		)
	)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-fletching)
	)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(or 
			(goal unit-goal cavalry-archer)
			(goal unit-goal archer)
		)
		(goal unit-goal ss)
	)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-fletching)
	)
	(current-age >= castle-age)
	(building-type-count castle > 0)
	(or
		(unit-type-count ranged-units > 0)
		(unit-type-count cavalry-archer-units > 0)
	)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-bodkin-arrow)
	)
	(or
		(or
			(unit-type-count ranged-units > mid-min-number-upgrade)
			(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
		)
		(or
			(unit-type-count galley-line > 0)
			(and
				(goal unit-goal ss)
				(current-age-time > 60)
			)
		)
	)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)
(defrule
	(goal strategy-goal rush)
;	(goal control-goal aggressive-rush)
	(or
		(goal unit-goal cavalry-archer)
		(goal unit-goal archer)
	)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)
(defrule
	(or
		(and
			(unit-type-count infantry-units > mid-min-number-upgrade)
			(strategic-number sn-resource-control <= 2)
		)
		(goal train-civ-goal ri-chain-mail)
	)
	(can-research-with-escrow ri-chain-mail)
	(research-completed ri-city-councils)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-chain-mail)
)
(defrule
	(strategic-number sn-resource-control <= 0)
	(or
		(research-completed ri-chain-barding)
		(research-completed ri-chain-mail)
	)
	(or
		(or
			(strategic-number sn-current-age >= ci-transit)
			(goal hostilities-goal 1)
		)
		(and
			(goal unit-goal eagle-warrior)
			(not (goal strategy-goal fast-imp))
		)
	)
	(can-research-with-escrow ri-iron-casting)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-iron-casting)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(current-age-time > 60)
	(can-research ri-conscription)
=>
	(research ri-conscription)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(population > sixty-percent-pop)
	(unit-type-count cavalry-units > high-min-number-upgrade)
	(research-available ri-plate-barding)
=>
	(set-escrow-percentage food 20)(set-escrow-percentage gold 20)
	(set-goal escrow-purpose-goal blacksmith)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count cavalry-units > mid-min-number-upgrade)
	(can-research-with-escrow ri-plate-barding)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(set-goal escrow-purpose-goal 0)
	(research ri-plate-barding)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(population > sixty-percent-pop)
	(not (can-research-with-escrow ri-bracer))
	(research-available ri-bracer)
=>
	(set-escrow-percentage food 20)(set-escrow-percentage gold 20)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(can-research-with-escrow ri-bracer)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(research ri-bracer)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(population > sixty-percent-pop)
	(or 
		(unit-type-count infantry-units > high-min-number-upgrade)
		(unit-type-count cavalry-units > high-min-number-upgrade)
	)
	(not (can-research-with-escrow ri-blast-furnace))
	(research-available ri-blast-furnace)
=>
	(set-escrow-percentage food 20)(set-escrow-percentage gold 20)
	(set-goal escrow-purpose-goal blacksmith)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(nand
		(research-available ri-plate-mail)
		(unit-type-count infantry-units > high-min-number-upgrade)
	)
	(nand
		(research-available ri-plate-barding)
		(unit-type-count cavalry-units > high-min-number-upgrade)
	)
	(can-research-with-escrow ri-blast-furnace)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(research ri-blast-furnace)
	(set-goal escrow-purpose-goal 0)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(population > sixty-percent-pop)
	(building-type-count university > 0)
	(not (can-research-with-escrow ri-chemistry))
	(research-available ri-chemistry)
=>
	(set-escrow-percentage food 20)(set-escrow-percentage gold 20)
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == ri-chemistry)
	)
	(or
		(current-age-time > 120)
		(or
			(goal unit-goal gunpowder-units)
			(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		)
	)
	(can-research-with-escrow ri-chemistry)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(research ri-chemistry)
)
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SPANISH-CIV
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control <= 2)
	(population > sixty-percent-pop)
	(unit-type-count infantry-units > high-min-number-upgrade)
	(research-available ri-plate-mail)
=>
	(set-escrow-percentage food 20)(set-escrow-percentage gold 20)
	(set-goal escrow-purpose-goal blacksmith)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(unit-type-count infantry-units > mid-min-number-upgrade)
	(can-research-with-escrow ri-plate-mail)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(set-goal escrow-purpose-goal 0)
	(research ri-plate-mail)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(unit-type-count gunpowder-units > low-min-number-upgrade)
			(unit-type-count conquistador-line > low-min-number-upgrade)
		)
		(and
			(research-completed ri-fletching)
			(or
				(or 
					(unit-type-count ranged-units > mid-min-number-upgrade)
					(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
				)
				(and
					(goal hostilities-goal 1)
					(goal strategy-goal flush)
				)
			)
		)
	)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count ranged-units > low-min-number-upgrade)
		(unit-type-count cavalry-archer-units > low-min-number-upgrade)
	)
	(research-completed ri-bodkin-arrow)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(goal hostilities-goal 1)
	)
	(can-research-with-escrow ri-leather-archer-armor)
	(research-completed ri-city-councils)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-leather-archer-armor)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count gunpowder-units > low-min-number-upgrade)
		(unit-type-count conquistador-line > low-min-number-upgrade)
	)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(goal hostilities-goal 1)
	)
	(can-research-with-escrow ri-leather-archer-armor)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-leather-archer-armor)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(not (research-available ri-bracer))
	(or
		(or 
			(unit-type-count ranged-units > low-min-number-upgrade)
			(unit-type-count cavalry-archer-units > low-min-number-upgrade)
		)
		(or
			(unit-type-count gunpowder-units > low-min-number-upgrade)
			(unit-type-count conquistador-line > low-min-number-upgrade)
		)
	)
	(can-research-with-escrow ri-ring-archer-armor)
=>
	(release-escrow food)(release-escrow gold)	
	(research ri-ring-archer-armor)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(and
			(gold-amount < 200)
			(or
				(food-amount > 500)
				(goal hostilities-goal 1)
			)
		)
	)
	(unit-type-count infantry-units > 8)
	(can-research ri-squires)
	(research-completed ri-city-councils)
=>
	(research ri-squires)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(or
			(gold-amount < 200)
			(strategic-number sn-current-age >= ci-transit)
		)
		(goal hostilities-goal 1)
	)
	(or
		(unit-type-count cavalry-units > mid-min-number-upgrade)
		(or
			(unit-type-count cavalry-archer-units > mid-min-number-upgrade)
			(unit-type-count conquistador-line > mid-min-number-upgrade)
		)
	)
	(can-research ri-husbandry)
	(research-completed ri-city-councils)
=>
	(research ri-husbandry)
)
(defrule
	(or
		(unit-type-count spearman-line > 7)
		(strategic-number sn-cavalry-threat >= 1)
	)
	(nand
		(and
			(goal unit-goal knight)
			(strategic-number sn-resource-control != ri-pikeman)
		)
		(civ-selected indian)
	)
	(can-research ri-pikeman)
=>
	(research ri-pikeman)
)
(defrule
	(unit-type-count spearman-line > high-min-number-upgrade)
	(research-available ri-halberdier)
	(not (goal escrow-purpose-goal blacksmith))
=>
	(set-escrow-percentage gold 67)
	(set-goal escrow-purpose-goal ri-halberdier)
)
(defrule
	(or
		(and
			(escrow-amount gold >= 225)
			(not (goal escrow-purpose-goal ri-halberdier))
		)
		(escrow-amount gold >= 600)
	)

	(not (goal escrow-purpose-goal my-unique-unit-line))
	(current-age == imperial-age)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 0); stop escrowing gold when we have enough
)
(defrule
	(or
		(unit-type-count spearman-line > mid-min-number-upgrade)
		(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	)
	(can-research-with-escrow ri-halberdier)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(research ri-halberdier)
	(set-goal escrow-purpose-goal 0)
)
(defrule
	(or
		(and
			(unit-type-count spearman-line < 10)
			(goal escrow-purpose-goal ri-halberdier)
		)
		(and
			(and
				(unit-type-count infantry-units < 10)
				(unit-type-count cavalry-units < 10)
			)
			(goal escrow-purpose-goal blacksmith)
		)
	)
=>
	(release-escrow food)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage gold 0)
	(set-goal escrow-purpose-goal 0)
)
(defrule
	(research-completed ri-elite-eagle); try to press advatange with as many EEW as possivle in early imp
	(current-age-time < 600)
	(population < del-civ-pop)
=>
	(release-escrow food)(release-escrow wood)(release-escrow gold)
	(set-escrow-percentage food 0)(set-escrow-percentage wood 0)(set-escrow-percentage gold 0)
	(set-goal escrow-purpose-goal 0)
)
#load-if-defined TURKISH-CIV
(defrule
	(current-age >= castle-age)
	(or
		(game-time > 2700)
		(death-match-game)
	)
	(nand
		(goal strategy-goal fast-imp)
		(current-age-time < 900)
	)
	(goal control-goal 0)
=>
	(set-goal control-goal militiaman-line)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(current-age-time > 180)
	(strategic-number sn-resource-control <= 2)
	(can-research ri-capped-ram)
	(unit-type-count-total battering-ram-line > 0)
=>
	(research ri-capped-ram)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(population > max-civ-pop)
	(strategic-number sn-resource-control <= 1)
	(can-research ri-siege-ram)
	(unit-type-count-total battering-ram-line > 3)
=>
	(research ri-siege-ram)
)
(defrule
	(goal save-wood-goal 0)
	(strategic-number sn-resource-control <= 1)
	(or 
		(strategic-number sn-current-age >= ci-transit)
		(or
			(building-type-count-total monastery > 2); mush
			(and
				(food-amount > 400)
				(gold-amount < 200)
			)
		)
	)
	(can-research ri-gold-shaft-mining)
	(research-completed ri-city-councils)
=>
	(research ri-gold-shaft-mining)
)
(defrule
	(or
		(strategic-number sn-stone-gatherer-percentage > 9)
		(and
			(strategic-number sn-current-age >= ci-transit)
			(strategic-number sn-stone-gatherer-percentage > 3)
		)
	)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(building-type-count-total barracks > 0); for saracens, to finish the barracks first to drop the other military buildings before castle age
		(or
			(goal strategy-goal boom); boom strategies go bs, market + castle
			(strategic-number sn-current-age >= ci-transit)
		)
	)
	(can-research ri-stone-mining)
=>
	(research ri-stone-mining)
)
(defrule
	(or
		(can-research ri-crop-rotation)
		(can-research ri-two-man-saw)
	)
=>
	(research ri-crop-rotation)
	(research ri-two-man-saw)
)
;********** SIEGE UNITS **********

#load-if-not-defined POPULATION-CAP-25
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(unit-type-count battering-ram-line < 3)
			(strategic-number sn-trebuchet-count < 1)
		)
		(and
			(goal enemy-fortifications-goal 1)
			(and
				(building-type-count-total castle > 0)
				(current-age == imperial-age)
			)
		)
	)
	(strategic-number sn-trebuchet-count < 3)
	(population >= max-civ-pop)
	(game-time < 1200)
=>
	(set-goal save-wood-goal 1)
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(current-age >= imperial-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)	
	(or
		(and
			(unit-type-count battering-ram-line < 3)
			(strategic-number sn-trebuchet-count < 1)
		)
		(and
			(goal enemy-fortifications-goal 1)
			(building-type-count-total castle > 0)
		)
	)
	(strategic-number sn-trebuchet-count < 3)
	(population >= del-civ-pop)
=>
	(set-goal save-wood-goal 1)
	(set-goal train-civ-goal -1)
	(set-strategic-number sn-resource-control 2)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(population >= del-civ-pop)
	(unit-type-count-total villager >= 101)
	(current-age == imperial-age)
	(current-age-time > 180)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
)
#end-if
(defrule
	(population >= del-civ-pop)
	(population-cap <= 250)
	(unit-type-count battering-ram-line < 4)
	(building-type-count siege-workshop > 0)
	(strategic-number sn-trebuchet-count == 0)
	(current-age == imperial-age)
	(current-age-time > 180)
	(wood-amount > 175)
	(gold-amount > 75)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
	(set-strategic-number sn-resource-control 2)
)
(defrule
	(population-cap <= 250)
	(players-building-count any-enemy > 0)
	(population >= del-civ-pop)
	(civilian-population > up-max-civ)
	(gold-amount > 1500)
	(food-amount > 1500)
	(current-age == imperial-age)
	(current-age-time > 300)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
)
(defrule
	(building-type-count castle > 0)
	(current-age == imperial-age)
	(population >= del-civ-pop)
	(population-cap <= 250)
	(strategic-number sn-trebuchet-count < 4)
	(or
		(goal enemy-fortifications-goal 1)
		(strategic-number sn-trebuchet-count < 1)
	)
	(wood-amount > 200)
	(gold-amount > 200)
	(can-afford-unit trebuchet)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
	(set-strategic-number sn-resource-control 2)
)
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined YUCATAN-MAP
(defrule
	(population-cap <= 250)
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(building-type-count-total dock > 0)
	(or
		(warboat-count < 25)
		(and
			(civilian-population > 50)
			(and
				(can-afford-unit cannon-galleon-line)
				(unit-type-count cannon-galleon-line < 6)
			)
		)
	)
	(population >= max-pop)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
	(set-strategic-number sn-resource-control 1)
	(chat-to-player my-player-number "execute villagers too make room for a fleet")
)
#end-if
#end-if
#else
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(building-type-count-total dock > 0)
	(or
		(and
			(unit-type-count villager >= up-max-civ)
			(current-age == castle-age)
		)
		(research-completed ri-cannon-galleon)
	)
	(unit-type-count villager >= 6)
	(population >= max-pop)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
	(set-strategic-number sn-resource-control 1)
	(chat-to-player my-player-number "execute villagers too make room for a fleet")
)
(defrule
	(population >= max-pop)
	(or
		(strategic-number sn-resource-control == battering-ram)
		(and
			(or
				(goal forward-threat-goal 1)
				(military-population > 5)
			)
			(and
				(unit-type-count battering-ram-line < 2)
				(strategic-number sn-trebuchet-count == 0)
			)
		)
	)
	(unit-type-count villager >= 6)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
)
(defrule
	(or
		(current-age == imperial-age)
		(taunt-detected any-ally 222)
	)
	(current-age-time > 300)
	(population > del-civ-pop)
	(strategic-number sn-resource-control < 2); no siege required from rules above
	(not (goal uu-up-goal 1))
	(goal escrow-purpose-goal 0)
	(unit-type-count villager >= up-max-civ)
=>
	(delete-unit villager)
	(set-goal train-civ-goal -1)
	(acknowledge-taunt any-ally 222)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on water maps
	(dropsite-min-distance wood > 0)
	(dropsite-min-distance wood < 20)
	(goal train-civ-goal -1)
	(strategic-number sn-resource-control < 1); no siege required from rules above
	(civilian-population <= fourty-percent-pop); already deleted lots of villagers
=>
	(set-goal train-civ-goal 1); restart villager training
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(strategic-number sn-resource-control == 1)
	(warboat-count >= 25)
	(or
		(not (research-completed ri-cannon-galleon))
		(unit-type-count cannon-galleon-line > 7)
	)
=>
	(set-strategic-number sn-resource-control 0)
)
; order of rules does matter as 1st rule that will be executed 1st, so next rules may not spend the resources
; so put siege training above building
(defrule
	(population > fourty-percent-pop)
	(or
		(population > max-civ-pop)
		(game-time < 1200)
	)
	(or
		(or
			(strategic-number sn-trebuchet-count < 2)
			(game-time < 1200); start in DM
		)
		(or
			(goal enemy-fortifications-goal 1)
			(players-building-type-count any-enemy castle > 1)
		)
	)
	(strategic-number sn-trebuchet-count < 4)
	(can-train trebuchet)
=>
	(train trebuchet)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(unit-type-count-total battering-ram-line < number-rams)
	(population >= seventy-five-percent-pop)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
#load-if-not-defined POPULATION-CAP-25
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(and
			(building-type-count-total town-center >= 3)
			(wood-amount > 300)
		)
		(and
			(unit-type-count-total battering-ram-line < 2)
			(strategic-number sn-military-level > 0)
		)
	)
	(military-population > 10)
	(or
		(strategic-number sn-military-level >= 0)
		(population >= del-civ-pop)
	)
	(unit-type-count-total battering-ram-line < 4)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count mangonel-line < 1)
	(goal strategy-goal boom)
	(or
		(and
			(goal unit-goal my-unique-unit-line); assume we have a ranged uu
			(unit-type-count ranged-units > mid-min-number-upgrade)
		)
		(goal unit-goal scorpion)
	)
	(or
		(players-unit-type-count any-enemy mangonel-line > 1)
		(players-unit-type-count any-enemy scorpion-line > 4)
	)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-military-level < 0)
	(or
		(and
			(strategic-number sn-infantry-threat == 0)
			(strategic-number sn-cavalry-threat == 0)
		)
		(strategic-number sn-archer-threat > 2)
	)
	(strategic-number sn-archer-threat > 1)
	(or
		(strategic-number sn-archer-threat > 2)
		(game-time < 1500)
	)
	(unit-type-count mangonel-line < 1)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
(defrule
	(or
		(strategic-number sn-resource-control < 3)
		(and
			(strategic-number sn-resource-control == ri-elite-eagle)
			(food-amount < 700)
		)
	)
	(not (research-completed ri-elite-eagle)); EW die to massed ranged, EEW don't
	(strategic-number sn-archer-threat > 2)
	(unit-type-count-total mangonel-line < 2)
	(goal unit-goal eagle-warrior)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(strategic-number sn-archer-threat > 3)
		(players-unit-type-count any-enemy scorpion-line > 20)
	)
	(unit-type-count mangonel-line < 2)
	(can-train mangonel-line)
=>
	(research ri-onager)
	(train mangonel-line)
)
#load-if-not-defined POPULATION-CAP-25
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(goal unit-goal monk)
		(death-match-game)
	)
	(strategic-number sn-resource-control < 1)
	(or
		(military-population > 20)
		(unit-type-count stone-wall-line > 10)
	)
	(unit-type-count battering-ram-line < 4)
	(or
		(strategic-number sn-military-level >= 0)
		(population > sixty-percent-pop)
	)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(population > max-civ-pop)
	(or
		(unit-type-count battering-ram-line < 4)
		(research-completed ri-siege-ram)
	)
	(or
		(goal enemy-fortifications-goal 1)
		(unit-type-count battering-ram-line < 6)
	)
	(unit-type-count battering-ram-line < 8)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
#end-if
; Trade

#load-if-defined ITALIAN-CIV
(defrule
	(unit-type-count trade-cart < 12)
	(player-in-game any-ally)
	(can-research ri-silk-road)
=>
	(research ri-silk-road)
)
#end-if

(defrule
	(nor
		(research-available ri-double-bit-axe)
		(research-available ri-horse-collar)
	)
	(goal strategy-goal sling)
	(can-research ri-coinage)
=> 
	(research ri-coinage)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(and
			(and
				(food-amount > 500)
				(gold-amount < 200)
			)
			(unit-type-count villager > villager-coinage)
		)
	)
	(or
		(unit-type-count villager > villager-coinage)
		(unit-type-count villager >= up-max-civ)
	)
	(players-building-type-count any-ally market > 0)
	(can-research ri-coinage)
=> 
	(research ri-coinage)
)
(defrule
	(or
		(strategic-number sn-resource-control <= 2)
		(strategic-number sn-resource-control == sling)
	)
	(players-building-type-count any-ally market > 0)
	(can-research ri-banking)
=> 
	(research ri-banking)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count-total trade-cart > 9)
		(unit-type-count-total trade-cog > 9)
	)
	(can-research-with-escrow ri-caravan)
=> 
	(release-escrow food)(release-escrow gold)
	(research ri-caravan)
)
#load-if-not-defined DEFEND-WONDER
#load-if-not-defined POPULATION-CAP-25
;#load-if-not-defined POPULATION-CAP-50 ; disabled because new standart cap is 50
#load-if-not-defined UP-AVAILABLE ; in UP trade carts can be send across shallows
#load-if-not-defined CONTINENTAL-MAP ; so in standard exclude maps with shallows
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined SALT-MARSH-MAP
#load-if-not-defined RIVERS-MAP
(defrule
	(building-type-count town-center > 0)
	(strategic-number sn-resource-control <= 2)
	(player-in-game any-ally)
	(players-building-type-count any-ally market > 0)
	(or
		(research-available imperial-age)
		(strategic-number sn-current-age >= ci-transit)
	)
	(strategic-number sn-minimum-water-body-size-for-dock <= water-mixed)
	(or
		(game-time > 2100);35 min
		(death-match-game)
	)
	(not (town-under-attack)); not wasting resources, erased team-islands
	(can-train trade-cart)
	(unit-type-count trade-cart < max-trade-cart)
=>
	(train trade-cart)
)
#end-if
#end-if
;#end-if
#end-if
#else
(defrule
	(building-type-count town-center > 0)
	(strategic-number sn-resource-control <= 2)
	(player-in-game any-ally)
	(players-building-type-count any-ally market > 0)
	(or
		(research-available imperial-age)
		(strategic-number sn-current-age >= ci-transit)
	)
	(strategic-number sn-minimum-water-body-size-for-dock <= water-mixed)
	(or
		(game-time > 2100);35 min
		(death-match-game)
	)
	(not (town-under-attack)); not wasting resources, erased team-islands
	(can-train trade-cart)
	(unit-type-count trade-cart < max-trade-cart)
=>
	(train trade-cart)
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-resource-control <= 2)
	(player-in-game any-ally)
	(players-building-type-count any-ally market > 0)
	(building-type-count-total town-center >= tc-level-five)
	(or
		(research-available imperial-age)
		(strategic-number sn-current-age >= ci-transit)
	)
	(not (town-under-attack)); not wasting resources
	(can-train trade-cart)
	(unit-type-count trade-cart < 20)
=>
	(train trade-cart)
)
#end-if
#end-if
#end-if
#end-if
#end-if

; VILLAGERS
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager < 32)
	(or
		(unit-type-count villager < villager-feudal-min)
		(or
			(and
				(nor
					(goal strategy-goal flush)
					(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
				)
				(unit-type-count villager < dark-age-villager)
			)
			(food-amount < 430)
		)
	)
	(goal train-civ-goal 1)
	(can-train villager)
=>
	(train villager)
)
(defrule
	(goal train-civ-goal 1)
	(building-type-count-total town-center >= tc-level-two)
	(gold-amount > 250)
	(food-amount < 50)
	(civilian-population < 85)
	(commodity-buying-price food < 150)
	(can-buy-commodity food); buy food for villagers.
=>
	(buy-commodity food);placed this here so food can be spend immediately on the next rule.
	(chat-to-player my-player-number "3 buy food")
)
(defrule
	(goal train-civ-goal 1)
	(current-age >= castle-age)
	(civilian-population < 110)
	(unit-type-count-total villager < 100)
	(unit-type-count-total villager < up-max-civ)
	(can-train villager)
=>
	(train villager)
)
(defrule
	(goal train-civ-goal 1)
	(current-age == feudal-age)
	(or
		(goal strategy-goal flush)
		(goal strategy-goal sling)
	)
	(or
		(not (research-available castle-age))
		(or
			(food-amount < 750)
			(gold-amount < 160)
		)
	)
	(unit-type-count-total villager < 100)
	(civilian-population < 100)
	(can-train villager)
=>
	(train villager)
)

;********** BUILDINGS **********
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(building-type-count town-center > 0)
	(goal increase-town-size-goal 0)
	(goal unit-goal monk)
	(or
		(building-type-count-total monastery < 3)
		(strategic-number sn-current-age >= ci-transit)
	)
	(goal save-wood-goal 0)
	(building-type-count-total monastery < 5)
	(can-build monastery)
=>
	(build monastery)
	(set-goal increase-town-size-goal 2)
)
(defrule
	(building-type-count town-center > 0)
	(goal increase-town-size-goal 0)
	(goal ranged-unit-type-goal monk)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total monastery < 3)
	(wood-amount > 300)
	(goal save-wood-goal 0)
	(can-build monastery)
=>
	(build monastery)
	(set-goal increase-town-size-goal 2)
)
#else
(defrule
	(building-type-count town-center > 0)
	(goal increase-town-size-goal 0)
	(goal save-wood-goal 0)
	(or
		(goal unit-goal monk)
		(and
			(goal ranged-unit-type-goal monk)
			(building-type-count-total monastery < 4)
		)
	)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total monastery < 6)
	(can-build monastery)
=>
	(build monastery)
	(set-goal increase-town-size-goal 2)
)
#end-if
#load-if-defined AZTEC-CIV
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(goal increase-town-size-goal 0)
	(goal save-wood-goal 0)
	(building-type-count-total siege-workshop > 0)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total monastery < 2)
		(strategic-number sn-current-age >= ci-transit)
	)
	(building-type-count-total monastery < 3)
	(nor 
		(goal enemy-goal eagle-warrior)
		(or
			(goal unit-goal archer)
			(goal unit-goal eagle-warrior)
		)
	)
	(can-build monastery)
=>
	(build monastery)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal save-wood-goal 0)
	(building-type-count-total town-center >= tc-level-two)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(building-type-count-total monastery < 2)
	)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(building-type-count-total monastery < 3)
	)
	(building-type-count-total monastery < 5)
	(goal ranged-unit-type-goal monk)
	(can-build monastery)
=>
	(build monastery)
)
#else
(defrule
	(unit-type-count villager > villager-monastery)
	(or
		(or
			(players-civ every-enemy indian)
			(players-civ every-enemy slavic)
		)
		(or
			(or
				(players-civ every-enemy gothic)
				(players-civ every-enemy persian)
			)
			(or
				(players-civ every-enemy korean)
				(players-civ every-enemy chinese)
			)
		)
	)
	(building-type-count-total monastery < 5)
	(can-build monastery)
=>
	(build monastery)
)
#end-if
#end-if
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(or
		(unit-type-count villager > villager-castle)
		(starting-age < post-imperial-age)
	)
	(can-build castle)
=>
	(build castle)
	(set-goal increase-town-size-goal 2)
)
#end-if
#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined UP-AVAILABLE
#load-if-not-defined DEATH-MATCH
(defrule
	(current-age >= castle-age)
	(can-afford-building castle)
	(or (or (and (building-type-count-total castle == 0)
	(building-type-count castle == 0))
	(and (building-type-count-total castle == 1)
	(building-type-count castle == 1)))
	(and (building-type-count-total castle == 2)
	(building-type-count castle == 2)))
	(goal increase-town-size-goal 0)
=>	
	(set-goal increase-town-size-goal castle)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal castle)
	(or (or (or (and (building-type-count-total castle > 0)
	(building-type-count castle == 0))
	(and (building-type-count-total castle > 1)
	(building-type-count castle == 1)))
	(and (building-type-count-total castle > 2)
	(building-type-count castle == 2)))
	(not (can-afford-building castle)))
=>
	(set-goal increase-town-size-goal 0))
(defrule
	(goal increase-town-size-goal castle)
	(or (or (and (building-type-count-total castle > 3)
	(building-type-count castle == 3))
	(and (building-type-count-total castle > 4)
	(building-type-count castle == 4)))
	(and (building-type-count-total castle > 5)
	(building-type-count castle == 5)))
=>
	(set-goal increase-town-size-goal 0))
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count town-center > 0)
	(goal save-wood-goal 0)
	(can-build town-center)
	(nor 
		(and
			(goal strategy-goal fast-imp)
			(current-age < imperial-age)
		)
		(and
			(goal unit-goal my-unique-unit-line)
			(building-type-count-total castle == 0)
		)
	)
	(or
		(building-type-count-total town-center < 4)
		(unit-type-count villager < fourty-percent-pop)
	)
	(building-type-count-total town-center < 5)
=>
	(build town-center)
)
#end-if
(defrule
	(current-age >= castle-age)
	(can-afford-building town-center)
	(goal save-wood-goal 0)
	(nand
		(goal unit-goal my-unique-unit-line)
		(building-type-count-total castle == 0)
	)
	(nand
		(goal strategy-goal fast-imp)
		(current-age < imperial-age)
	)
	(building-type-count-total town-center < 4)
	(goal increase-town-size-goal 0)
=>
	(set-goal increase-town-size-goal town-center)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined BRITON-CIV
(defrule
	(goal increase-town-size-goal town-center)
	(or
		(and
			(and
				(goal unit-goal archer)
				(goal control-goal aggressive-rush)
			)
			(or
				(building-type-count-total archery-range < 4); don't mess up build order because british TC discount
				(building-type-count-total siege-workshop < 1)
			)
		)
		(and
			(building-type-count-total monastery < 1)
			(building-type-count-total town-center > 1)
		)
	)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if
#load-if-defined DEATH-MATCH
(defrule
	(unit-type-count villager < 15)
	(goal increase-town-size-goal town-center)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal town-center)
	(building-type-count-total town-center > 0)
	(or
		(building-type-count town-center < 1)
		(building-type-count-total town-center > 1)
	)
	(or
		(building-type-count town-center < 2)
		(building-type-count-total town-center > 2)
	)
	(or
		(building-type-count town-center < 3)
		(building-type-count-total town-center > 3)
	)
	(or
		(building-type-count town-center < 4)
		(building-type-count-total town-center > 4)
	)
	(building-type-count town-center < 5)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if
#end-if; NOT PIDM
#end-if; NOT WONDER-RACE

#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal save-wood-goal 0)
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(building-type-count-total town-center > 0)
	(player-in-game any-ally)
	(not (goal strategy-goal boom))
	(or
		(building-type-count-total town-center >= tc-level-two)
		(nor
			(goal unit-goal knight)
			(goal unit-goal archer)
		)
	)
	(building-type-count-total monastery == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal monastery)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal save-wood-goal 0)
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(building-type-count-total town-center > 0)
	(or
		(and
			(goal strategy-goal boom)
			(building-type-count-total town-center >= tc-boom-monastery)
		)
		(goal strategy-goal fast-imp)
	)
	(building-type-count-total monastery == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal monastery)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(building-type-count-total town-center > 0)
	(or
		(goal unit-goal wonder)
		(or
			(not (player-in-game any-ally))
			(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
		)
	)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	)
	(building-type-count-total monastery == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal monastery)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(goal increase-town-size-goal monastery)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(building-type-count-total town-center > 0)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(building-type-count-total monastery == 0)
	(wood-amount >= 175)
	(food-amount > 500)
	(gold-amount > 400)
=>
	(set-goal increase-town-size-goal monastery)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(building-type-count-total town-center >= tc-level-five)
	(building-type-count-total monastery == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal monastery)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined WONDER-RACE
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal rush)
	(game-time < 1500)
	(goal monk-threat-goal 1)
	(players-military-population every-enemy < 7)
	(building-type-count-total market < 1)
	(building-type-count stable > 0); get a market to buy food for light cavalry
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(building-type-count-total town-center == 0); rebuild tc and no stone => get a market and buy some.
	(stone-amount < 100)
	(building-type-count-total market == 0)
	(dropsite-min-distance wood < 10)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(or
		(or
			(and
				(building-type-count-total town-center >= tc-level-four)
				(current-age >= castle-age)
			)
			(strategic-number sn-resource-control == sling)
		)
		(and
			(wood-amount > 430)
			(building-type-count-total town-center >= tc-level-three)
		)
	)
	(goal save-wood-goal 0)
	(building-type-count-total market == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-two)
	(or
		(and
			(goal unit-goal my-unique-unit-line)
			(or
				(civ-selected aztec)
				(civ-selected gothic)
			)			
		)
		(goal enemy-goal eagle-warrior)
	)
	(not (goal unit-goal archer))
	(building-type-count-total market == 0)
	(wood-amount >= 175)
	(goal save-wood-goal 0)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= castle-age)
	(or
		(and
			(game-time >= 1800)
			(player-in-game any-ally)
		)
		(or
			(building-type-count town-center >= tc-level-four)
			(and
				(research-available imperial-age)
				(goal strategy-goal fast-imp)
			)
		)
				
	)
	(building-type-count-total market == 0)
	(can-afford-building market)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
#end-if; NOT WONDER-RACE
#load-if-not-defined WONDER-RACE
#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(or
		(goal strategy-goal flush)
		(goal unit-goal mix)
	)
	(building-type-count-total archery-range > 0)
	(or
		(goal unit-goal scout-cavalry)
		(or
			(and
				(strategic-number sn-current-age >= fc-transit)
				(game-time < 1800); don't build them too late e.g. after slinging
			)
			(goal monk-threat-goal 1)
		)
	)
	(building-type-count-total stable < 1)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined BRITON-CIV
(defrule
	(goal increase-town-size-goal 0)
	(research-available ri-man-at-arms)
	(players-unit-type-count every-enemy skirmisher-line > 24)
	(or
		(and
			(building-type-count-total town-center >= tc-level-three)
			(building-type-count-total stable < 1)
		)
		(unit-type-count-total villager > 90)
	)
	(building-type-count-total stable < 2)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal archer)
	(building-type-count-total stable < 1)
	(building-type-count-total archery-range > 2)
	(research-available ri-man-at-arms)
	(players-civ any-enemy aztec)
	(or
		(goal enemy-goal eagle-warrior)
		(or
			(players-building-type-count any-enemy market > 0)
			(players-building-type-count any-enemy barracks > 1)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined CHINESE-CIV
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total town-center >= tc-level-four)
	(unit-type-count-total villager > 90)
	(building-type-count-total stable < 2)
	(wood-amount >= 175)
	(food-amount > 600)
	(gold-amount < 75)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(or
		(or
			(or
				(unit-type-count-total cavalry-units > 11)
				(unit-type-count-total cavalry-archer-units > 11)
			)
			(unit-type-count-total conquistador-line > 11)
		)
		(strategic-number sn-current-age >= ci-transit)
	)
	(wood-amount >= 175)
	(building-type-count-total stable < 1)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(or
		(and
			(unit-type-count-total mameluke-line > 11)
			(building-type-count-total stable < 1)
		)
		(and
			(research-completed ri-hussar)
			(and	
				(food-amount > 1200)
				(wood-amount > 400)
			)
		)
	)
	(building-type-count-total stable < 7)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined VIKING-CIV
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal archer)
	(building-type-count-total archery-range > 3)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total stable < 2)
	(research-available ri-man-at-arms)
	(or
		(strategic-number sn-current-age >= ci-transit)
		(and
			(unit-type-count villager > 50)
			(and
				(food-amount > 400)
				(gold-amount < 150)
			)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal gunpowder-units)
	(building-type-count-total stable < 2)
	(building-type-count-total archery-range > 1)
	(or
		(and
			(civ-selected turkish)
			(strategic-number sn-cavalry-threat > 0); get camels vs cavalry with turks
		)
		(and
			(building-type-count-total archery-range > 5)
			(building-type-count-total university > 0)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(or
			(or
				(goal monk-threat-goal 1)
				(players-unit-type-count any-enemy eagle-warrior-line > 5)
			)
			(and
				(goal enemy-goal flush)
				(building-type-count-total town-center >= tc-level-two)
			)
		)
	)
	(building-type-count-total stable < 1)
	(current-age >= castle-age)
	(goal unit-goal ss)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total stable < 1)
	(goal strategy-goal boom)
	(goal monk-threat-goal 1)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total stable < 2)
	(or
		(and
			(building-type-count-total blacksmith > 0)
			(not (goal strategy-goal boom))
		)
		(building-type-count-total stable < 1)
	)
	(or
		(goal unit-goal knight)
		(and
			(goal unit-goal scout-cavalry)
			(goal strategy-goal rush)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total stable < 1)
	(goal unit-goal cavalry-archer)
	(or
		(goal control-goal 0)
		(and
			(or
				(building-type-count-total monastery > 0)
				(building-type-count-total town-center >= tc-level-two)
			)
			(building-type-count-total archery-range > 2)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal knight)
	(goal control-goal shot)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total stable < 4)
	(or
		(building-type-count-total siege-workshop > 0)
		(building-type-count-total stable < 3)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total university > 0)
	(or
		(research-completed ri-light-cavalry)
		(goal unit-goal knight)
	)
	(or
		(building-type-count-total stable < 3)
		(and
			(wood-amount > 350)
			(strategic-number sn-current-age >= ci-transit)
		)
	)
	(building-type-count-total stable < 4)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#load-if-not-defined HUN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal knight)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total stable < 2)
		(building-type-count-total town-center >= tc-level-four)	
	)
	(strategic-number sn-military-level < 0)
	(building-type-count-total stable < 4)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(building-type-count town-center >= tc-level-two)
	(goal unit-goal default-ranged)
	(or
		(or
			(civ-selected frankish)
			(civ-selected persian)
		)
		(or
			(civ-selected spanish)
			(civ-selected teutonic)
		)
	)
	(building-type-count-total stable < 2)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total town-center >= tc-level-five)
	(building-type-count-total stable < 8)
	(goal unit-goal knight)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal stable)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal stable)
	(building-type-count-total stable > 0)
	(or
		(building-type-count stable < 1)
		(building-type-count-total stable > 1)
	)
	(or
		(building-type-count stable < 2)
		(building-type-count-total stable > 2)
	)
	(or
		(building-type-count stable < 3)
		(building-type-count-total stable > 3)
	)
	(or
		(building-type-count stable < 4)
		(building-type-count-total stable > 4)
	)
=>
	(set-goal increase-town-size-goal 0)
	(chat-local-to-self "stable placed")
)
#end-if
#end-if; NOT AZTEC
#end-if; NOT MAYAN
#load-if-defined INCAN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total archery-range < 2)
	(building-type-count-total monastery > 0)
	(strategic-number sn-infantry-threat > 0)
	(or
		(building-type-count-total archery-range < 1)
		(building-type-count-total siege-workshop > 0)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal unit-goal eagle-warrior)
	(goal strategy-goal rush)
	(building-type-count-total archery-range < 2)
	(building-type-count-total barracks > 2)
	(building-type-count-total monastery > 0)
	(or
		(building-type-count-total town-center >= tc-level-two)
		(players-unit-type-count any-enemy militiaman-line > 5); longswordsman counter EWs so get some xbows
	)
	(or
		(building-type-count-total archery-range < 1)
		(building-type-count-total town-center >= tc-level-three)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total barracks > 2)
	(goal unit-goal eagle-warrior)
	(players-unit-type-count every-enemy eagle-warrior-line < 6)
	(strategic-number sn-cavalry-threat == 0)
	(wood-amount > 350)
	(or
		(and
			(food-amount > 150)
			(gold-amount < 50)
		)
		(players-unit-type-count every-enemy militiaman-line > 5)
	)
	(building-type-count-total archery-range < 2)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total archery-range < 1)
		(and
			(building-type-count-total town-center >= tc-level-four)
			(or
				(research-completed ri-crossbow)
				(civ-selected hun)
			)
		)
	)
	(building-type-count-total archery-range < 2)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(or
		(goal enemy-goal flush)
		(and
			(current-age-time > 200)
			(wood-amount > 270)
		)
	)
	(building-type-count-total archery-range < 3)
	(strategic-number sn-current-age == feudal)
	(building-type-count-total blacksmith > 0)
	(wood-amount >= 220)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(current-age >= feudal-age); upraveno z ==
	(not (goal unit-goal knight))
	(building-type-count-total market < 1)
	(building-type-count-total archery-range < 1)
	(building-type-count barracks > 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(building-type-count-total market > 0)
	(building-type-count-total town-center >= tc-level-three)
	(building-type-count-total university > 0)
	(building-type-count-total archery-range < 1)
	(building-type-count barracks > 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(building-type-count-total archery-range < 2)
	(building-type-count-total blacksmith > 0)
	(or
		(strategic-number sn-archer-threat > 1)
		(and
			(players-building-type-count any-enemy archery-range > 1)
			(goal enemy-goal ss)
		)
	)
	(strategic-number sn-infantry-threat == 0)
	(strategic-number sn-cavalry-threat == 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(building-type-count barracks > 0)
	(or
		(and
			(building-type-count-total archery-range < 2)
			(and
				(research-available ri-man-at-arms)
				(or
					(building-type-count-total stable == 0)
					(strategic-number sn-current-age >= fc-transit)
				)
			)
		)
		(goal unit-goal archer)
	)
	(building-type-count-total archery-range < 3)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total blacksmith > 0)
	(or
		(goal strategy-goal rush)
		(goal strategy-goal flush)
	)
	(building-type-count-total archery-range < 4)
	(or
		(building-type-count-total archery-range < 3)
		(or
			(building-type-count-total town-center >= tc-level-three)
			(unit-type-count-total battering-ram-line > 0)
		)
	)
	(goal unit-goal archer)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(or
		(goal unit-goal archer)
		(goal unit-goal cavalry-archer)
	)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total archery-range < 3)
		(building-type-count-total town-center >= tc-level-four)	
	)
	(strategic-number sn-military-level < 0)
	(building-type-count-total archery-range < 5)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined VIKING-CIV
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal archer)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= 3)
	(or
		(research-available imperial-age)
		(strategic-number sn-current-age >= ci-transit)
	)
	(building-type-count-total archery-range < 8)
	(wood-amount >= 220)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total blacksmith > 0)
	(or
		(goal strategy-goal rush)
		(goal strategy-goal flush)
	)
;	(building-type-count-total stable > 0)
	(building-type-count-total archery-range < 4)
	(or
		(building-type-count-total archery-range < 3)
		(building-type-count-total town-center >= tc-level-three)
	)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(strategic-number sn-current-age >= ci-transit)
	(goal unit-goal gunpowder-units)
	(or
		(building-type-count-total archery-range < 2)
		(or
			(building-type-count-total town-center >= 2)
			(civilian-population > 80)
		)
	)
	(or
		(building-type-count-total archery-range < 3)
		(civilian-population > 80)
	)
	(building-type-count-total archery-range < 6)	
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined BYZANTINE-CIV
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total town-center >= tc-level-two)
	(or
		(building-type-count-total archery-range < 2)
		(and
			(building-type-count-total town-center >= 3)
			(strategic-number sn-cavalry-threat < 2)
		)
	)
	(or
		(strategic-number sn-cavalry-threat < 1)
		(building-type-count-total barracks > 1)
	)
	(building-type-count-total archery-range < 4)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total archery-range < 2)
	(or
		(strategic-number sn-cavalry-threat < 1)
		(building-type-count-total barracks > 1)
	)
	(or
		(goal unit-goal ss)
		(goal unit-goal mix)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined CELTIC-CIV
#load-if-not-defined SLAVIC-CIV
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal unit-goal knight)
	(goal strategy-goal rush)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(goal enemy-goal eagle-warrior); he will come with pikes
	)
	(building-type-count-total archery-range < 2)
	(wood-amount >= 175)
	(current-age >= castle-age)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(goal unit-goal knight)
	(building-type-count-total town-center >= tc-level-two)
	(or
		(or
			(goal anti-cavalry-threat-goal 1)
			(strategic-number sn-archer-threat > 1)
		)
		(or
			(goal enemy-goal flush)
			(goal enemy-goal ss)
		)
	)
	(not (goal position-goal pocket))
	(building-type-count-total archery-range < 1)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#end-if
#load-if-defined MAYAN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(players-civ every-enemy gothic)
	(strategic-number sn-current-age >= fc-transit)
	(building-type-count-total archery-range < 4)
	(wood-amount >= 175)
=>
	(set-goal control-goal aggressive-rush)
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined POPULATION-CAP-25
;#load-if-not-defined POPULATION-CAP-50
#load-if-defined UP-2-PLAYER-GAME
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total stable == 1)
	(or
		(building-type-count-total siege-workshop > 0)
		(building-type-count-total archery-range < 4)
	)
	(building-type-count-total archery-range < 6)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal unit-goal knight)
	(goal strategy-goal rush)
	(or
		(not (civ-selected celtic))
		(research-completed ri-elite-skirmisher)
	)
	(building-type-count-total town-center >= tc-level-four)
	(building-type-count-total archery-range < 4)
	(not (goal control-goal my-unique-unit-line))
	(wood-amount >= 225)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total university > 0)
	(building-type-count-total siege-workshop > 0)
	(or
		(research-completed ri-elite-skirmisher)
		(and
			(civ-selected turkish)
			(building-type-count-total archery-range < 4)
		)
	)
	(wood-amount > 300); excess wood
	(or
		(building-type-count-total archery-range < 6)
		(wood-amount > 600)
	)
	(building-type-count-total archery-range < 8)
=>
	(set-goal increase-town-size-goal archery-range)
	(enable-timer increase-town-size-timer 3)
)
;#end-if
#end-if
(defrule
	(goal increase-town-size-goal archery-range)
	(building-type-count-total archery-range > 3)
	(or
		(and
			(unit-type-count scorpion-line > 6)
			(research-available ri-heavy-scorpion)
		)
		(and
			(nor
				(goal ranged-unit-type-goal archer)
				(goal ranged-unit-type-goal cavalry-archer)
			)
			(wood-amount < 800)
		)
	)
	(wood-amount < 1100)
	(strategic-number sn-archer-threat < 3)
=>
	(set-goal increase-town-size-goal 0)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal archery-range)
	(building-type-count-total archery-range > 0)
	(or
		(building-type-count archery-range < 1)
		(building-type-count-total archery-range > 1)
	)
	(or
		(building-type-count archery-range < 2)
		(building-type-count-total archery-range > 2)
	)
	(or
		(building-type-count archery-range < 3)
		(building-type-count-total archery-range > 3)
	)
	(or
		(building-type-count archery-range < 4)
		(building-type-count-total archery-range > 4)
	)
	(building-type-count archery-range < 5)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal archery-range)
	(building-type-count-total archery-range > 5)
	(or
		(building-type-count archery-range < 6)
		(building-type-count-total archery-range > 6)
	)
	(or
		(building-type-count archery-range < 7)
		(building-type-count-total archery-range > 7)
	)
	(or
		(building-type-count archery-range < 8)
		(building-type-count-total archery-range > 8)
	)
	(or
		(building-type-count archery-range < 9)
		(building-type-count-total archery-range > 9)
	)
	(building-type-count archery-range < 10)
=>
	(set-goal increase-town-size-goal 0)
)
#else
(defrule
	(goal increase-town-size-goal archery-range)
	(goal unit-goal eagle-warrior)
	(goal control-goal shot)
	(building-type-count-total town-center < tc-level-three)
	(building-type-count-total barracks < 6)
	(current-age >= castle-age)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if
(defrule
	(building-type-count barracks == 0); prerequisits missing
	(or
		(goal increase-town-size-goal archery-range)
		(goal increase-town-size-goal stable)
	)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(goal strategy-goal flush)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal barracks)
	(goal enemy-boats-goal 1)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total dock < 2)
	(players-building-type-count every-enemy barracks == 0)
	(players-building-type-count every-enemy archery-range == 0)
	(players-building-type-count every-enemy stable == 0)
=>
	(set-goal increase-town-size-goal 0); skip barracks for more boats
	(disable-timer increase-town-size-timer)
)
#end-if
#load-if-not-defined SARACEN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(goal strategy-goal rush)
	(nor
		(goal unit-goal monk)
		(goal unit-goal eagle-warrior)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total barracks < 3)
	(or
		(civ-selected aztec)
		(building-type-count-total barracks < 1)
	)
	(building-type-count town-center > 0)
	(goal unit-goal monk)
	(or
		(or
			(goal anti-monk-threat-goal 1)
			(strategic-number sn-cavalry-threat > 1)
		)
		(building-type-count town-center >= tc-level-three)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total barracks < 3)
	(or
		(civ-selected aztec)
		(building-type-count-total barracks < 1)
	)
	(building-type-count town-center > 0)
	(goal unit-goal monk)
	(or
		(goal anti-monk-threat-goal 1)
		(building-type-count town-center >= tc-level-three)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(goal strategy-goal boom)
	(or
		(nor 
			(goal unit-goal my-unique-unit-line)
			(goal unit-goal scorpion)
		)
		(or
			(strategic-number sn-cavalry-threat > 1)
			(goal monk-threat-goal 1)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#else
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(goal strategy-goal boom)
	(goal unit-goal my-unique-unit-line)
	(strategic-number sn-cavalry-threat > 1)
	(current-age-time > 400)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= df-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(goal strategy-goal boom)
	(not (goal unit-goal my-unique-unit-line))
	(or		
		(not (goal unit-goal scorpion))
		(strategic-number sn-cavalry-threat > 1)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total barracks < 3)
	(building-type-count town-center > 0)
	(or
		(goal strategy-goal boom)
		(goal strategy-goal fast-imp)
	)
	(or
		(building-type-count-total barracks < 2)
		(building-type-count-total siege-workshop > 0)
	)
	(goal unit-goal eagle-warrior)
	(strategic-number sn-military-level < 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total barracks < 1)
	(building-type-count town-center > 0)
	(or
		(goal strategy-goal fast-imp)
		(and
			(goal strategy-goal boom)
			(goal unit-goal my-unique-unit-line)
		)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined SARACEN-CIV
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total barracks < 1)
	(building-type-count-total blacksmith > 0)
	(building-type-count town-center > 0)
	(goal strategy-goal rush)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#end-if
#load-if-not-defined POPULATION-CAP-25
;#load-if-not-defined POPULATION-CAP-50
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(building-type-count-total town-center >= tc-level-three)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total market > 0)
	(or
		(building-type-count-total barracks < 1)
		(and
			(building-type-count-total town-center >= tc-level-four)
			(or
				(research-completed ri-long-swordsman)
				(unit-available eagle-warrior-line)
			)
		)
	)
	(building-type-count-total barracks < 3)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total monastery > 0)
	(building-type-count-total town-center >= tc-level-two)
	(strategic-number sn-cavalry-threat > 0)
	(or
		(building-type-count-total barracks < 2)		
		(and
			(building-type-count-total town-center >= tc-level-four)
			(research-completed ri-pikeman)
		)
	)
	(building-type-count-total barracks < 4)
	(goal unit-goal ss)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(strategic-number sn-cavalry-threat > 1); dont care about TC if enemy has lots of knights
	)
	(nand
		(goal unit-goal knight)
		(building-type-count-total town-center == 1)
	)
	(building-type-count-total barracks < 3)
	(research-completed ri-pikeman)
	(goal strategy-goal rush)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(building-type-count-total barracks < 2)
	)
	(building-type-count-total town-center >= tc-level-three)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total barracks < 3)
	(research-completed ri-pikeman)
	(goal strategy-goal boom)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total barracks < 4)
	(or
		(goal unit-goal eagle-warrior)
		(research-completed ri-halberdier)
	)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(building-type-count-total barracks < 3)
	)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(building-type-count-total barracks < 10)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total town-center >= tc-level-three)
	(or
		(building-type-count-total barracks < 6)
		(wood-amount > 400)
	)
	(wood-amount > 220)
	(or
		(goal unit-goal eagle-warrior)
		(research-completed ri-halberdier)
	)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal barracks)
	(goal strategy-goal boom)
	(goal unit-goal eagle-warrior)
	(or
		(building-type-count-total barracks > 0)
		(strategic-number sn-current-age < fc-transit)
	)
	(nand
		(building-type-count-total barracks < 2)
		(building-type-count-total town-center >= tc-level-three)
	)
=>
	(set-goal increase-town-size-goal 0)
	(disable-timer increase-town-size-timer)
)
(defrule
	(goal increase-town-size-goal barracks)
	(goal strategy-goal fast-imp)
	(building-type-count-total barracks > 0)
	(not (research-available imperial-age))
=>
	(set-goal increase-town-size-goal 0)
	(disable-timer increase-town-size-timer)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total barracks < 4)
	(goal unit-goal eagle-warrior)
	(goal strategy-goal rush)
	(building-type-count-total monastery > 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(or 
		(and
			(goal enemy-goal eagle-warrior)
			(current-age == feudal-age)
		)
		(and
			(research-completed ri-elite-skirmisher)
			(building-type-count-total town-center >= tc-level-two)
		)
	)
	(building-type-count-total barracks < 2)
	(building-type-count-total blacksmith > 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(goal strategy-goal rush)
	(goal unit-goal militiaman-line)
	(building-type-count-total barracks < 2)
	(building-type-count-total blacksmith > 0)
	(research-completed ri-double-bit-axe)
	(research-completed ri-horse-collar)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or 
		(or
			(goal unit-goal militiaman-line)
			(goal control-goal militiaman-line)
		)
		(research-completed ri-pikeman)
	)
	(building-type-count-total barracks < 8)
	(building-type-count-total university > 0)
	(building-type-count-total siege-workshop > 0)
	(wood-amount > 250)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
;#end-if
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 0)
	(or
		(and
			(goal strategy-goal flush)
			(strategic-number sn-cavalry-threat > 1)
		)
		(and
			(population-cap < 49) ;Ł erase cap 75
			(research-completed ri-pikeman)
		)
	)
	(building-type-count-total barracks < 2)
	(building-type-count-total blacksmith > 0)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal barracks)
	(enable-timer increase-town-size-timer 3)
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(goal increase-town-size-goal barracks)
	(strategic-number sn-current-age < ci-transit)
=>
	(set-goal increase-town-size-goal 0)
	(disable-timer increase-town-size-timer)
)
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal increase-town-size-goal barracks)
	(building-type-count-total barracks > 0)
	(or
		(building-type-count barracks < 1)
		(building-type-count-total barracks > 1)
	)
	(or
		(building-type-count barracks < 2)
		(building-type-count-total barracks > 2)
	)
	(or
		(building-type-count barracks < 3)
		(building-type-count-total barracks > 3)
	)
	(or
		(building-type-count barracks < 4)
		(building-type-count-total barracks > 4)
	)
	(building-type-count barracks < 5)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal barracks)
	(building-type-count-total barracks > 5)
	(or
		(building-type-count barracks < 6)
		(building-type-count-total barracks > 6)
	)
	(or
		(building-type-count barracks < 7)
		(building-type-count-total barracks > 7)
	)
	(or
		(building-type-count barracks < 8)
		(building-type-count-total barracks > 8)
	)
	(or
		(building-type-count barracks < 9)
		(building-type-count-total barracks > 9)
	)
	(building-type-count barracks < 10)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if
(defrule
	(or
		(goal increase-town-size-goal siege-workshop)
		(or
			(or
				(goal increase-town-size-goal barracks)
				(goal increase-town-size-goal archery-range)
			)
			(goal increase-town-size-goal stable)
		)
	)
	(building-type-count-total town-center == 0)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(wood-amount < 200)
	(or
		(goal increase-town-size-goal siege-workshop)
		(and
			(wood-amount < 175)
			(or
				(or
					(goal increase-town-size-goal barracks)
					(goal increase-town-size-goal archery-range)
				)
				(goal increase-town-size-goal stable)
			)
		)
	)
=>
	(set-goal increase-town-size-goal 0)
	(chat-local-to-self "not enough wood to build")
)
(defrule; don't build if we save
	(or
		(strategic-number sn-resource-control == 3); hand-cart upgrade
		(or
			(and
				(strategic-number sn-resource-control == ri-elite-skirmisher)
				(building-type-count archery-range > 0)
			)
			(and
				(or
					(strategic-number sn-resource-control == battering-ram)
					(goal save-wood-goal 1)
				)
				(building-type-count siege-workshop > 0)
			)
		)
	)
=>
	(set-goal increase-town-size-goal 0)
)
#end-if; NOT WONDER-RACE
(defrule
	(goal increase-town-size-goal 0)
	(strategic-number sn-current-age == feudal)
	(or
		(building-type-count-total barracks == 0); no rax => market+bs start
		(or
			(and
				(goal strategy-goal rush); fail save for maps with a rax at start
				(civ-selected saracen); use saracen market advantage
			)
			(or
				(goal strategy-goal sling)
				(strategic-number sn-resource-control == sling)
			)
		)
	)
	(building-type-count-total market < 1)
	(wood-amount >= 175)
=>
	(set-goal increase-town-size-goal market)
	(enable-timer increase-town-size-timer 3)
)
(defrule
	(goal increase-town-size-goal market)
	(or
		(or
			(building-type-count-total market > 0)
			(wood-amount < 175)
		)
		(or
			(or
				(strategic-number sn-current-age == fc-transit)
				(strategic-number sn-resource-control == 3)
			)
			(strategic-number sn-resource-control == ri-elite-skirmisher)
		)
	)
=>
	(set-goal increase-town-size-goal 0)
	(chat-local-to-self "market placed/or aborted")
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(current-age == imperial-age)
	(current-age-time > 120)
	(current-age-time < 300)
	(building-type-count-total blacksmith < 2)
	(can-afford-building blacksmith)
=>
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal blacksmith)
)
#end-if
(defrule
	(game-time > 60)
	(goal increase-town-size-goal 0)
	(food-amount > 550)
	(nand
		(goal strategy-goal sling)
		(current-age-time < 600)
	)
	(building-type-count town-center > 0)
	(or 
		(or
			(building-type-count-total stable > 0)
			(building-type-count-total archery-range > 0)
		)
		(building-type-count-total market > 0)
	)
	(building-type-count-total blacksmith < number-blacksmiths)
	(can-afford-building blacksmith)
=>
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal blacksmith)
)
(defrule
	(game-time > 60)
	(goal strategy-goal flush)
	(goal increase-town-size-goal 0)
	(or
		(and
			(building-type-count-total archery-range > 0)
			(or
				(building-type-count-total stable > 0)
				(research-completed ri-man-at-arms)
			)
		)
		(building-type-count-total archery-range > 1)
	)
	(building-type-count-total mining-camp > 0)
	(building-type-count-total blacksmith < 1)
	(can-afford-building blacksmith)
=>
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal blacksmith)
)
(defrule
	(civilian-population >= 15)
	(building-type-count-total market > 0)
	(goal increase-town-size-goal blacksmith)
	(building-type-count town-center > 0)
	(can-build blacksmith)
=>
	(build blacksmith)
	(set-goal increase-town-size-goal 2)
)
#end-if
(defrule
	(civilian-population >= 15)
	(goal increase-town-size-goal monastery)
	(can-build monastery)
=>
	(build monastery)
	(set-goal increase-town-size-goal 2)
)

(defrule
	(civilian-population >= 15)
	(goal increase-town-size-goal market)
	(building-type-count-total market < 1)
	(can-build-with-escrow market)
=>
	(release-escrow wood)
	(build market)
	(set-goal increase-town-size-goal 2)
)
(defrule
	(civilian-population >= 15)
	(building-type-count-total market > 0)
	(goal increase-town-size-goal stable)
	(can-build stable)
=>
	(build stable)
	(set-goal increase-town-size-goal 2)
)
(defrule
	(civilian-population >= 15)
	(goal increase-town-size-goal barracks)
	(can-build barracks)
=>
	(build barracks)
	(set-goal increase-town-size-goal 2)
)
(defrule
	(civilian-population >= 15)
	(building-type-count-total market > 0)
	(goal increase-town-size-goal archery-range)
	(can-build archery-range)
=>
	(build archery-range)
	(set-goal increase-town-size-goal 2)
)
#load-if-defined DEATH-MATCH
(defrule
	(game-time > 60)
=>
	(set-strategic-number sn-maximum-town-size 12)
	(disable-self)
)
(defrule
	(game-time > 120)
=>
	(set-strategic-number sn-maximum-town-size 14)
	(disable-self)
)
#load-if-not-defined FEUDAL-AGE-START
(defrule
	(current-age == feudal-age)
	(current-age-time > 20)
=>
	(set-strategic-number sn-maximum-town-size 14)
)
(defrule
	(current-age == feudal-age)
	(current-age-time > 90)
=>
	(set-strategic-number sn-maximum-town-size 16)
)
(defrule
	(current-age == feudal-age)
	(current-age-time > 180)
=>
	(set-strategic-number sn-maximum-town-size 20)
)
#end-if
#end-if
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(current-age >= castle-age)
	(or
		(or
			(building-type-count-total town-center >= tc-level-four)
			(and
				(building-type-count-total monastery > 0)
				(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
			)
		)
		(or
			(unit-type-count-total villager >= 90)
			(unit-type-count-total villager >= up-max-civ)
		)		
	)
	(can-afford-building university)
	(building-type-count-total university == 0)
	(goal increase-town-size-goal 0)
=>
	(set-goal increase-town-size-goal university)
	(enable-timer increase-town-size-timer 3)
)
#load-if-not-defined TURKISH-CIV
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal unit-goal gunpowder-units)
	(can-afford-building university)
	(building-type-count-total university == 0)
	(goal increase-town-size-goal 0)
=>
	(set-goal increase-town-size-goal university)
	(enable-timer increase-town-size-timer 3)
)
#end-if
(defrule
	(or
		(or 
			(building-type-count-total university > 0)
			(not (can-afford-building university))
		)
		(or
			(goal save-wood-goal 1)
			(and
				(and
					(strategic-number sn-minimum-boar-hunt-group-size != 5)
					(goal strategy-goal boom)
				)
				(building-type-count-total town-center < tc-level-five)
			)
		)
	)
	(goal increase-town-size-goal university)
=>
	(set-goal increase-town-size-goal 0)
)
(defrule
	(goal increase-town-size-goal university)
	(building-type-count-total university < 1)
	(can-build university)
=>
	(build university)
	(set-goal increase-town-size-goal 2)
)
#end-if ; not PIDM
;********** UNITS **********
(defrule
	(strategic-number sn-number-explore-groups > 1)
	(players-building-count every-enemy > 0)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(disable-self)
)

; *** NAVY ***
#load-if-not-defined RIVERS-MAP
#load-if-not-defined BALTIC-MAP
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(can-train transport-ship)
	(players-unit-type-count every-enemy fire-ship-line < 15)
	(players-unit-type-count every-enemy galley-line < 15)
	(strategic-number sn-resource-control != 2)
	(current-age == imperial-age)
	(unit-type-count transport-ship < 3)
	(warboat-count > 40)
	(soldier-count > 20)
=>
	(train transport-ship)
)
#end-if
#end-if
#load-if-defined KOREAN-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(can-train turtle-ship-line)
	(or
		(unit-type-count turtle-ship-line < 12)
		(can-research ri-elite-turtle-ship)
	)
=>
	(research ri-elite-turtle-ship)
	(train turtle-ship-line)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(can-train cannon-galleon-line)
	(warboat-count >= 20)
	(or
		(unit-type-count cannon-galleon-line < 8)
		(warboat-count >= 50)
	)
	(unit-type-count cannon-galleon-line < 16)
=>
	(train cannon-galleon-line)
)
#load-if-defined VIKING-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock > water-mixed)
	(or
		(and
			(research-completed ri-elite-longboat)
			(and
				(warboat-count < max-fleet)
				(can-train longboat-line)
			)
		)
		(can-research-with-escrow ri-elite-longboat)
	)
=>
	(research ri-elite-longboat)
	(train longboat-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 2)
	(unit-type-count fire-ship-line < 6)
	(or
		(current-age == castle-age)
		(research-completed ri-fast-fire-ship)
	)
	(goal enemy-boats-goal 1)
	(or
		(or
			(warboat-count < 15)
			(unit-type-count fire-ship-line < 6)
		)
		(and
			(civ-selected aztec)
			(warboat-count < 25)
		)
	)
	(can-train fire-ship-line)
=>
	(train fire-ship-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(strategic-number sn-resource-control < 2)
	(or
		(current-age == castle-age)
		(research-completed ri-fast-fire-ship)
	)
	(unit-type-count fire-ship-line < 24)
	(warboat-count < max-fleet)
	(can-train fire-ship-line)
=>
	(train fire-ship-line)
)
(defrule
	(strategic-number sn-resource-control < 2)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(research-completed ri-war-galley)
	(warboat-count < max-fleet)
	(can-train galley-line)
=>
	(train galley-line)
)
(defrule
	(strategic-number sn-resource-control < 2)
	(or
		(goal strategy-goal flush)
		(current-age > feudal-age)
	)
	(nor 
		(research-available ri-war-galley)
		(research-available ri-galleon)
	)
	(or
		(and
			(goal enemy-boats-goal 1)
			(warboat-count < max-warships)
		)
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	)
	(warboat-count < max-fleet)
	(can-train galley-line)
=>
	(train galley-line)
)

; counter units

#load-if-not-defined TEUTONIC-CIV
(defrule
	(or
		(and
			(strategic-number sn-resource-control <= 2)
			(or
				(strategic-number sn-resource-control < 1)
				(unit-type-count scout-cavalry-line < 6)
			)
		)
		(strategic-number sn-resource-control == ri-heresy)
	)
	(or
		(food-amount > 200)
		(unit-type-count scout-cavalry-line < 6)
	)
	(goal monk-threat-goal 1)
	(not (research-available ri-light-cavalry))
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#else
(defrule
	(nand
		(game-time > 1800)
		(players-unit-type-count every-enemy monk < 10)
	)
	(or
		(and
			(food-amount > 200)
			(strategic-number sn-resource-control < 2)
		)
		(unit-type-count scout-cavalry-line < 6)
	)
	(goal monk-threat-goal 1)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal rush)
	(goal unit-goal scout-cavalry)
	(nor
		(research-available ri-double-bit-axe)
		(research-available ri-horse-collar)
	)
	(unit-type-count scout-cavalry-line < 5)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#load-if-defined ITALIAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(and
			(unit-type-count my-unique-unit-line < 20)
			(strategic-number sn-cavalry-threat >= 1)
		)
		(research-completed my-unique-unit-upgrade); Italians
	)
	(gold-amount > 100)
	(can-train genoese-crossbowman)
=>
	(train genoese-crossbowman)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal rush); when using fast castle strategy
	(unit-type-count spearman-line < 4)
	(strategic-number sn-current-age == fc-transit)
	(players-current-age every-enemy == castle-age)
	(players-current-age-time every-enemy >= 60); enemy at least 60s ahead of us in castle age
	(goal enemy-goal rush); possible enemy krush
	(goal meso-enemy-goal -1)
	(can-train spearman-line); make spearman so enemy won't raid us with knights
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush); when using fast castle strategy
	(unit-type-count spearman-line < 4)
	(goal unit-goal my-unique-unit-line)
	(not (research-available ri-stone-mining))
	(goal enemy-goal rush); possible enemy krush
	(building-type-count castle == 0); castle not yet finished
	(goal meso-enemy-goal -1)
	(can-train spearman-line); make spearman so enemy won't raid us with knights
=>
	(train spearman-line)
)
#load-if-not-defined SARACEN-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined INDIAN-CIV
(defconst extra-anti-cav-unit spearman-line)
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#load-if-defined POST-IMPERIAL-AGE-START
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat >= 1)
	(or
		(players-unit-type-count any-enemy paladin > 0)
		(and
			(players-unit-type-count any-enemy camel-line > 10)
			(players-civ any-enemy saracen)
		)
	)
	(research-completed ri-halberdier)
	(unit-type-count extra-anti-cav-unit < 40)
	(can-train extra-anti-cav-unit)
=>
	(train extra-anti-cav-unit)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(or
			(goal unit-goal knight)
			(research-completed ri-imperial-camel)
		)
		(unit-type-count camel-line < 12)
	)
	(can-train camel-line)
=>
	(train camel-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(building-type-count-total archery-range > 0)
	(strategic-number sn-cavalry-threat >= 1)
	(or
		(current-age == feudal-age)
		(research-completed ri-pikeman)
	)
	(unit-type-count spearman-line < 20)
	(unit-type-count camel-line < 12)
	(can-train spearman-line)
	(unit-type-count villager > 30); or we never make it anywhere if we lose villagers to knights
		
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-paladin)
	(or
		(or
			(and
				(players-unit-type-count every-enemy spearman-line < 25)
				(players-unit-type-count every-enemy camel-line < 20)
			)
			(and
				(civ-selected celtic)
				(gold-amount > 2000)
			)
		)
		(or
			(strategic-number sn-archer-threat > 1)
			(players-unit-type-count any-enemy scorpion-line > 10)
		)
	)
	(can-train knight-line)
=>
	(train knight-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count my-unique-unit-line < 20)
	(strategic-number sn-infantry-threat >= 1)
	(or
		(gold-amount > 100)
		(research-completed my-unique-unit-upgrade); Indians
	)
	(or
		(or 
			(civ-selected aztec)
			(civ-selected byzantine)
		)
		(or 
			(civ-selected spanish)
			(research-completed ri-elite-teutonic-knight)
		)
	)
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(can-train my-unique-unit-line)
	(unit-type-count my-unique-unit-line < 12)
	(goal enemy-goal eagle-warrior)
	(or
		(or 
			(civ-selected aztec)
			(civ-selected byzantine)
		)
		(or 
			(civ-selected japanese)
			(civ-selected teutonic)
		)
	)
=>
	(train my-unique-unit-line)
)
#load-if-defined INCAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(unit-type-count villager > 75)
		(food-amount >= unique-unit-food)
	)
	(or
		(gold-amount > 100)
		(current-age == castle-age)
	)
	(or
		(unit-type-count my-unique-unit-line < 20)
		(or
			(strategic-number sn-cavalry-threat > 1)
			(unit-type-count-total archer-line > 15)
		)
	)
	(can-train kamayuk)
=>
	(train kamayuk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count slinger < 20)
	(strategic-number sn-infantry-threat > 1)
	(or
		(gold-amount > 100)
		(current-age == castle-age)
	)
	(or
		(not (research-completed ri-elite-kamayuk))
		(unit-type-count kamayuk > 25)
	)
	(can-train slinger)
=>
	(train slinger)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count condottiero < 12)
	(players-unit-type-count any-enemy hand-cannoneer > 6)
	(gold-amount > 70)
	(or
		(unit-type-count teutonic-knight-line > high-min-number-upgrade)
		(civ-selected gothic)
	)
	(can-train condottiero)
=>
	(train condottiero)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(unit-type-count hand-cannoneer < 30)
	(or
		(goal unit-goal gunpowder-units)
		(and
			(goal ranged-unit-type-goal gunpowder-units)
			(or
				(unit-type-count hand-cannoneer < 15)
				(death-match-game)
			)
		)
	)
	(gold-amount > 100)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(military-population > 30)
	(unit-type-count bombard-cannon < 3)
;(goal unit-goal gunpowder-units)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(nand
		(or
			(civ-selected teutonic)
			(civ-selected byzantine)
		)
		(building-type-count castle > 0)
	)
	(unit-type-count hand-cannoneer < 20)
	(or
		(strategic-number sn-infantry-threat >= 1)
		(players-unit-type-count any-enemy huskarl-line > 4)
	)
	(gold-amount > 150)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-long-swordsman)
	(goal enemy-goal eagle-warrior)
	(unit-type-count militiaman-line < 12)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(can-train my-unique-unit-line)
	(or
		(current-age == castle-age)
		(gold-amount > 120)
	)
	(or
		(or
			(civ-selected mongol)
			(civ-selected briton)
		)
		(and
			(strategic-number sn-archer-threat >= 1)
			(civ-selected gothic)
		)
	)
=>
	(train my-unique-unit-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat > 0)
	(or
		(game-time < 900); in DM
		(strategic-number sn-cavalry-threat > 2)
	)		
	(can-train camel-line)
	(gold-amount > 250)
	(or
		(unit-type-count camel-line < 16)
		(strategic-number sn-cavalry-threat > 3)
	)
	(or
		(unit-type-count camel-line < 24)
		(game-time < 600)
	)
=>
	(train camel-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(game-time < 900)
	(can-train camel-line)
	(players-civ any-enemy hun)
	(gold-amount > 250)
=>
	(train camel-line)
)
#load-if-not-defined TURKISH-CIV
#load-if-not-defined POPULATION-CAP-25
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(current-age >= castle-age)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat >= 1)
	(food-amount >= 85)
	(nand
		(building-type-count-total town-center == 1)
		(and
			(goal unit-goal knight)
			(research-available ri-pikeman)
		)
	)
	(or
		(unit-type-count spearman-line < 10)
		(research-completed ri-pikeman)
	)
	(unit-type-count camel-line < 12); don't overdo anti cavalry
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(not (player-in-game 3))
	(current-age >= castle-age)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat > 1)
	(strategic-number sn-military-level < 0)
	(or
		(unit-type-count spearman-line < 10)
		(research-completed ri-pikeman)
	)
	(unit-type-count spearman-line < 18)
	(unit-type-count camel-line < 12)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat >= 1)
	(or
		(food-amount >= 85)
		(unit-type-count spearman-line < 6)
	)
	(or
		(or
			(goal unit-goal archer); ranged units are weak vs cavalry
			(goal unit-goal ss)
		)
		(strategic-number sn-military-level >= 1); or try to reach lvl2 and attack
	)
	(unit-type-count spearman-line < 15)
	(unit-type-count camel-line < 12)
	(research-completed ri-pikeman)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#else
(defrule
	(current-age >= castle-age)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat >= 1)
	(food-amount >= 85)
	(or
		(current-age-time > 420)
		(goal unit-goal archer)
	)
	(or
		(unit-type-count spearman-line < 8)
		(research-completed ri-pikeman)
	)
	(or
		(unit-type-count spearman-line < 15)
		(gold-amount < 200)
	)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
#else
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-cavalry-threat >= 1)
	(food-amount >= 85)
	(research-completed ri-pikeman)
	(unit-type-count spearman-line < 4)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
#else
(defrule
	(strategic-number sn-resource-control < 1)
	(can-train camel-line)
	(or
		(strategic-number sn-cavalry-threat >= 1)
		(players-unit-type-count any-enemy cavalry-archer-line >= 15)
	)
	(gold-amount > 100)
=>
	(train camel-line)
)
#end-if
#load-if-defined BYZANTINE-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(goal unit-goal knight)
	(or
		(or
			(players-unit-type-count any-enemy knight-line >= 5); in RM train camels vs mass knights
			(or
				(players-unit-type-count any-enemy scout-cavalry-line >= 5); or vs scouts + ca
				(players-unit-type-count any-enemy cavalry-archer-line >= 15)
			)
		)
		(or
			(strategic-number sn-cavalry-threat >= 1)
			(unit-type-count camel-line < 8)
		)
	)
	(can-train camel-line)
=>
	(train camel-line)
)
#end-if
#load-if-not-defined UP-MULTIPLE-ENEMIES
(defrule
	(current-age >= castle-age)
	(strategic-number sn-resource-control == 2)
;	(strategic-number sn-cavalry-threat >= 1)
	(research-completed ri-pikeman)
	(wood-amount > 400); gold shortage while getting imperial researches
	(food-amount > 400); so keep slots filled
	(gold-amount < 200); with non-gold units
	(population < del-civ-pop)
	(nand
		(research-completed ri-bracer)
		(unit-type-count spearman-line > 40)
	)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-pikeman)
	(gold-amount < 50)
	(food-amount > 200)
	(wood-amount > 200)
	(or
		(or
			(civ-selected aztec)
			(civ-selected viking)
		)
		(research-completed ri-halberdier)
	)
	(unit-type-count spearman-line < 20)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(or
			(civ-selected turkish)
			(civ-selected indian)
		)
	)
	(or
		(or
			(strategic-number sn-cavalry-threat >= 1)
			(players-unit-type-count any-enemy cavalry-archer-line >= 15)
		)
		(civ-selected indian)
	)
	(can-research ri-heavy-camel)
	(unit-type-count camel-line > mid-min-number-upgrade)
=>
	(research ri-heavy-camel)
)
(defrule
	(strategic-number sn-resource-control < 1) ; anticipate knight defense
	(goal unit-goal eagle-warrior); so better make some spears and spend our gold to collect relics
	(goal enemy-goal rush)
	(or 
		(or 
			(players-civ any-enemy hun)
			(players-civ any-enemy frankish)
		)
		(or 
			(players-civ any-enemy teutonic)
			(players-civ any-enemy viking)
		)
	)
	(unit-type-count-total monk == 0)
	(building-type-count-total monastery > 0)
	(unit-type-count spearman-line < 5)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-elite-eagle)
	(or
		(current-age-time < 300)
		(gold-amount > 114)
	)
	(nor
		(players-unit-type-count any-enemy teutonic-knight-line > 11)
		(players-unit-type-count any-enemy militiaman-line > 19)
	)
	(can-train eagle-warrior-line)
	=>
	(train eagle-warrior-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(nand 
		(goal train-civ-goal ri-chain-mail)
		(gold-amount < 160)
	)
	(or
		(food-amount >= 52); one food drop left to train next villager
		(or
			(town-under-attack)
			(and
				(goal control-goal aggressive-rush)
				(current-age-time < 240)
			)
		)
	)
	(goal unit-goal eagle-warrior)
	(goal strategy-goal rush)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
(defrule
	(current-age == castle-age)
	(strategic-number sn-resource-control < 1)
	(or
		(gold-amount > 120)
		(strategic-number sn-military-level < 0)
	)
	(food-amount >= 52)
	(goal unit-goal mix)
	(goal strategy-goal rush)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
(defrule
	(current-age == castle-age)
	(strategic-number sn-resource-control < 1)
	(or
		(gold-amount > 140)
		(and
			(strategic-number sn-military-level < 0)
			(unit-type-count-total monk > 0)
		)
	)
	(food-amount >= 55); one food drop left to train next villager
	(goal unit-goal my-unique-unit-line)
	(goal strategy-goal rush)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
#load-if-defined MAYAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(players-unit-type-count any-enemy huskarl-line > 3)
	(or
		(players-unit-type-count any-enemy militiaman-line < 12)
		(or
			(unit-type-count archer-line > 12)
			(unit-type-count plumed-archer-line > 12)
		)
	)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(gold-amount > 300)
		(and
			(or 
				(gold-amount > 150)
				(current-age == castle-age)
			)
			(and
				(or
					(and
						(players-unit-type-count any-enemy skirmisher-line > 5)
						(building-type-count siege-workshop == 0)
					)
					(players-unit-type-count any-enemy monk > 5)
				)
				(unit-type-count eagle-warrior < 15)
			)
		)
	)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-archer-threat >= 2)
	(or
		(gold-amount > 220)
		(and
			(or
				(strategic-number sn-cavalry-threat == 0)
				(or
					(unit-type-count camel-line > 20)
					(unit-type-count spearman-line > 30)
				)
			)
			(players-unit-type-count every-enemy eagle-warrior-line < 10)
		)
	)
	(research-completed ri-heavy-scorpion)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(current-age == feudal-age)
	(or
		(and
			(strategic-number sn-current-age == fc-transit)
			(goal control-goal aggressive-rush)
		)
		(and
			(building-type-count-total blacksmith > 0)
			(gold-amount > 245)
		)
	)
	(goal unit-goal archer)
	(can-train archer-line)
=>
	(train archer-line)
)
#load-if-not-defined SARACEN-CIV
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(and 
			(or
				(or
					(strategic-number sn-resource-control == ri-pikeman)
					(strategic-number sn-resource-control == ri-bodkin-arrow)
				)
				(strategic-number sn-resource-control == ri-crossbow)
			)
			(gold-amount >= 145); don't stop producing archers if we need only food for our research
		)
	)
	(strategic-number sn-current-age >= fc-transit)
	(game-time < 1800)
	(goal unit-goal archer)
	(goal strategy-goal rush)
	(can-train archer-line)
=>
	(train archer-line)
)
#else
(defrule
	(strategic-number sn-resource-control < 1); buy food instead if with saracen
	(strategic-number sn-current-age >= fc-transit)
	(game-time < 1800)
	(goal unit-goal archer)
	(goal strategy-goal rush)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-crossbow)
	(goal ranged-unit-type-goal archer)
	(nor (can-train longbowman-line)
	(can-train plumed-archer-line))
	(nor (can-train war-wagon-line)
	(goal strategy-goal boom))
	(gold-amount > 120)
	(can-train archer-line)
=>
	(train archer-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(wood-amount > 100)
	(gold-amount >= 145)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(game-time < 1800)
		(civ-selected viking)
	)
	(goal ranged-unit-type-goal archer)
	(goal strategy-goal boom)
	(can-train archer-line)
=>
	(train archer-line)
)
#load-if-defined MAGYAR-CIV
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(and
			(research-available imperial-age)
			(and
				(food-amount > 1070)
				(gold-amount < 700)
			)
		)
	)
	(food-amount > 150)
	(can-train magyar-huszar)
=>
	(train magyar-huszar)
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(current-age == castle-age)
		(gold-amount > 120)
	)
	(or
		(unit-type-count villager > 75)
		(food-amount >= unique-unit-food)
	)
	(can-train boyar)
=>
	(train boyar)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age == fc-transit)
	(goal strategy-goal flush)
	(wood-amount > 200)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(research-completed ri-pikeman)
	(research-available imperial-age)
	(population < max-civ-pop)
	(or
		(food-amount > imp-food)
		(gold-amount < 300)
	)
	(food-amount > 400)
	(gold-amount < imp-gold)
	(wood-amount >= 100)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(research-completed ri-elite-skirmisher)
	(research-available imperial-age)
	(population < max-civ-pop)
	(or
		(food-amount > imp-food)
		(gold-amount < 300)
	)
	(food-amount > 400)
	(gold-amount < imp-gold)
	(wood-amount >= 100)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined BRITON-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(goal unit-goal my-unique-unit-line)
	(goal strategy-goal rush)
	(strategic-number sn-current-age == castle)
	(unit-type-count knight-line < 12)
	(can-train knight-line)
=>
	(train knight-line)
)
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(and
			(goal unit-goal cavalry-archer)
			(research-completed ri-bloodlines)
		)
		(goal unit-goal mix)
	)
	(or
		(building-type-count-total archery-range < 6)
		(goal enemy-goal eagle-warrior)
	)
	(goal strategy-goal rush)
	(current-age == castle-age)
	(unit-type-count knight-line < 12)
	(can-train knight-line)
=>
	(train knight-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal unit-goal ss)
	(or
		(players-unit-type-count any-enemy eagle-warrior-line > 5)
		(strategic-number sn-military-level >= 2)
	)
	(nand
		(civ-selected byzantine)
		(building-type-count castle > 0)
	)
	(goal strategy-goal rush)
	(current-age == castle-age)
	(unit-type-count knight-line < 12)
	(can-train knight-line)
=>
	(train knight-line)
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-resource-control < 1)
	(goal unit-goal archer)
	(game-time < 1800)
	(or
		(goal enemy-goal eagle-warrior)
		(or
			(not (goal enemy-goal flush))
			(or
				(players-building-type-count any-enemy market > 0)
				(players-building-type-count any-enemy barracks > 1)
			)
		)
	)
	(unit-type-count knight-line < 6)
	(can-train knight-line)
=>
	(train knight-line)
)
#end-if
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(and
			(goal strategy-goal flush)
			(current-age == castle-age)
		)
		(and	
			(research-completed ri-cavalier)
			(gold-amount > 150)
		)
	)
	(or
		(or
			(goal anti-cavalry-threat-goal 0)
			(military-population < 30)
		)
		(death-match-game)
	)
	(can-train knight-line)
=>
	(train knight-line)
)
#else
#load-if-not-defined SLAVIC-CIV
#load-if-not-defined GOTHIC-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-cavalier)
	(or 
		(research-completed ri-bloodlines)
		(research-completed ri-paladin)
	)
	(or
		(goal anti-cavalry-threat-goal 0)
		(or
			(game-time < 480)
			(and
				(civ-selected hun)
				(death-match-game)
			)
		)
	)
	(can-train knight-line)
=>
	(train knight-line)
)
#end-if
#end-if
(defrule
	(game-time < 240)
	(can-train monk)
=>
	(train monk)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(goal unit-goal knight)
		(and
			(research-completed ri-paladin)
			(players-unit-type-count every-enemy spearman-line < 25)
		)
	)
	(or
		(current-age == castle-age)
		(gold-amount > 100)
	)
	(can-train knight-line)
=>
	(train knight-line)
)
; balance resources
#load-if-defined ITALIAN-CIV
(defrule
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-resource-control != ri-heresy)
	(gold-amount > 250)
	(food-amount < 200)
	(or
		(food-amount < 80)
		(gold-amount > 400)
	)
	(can-train genoese-crossbowman); same rule as below, because my-uu-line doesn't work with aofe uu
=>
	(train genoese-crossbowman)
)
#end-if
#load-if-not-defined INCAN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined SLAVIC-CIV
#load-if-not-defined AZTEC-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined SPANISH-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined VIKING-CIV
#load-if-not-defined BYZANTINE-CIV
(defrule
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-resource-control != ri-heresy)
	(gold-amount > 250)
	(food-amount < 200)
	(or
		(food-amount < 80)
		(gold-amount > 400)
	)
	(can-train my-unique-unit-line); ranged uu
=>
	(train my-unique-unit-line)
)
#end-if
(defrule
	(current-age >= castle-age)
	(or
		(and
			(and
				(or
					(civ-selected briton)
					(civ-selected mayan)
				)
				(goal unit-goal my-unique-unit-line)
			)
			(goal strategy-goal rush)
		)
		(building-type-count castle >= 2)
	)
=>
	(set-goal ranged-unit-type-goal -1)
	(set-goal uu-up-goal 1)
	(disable-self)
)
(defrule
	(current-age >= castle-age)
	(goal unit-goal knight)
	(goal strategy-goal rush)
	(building-type-count castle > 0)
	(or
		(or
			(civ-selected mongol)
			(civ-selected chinese)
		)
		(civ-selected briton)
	)
=>
	(set-goal ranged-unit-type-goal -1)
	(set-goal uu-up-goal 1)
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-not-defined INCAN-CIV
#load-if-not-defined AZTEC-CIV
#load-if-not-defined BRITON-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined ITALIAN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(or
		(or
			(game-time > 2400)
			(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		)
		(or
			(goal strategy-goal boom)
			(goal control-goal shot)
		)
	)
	(nor 
		(goal ranged-unit-type-goal monk)
		(goal ranged-unit-type-goal gunpowder-units)
	)
=>
	(set-goal ranged-unit-type-goal 0)
)
#load-if-defined DEATH-MATCH
#load-if-not-defined TURKISH-CIV
(defrule
	(not (goal ranged-unit-type-goal 0))
=>
	(set-goal ranged-unit-type-goal 0)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal ranged-unit-type-goal cavalry-archer)
	(or
		(gold-amount > 125)
		(goal unit-goal cavalry-archer)
	)
	(or
		(gold-amount > 100)
		(and
			(goal control-goal aggressive-rush)
			(current-age == castle-age)
		)
	)
	(or
		(dropsite-min-distance wood < 4)
		(wood-amount > 140)
	)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)
#load-if-not-defined HUN-CIV
(defrule
	(strategic-number sn-resource-control != battering-ram)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-resource-control != ri-heresy)
	(research-completed ri-crossbow)
	(goal ranged-unit-type-goal archer)
	(wood-amount > 90)
	(gold-amount > 250)
	(food-amount < 200)
	(or
		(food-amount < 80)
		(gold-amount > 400)
	)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-resource-control != ri-heresy)
	(nor (can-train chu-ko-nu-line)
	(can-train mangudai-line))
	(goal ranged-unit-type-goal cavalry-archer)
	(wood-amount > 90)
	(gold-amount > 250)
	(or
		(food-amount < 200)
		(game-time < 720)
	)
	(or
		(food-amount < 80)
		(gold-amount > 400)
	)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)
(defrule
	(current-age >= castle-age)
	(strategic-number sn-resource-control < 1)
	(goal unit-goal militiaman-line)
	(goal strategy-goal rush)
	(not (research-available ri-long-swordsman))
	(unit-type-count militiaman-line < 15)
	(game-time < 1800); this strategy is currently only used that early against EW rush
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(food-amount > 100)
	(or 
		(and
			(and
				(current-age == castle-age)
				(research-completed ri-long-swordsman)
			)
			(unit-type-count militiaman-line < 30)
		)
		(and
			(research-completed ri-two-handed-swordsman)
			(gold-amount > 90)
		)
	)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
#load-if-defined GOTHIC-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(food-amount > 100)
	(gold-amount > 90)
	(can-train rax-husky-line)
=>
	(train rax-husky-line)
	(set-goal unit-goal my-unique-unit-line)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(can-train elephant-archer)
	(or
		(or
			(unit-type-count villager > 75)
			(goal train-civ-goal -1)
		)
		(food-amount >= unique-unit-food)
	)
	(or
		(current-age == castle-age)
		(gold-amount > 100)
	)
=>
	(train elephant-archer)
)
#end-if
#load-if-not-defined HUN-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(can-train my-unique-unit-line)
	(or
		(research-completed my-unique-unit-upgrade); Huns
		(or
			(goal unit-goal my-unique-unit-line)
			(goal control-goal my-unique-unit-line)
		)
	)
	(or
		(or
			(unit-type-count villager > 75)
			(goal train-civ-goal -1)
		)
		(food-amount >= unique-unit-food)
	)
	(or
		(current-age == castle-age)
		(gold-amount > 100)
	)
=>
	(train my-unique-unit-line)
)
#load-if-defined UP-AVAILABLE
(defrule
	(goal unit-goal my-unique-unit-line)
	(can-train my-unique-unit-line)	
	(or
		(and
			(unit-type-count-total my-unique-unit-line < 5)
			(civ-selected byzantine)
		)
		(civ-selected gothic)
	)
	(unit-type-count-total my-unique-unit-line < 12)
	(current-age == castle-age)
=>
	(train my-unique-unit-line)
)
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-champion)
	(food-amount > 100)
	(gold-amount > 200)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
; Flush
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(or
		(food-amount >= 130)
		(current-age-time < 120)
	)
	(current-age == feudal-age)
	(or
		(current-age-time < 480)
		(and
			(food-amount < 500)
			(players-military-population every-enemy < 8)
		)
	)
	(not (research-completed ri-man-at-arms))
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
(defrule
	(goal strategy-goal flush)
	(strategic-number sn-gold-gatherer-percentage > 10)
	(strategic-number sn-current-age == feudal)
	(or
		(and
			(food-amount < 600)
			(strategic-number sn-resource-control < 1)
		)
		(and
			(gold-amount >= 245)
			(strategic-number sn-resource-control <= 2)
		)
	)
	(can-train archer-line)
=>
	(train archer-line)
)
(defrule
	(current-age-time < 180)
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(players-building-type-count every-enemy stable == 0)
	(players-military-population any-enemy > 4)
	(or
		(military-population < 3)
		(players-military-population any-enemy > 8)
	)
	(military-population < 6)
	(strategic-number sn-current-age == feudal)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(or
		(strategic-number sn-gold-gatherer-percentage <= 10)
		(and
			(strategic-number sn-current-age == fc-transit)
			(goal ranged-unit-type-goal archer)
		)
	)
	(gold-amount >= 245)
	(can-train archer-line)
=>
	(train archer-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(wood-amount > 70);dont run out of stock while spaming skirmishers
	(food-amount > 74)
	(or
		(food-amount < 700)
		(and
			(food-amount >= 825)
			(building-type-count-total blacksmith > 0)
		)
	)
	(nand
		(research-completed ri-man-at-arms)
		(goal enemy-goal eagle-warrior)
	)
	(strategic-number sn-current-age == feudal)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(nand
		(research-completed ri-man-at-arms)
		(goal enemy-goal eagle-warrior)
	)
	(building-type-count-total blacksmith > 0); castle age advancement is already prepared
	(current-age == feudal-age); as no resource restriction on this rule
	(strategic-number sn-military-level < 0); use this only to catch up with enemy military
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(goal enemy-goal flush)
	(strategic-number sn-current-age == fc-transit)
	(strategic-number sn-military-level < 1)
	(wood-amount > 250)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(current-age == feudal-age)
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal flush)
	(research-completed ri-man-at-arms)
	(goal unit-goal militiaman-line)
	(or
		(goal enemy-goal eagle-warrior)
		(or 
			(current-age-time < 480)
			(and
				(strategic-number sn-current-age == fc-transit)
				(food-amount >= 260)
			)
		)
	)
	(food-amount > 100)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(current-age == dark-age)
	(goal unit-goal militiaman-line)
	(strategic-number sn-current-age == df-transit)
	(food-amount > 260)
	(nand
		(civ-selected gothic)
		(not (death-match-game))
	)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
(defrule
	(game-time < 900)
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(or
		(players-civ any-enemy hun)
		(players-civ any-enemy mongol)
	)
	(players-building-type-count every-enemy archery-range < 2)
	(unit-type-count spearman-line < 2)
	(not (goal unit-goal militiaman-line))
	(can-train spearman-line); make spearman fast so the flush won't die vs quick scouts.
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(unit-type-count spearman-line < 5)
	(or 
		(and
			(and
				(building-type-count-total archery-range > 0); archery-range not yet finished
				(building-type-count archery-range == 0)
			)
			(players-military-population any-enemy > 2); enemy is very fast
		)
		(goal enemy-goal rush)
	)
	(goal meso-enemy-goal -1)
	(can-train spearman-line); make spearman to keep up with military production
=>
	(train spearman-line)
)
#load-if-defined DIFFICULTY-HARDEST
(defrule
	(current-age == feudal-age)
	(nor
		(goal unit-goal militiaman-line)
		(goal control-goal militiaman-line)
	)
	(building-type-count-total archery-range > 0)
	(current-age-time < 90)
	(unit-type-count spearman-line < 4)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
#load-if-not-defined WONDER-RACE ;Wonderrace is too fast to make gold from relics
#load-if-not-defined UP-MICHI-STYLE
#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(goal train-civ-goal 1)
	(or
		(and
			(not (goal ranged-unit-type-goal monk))
			(research-completed ri-sanctity)
		)
		(unit-type-count monk < 6)
	)
	(food-amount < 150)
	(gold-amount > 200)
	(goal anti-monk-threat-goal 0)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(nand
		(goal unit-goal eagle-warrior)
		(strategic-number sn-cavalry-threat == 0)
	)
	(or
		(unit-type-count monk < 8)
		(and
			(food-amount < 600)
			(gold-amount > 750)
		)
	)
	(goal anti-monk-threat-goal 0)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= ci-transit)
	(gold-amount > 175)
	(or
		(players-unit-type-count every-enemy monk < 5)
		(research-completed ri-atonement)
	)
	(or
		(and
			(players-unit-type-count every-enemy mangonel-line == 0)
			(players-unit-type-count every-enemy scorpion-line < 5)
		)
		(research-completed ri-redemption)
	)
	(goal anti-monk-threat-goal 0)
	(can-train monk)
=>
	(train monk)
)
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(goal ranged-unit-type-goal monk)
	(unit-type-count monk < 6)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal ranged-unit-type-goal monk)
	(research-completed ri-sanctity)
	(or
		(unit-type-count-total monk < 12)
		(and
			(or
				(players-unit-type-count every-enemy monk < 5)
				(research-completed ri-atonement)
			)
			(or
				(and
					(players-unit-type-count every-enemy mangonel-line == 0)
					(players-unit-type-count every-enemy scorpion-line < 5)
				)
				(research-completed ri-redemption)
			)
		)
	)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal train-civ-goal 1)
	(or
		(research-completed ri-sanctity)
		(unit-type-count monk < 6)
	)
	(research-completed ri-pikeman)
	(goal anti-monk-threat-goal 0)
	(strategic-number sn-cavalry-threat >= 1)
	(or
		(goal unit-goal mix)
		(goal unit-goal ss)
	)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal train-civ-goal 1)
	(or
		(research-completed ri-sanctity)
		(unit-type-count monk < 6)
	)
	(food-amount < 100)
	(gold-amount > 300)
	(current-age == castle-age)
	(goal anti-monk-threat-goal 0)
	(strategic-number sn-cavalry-threat > 1)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(goal train-civ-goal 1)
	(or
		(research-completed ri-sanctity)
		(unit-type-count monk < 6)
	)
	(gold-amount > 200)
	(current-age == castle-age)
	(goal anti-monk-threat-goal 0)
	(strategic-number sn-cavalry-threat > 1)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(can-train monk)
=>
	(train monk)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(research-completed ri-theocracy)
	(research-completed ri-illumination)
	(gold-amount > 175)
	(can-train monk)
	(or 
		(civ-selected aztec)
		(players-unit-type-count every-enemy war-elephant-line > 4)
	)
	(goal anti-monk-threat-goal 0)
=>
	(train monk)
)
(defrule
	(player-resigned every-ally)
	(players-building-type-count every-ally market == 0)
	(or (unit-type-count trade-cart > 0)
	(unit-type-count trade-cog > 0))
=>
	(delete-unit trade-cart)
	(delete-unit trade-cog)
)
#end-if ;not WONDER-RACE
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(strategic-number sn-resource-control < 1)
	(food-amount > 200)
	(or
		(gold-amount < 100)
		(and
			(strategic-number sn-current-age >= ci-transit)
			(population < max-civ-pop)
		)
	)
	(research-completed ri-light-cavalry)
	(nor
		(and
			(not (research-completed ri-bloodlines))
			(goal anti-cavalry-threat-goal 1)
		)
		(can-train magyar-huszar)
	)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(research-completed ri-light-cavalry)
	(research-available imperial-age)
	(not (can-train magyar-huszar))
	(food-amount > 1070)
	(gold-amount < 700)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#else
(defrule
	(strategic-number sn-resource-control < 1)
	(population < seventy-five-percent-pop)
	(gold-amount > 1000)
	(research-completed ri-cavalier)
	(can-train knight-line)
=>
	(train knight-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(food-amount > 400)
	(gold-amount < 100)
	(not (can-train magyar-huszar))
	(research-completed ri-light-cavalry)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if
#load-if-not-defined TURKISH-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(unit-type-count skirmisher-line < 20)
	(strategic-number sn-archer-threat >= 1)
	(or 
		(research-completed ri-elite-skirmisher)
		(unit-type-count skirmisher-line < 7)
	)
	(nand
		(gold-amount > 400)
		(unit-type-count trade-cart > 20)
	)
	(current-age >= castle-age)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
#load-if-not-defined UP-MICHI-STYLE
#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush); when using fast castle strategy
	(goal unit-goal my-unique-unit-line)
	(nor (research-available ri-stone-mining)
	(research-available ri-horse-collar))
	(building-type-count castle == 0); castle not yet finished
	(wood-amount >= 175); save wood for monastery
	(unit-type-count skirmisher < 3)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#else
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush); when using fast castle strategy
	(goal unit-goal my-unique-unit-line)
	(nor (goal ranged-unit-type-goal archer)
	(research-available ri-stone-mining))
	(building-type-count castle == 0); castle not yet finished
	(or
		(military-population < 5)
		(players-military-population any-enemy > 6)
	)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush); when using fast castle strategy
	(or
		(and
			(gold-amount >= 145)
			(wood-amount >= 100)
		)
		(players-unit-type-count any-enemy militiaman-line > 0)
	)
	(goal ranged-unit-type-goal archer)
	(or
		(goal unit-goal my-unique-unit-line)
		(goal unit-goal mix)
	)
	(building-type-count castle == 0); castle not yet finished
	(military-population < 8)
	(can-train archer-line)
=>
	(train archer-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(gold-amount < 750)
	(research-completed ri-elite-skirmisher)
	(or
		(and
			(research-available my-unique-research)
			(civ-selected aztec)
		)
		(research-available ri-hussar)
	)
	(wood-amount > 250)
	(food-amount > 500)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control <= 2)
	(unit-type-count spearman-line > 14)
	(research-available ri-halberdier)
	(nor 
		(research-available ri-blast-furnace)
		(research-available ri-bracer)
	)
	(nor
		(research-available ri-plate-mail)
		(research-available ri-plate-barding)
	)
	(research-completed ri-chemistry)
	(wood-amount > 250)
	(food-amount > 350)
	(gold-amount < 600)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(game-time < 1320)
	(unit-type-count spearman-line < 4)
	(goal strategy-goal rush)
	(goal unit-goal ss)
	(goal enemy-goal rush)	
	(goal meso-enemy-goal -1)
	(can-train spearman-line); make spearman so enemy won't raid us with knights
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(game-time < 1800)
		(strategic-number sn-current-age >= ci-transit)
	)
	(strategic-number sn-resource-control < 1)
	(building-type-count-total town-center >= tc-level-two)
	(goal unit-goal ss)
	(wood-amount > 115)
	(food-amount > 85)
	(goal strategy-goal rush)
	(unit-type-count spearman-line < 10)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#load-if-not-defined AZTEC-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(military-population < 4)		
		(building-type-count-total monastery > 0)
	)
	(goal strategy-goal rush)
	(or
		(goal unit-goal mix)
		(goal unit-goal ss)
	)
	(food-amount > 90)
	(wood-amount > 95)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(strategic-number sn-current-age == fc-transit)
		(and
			(gold-amount > 145)
			(building-type-count-total monastery > 0)
		)
	)
	(wood-amount > 85)
	(goal strategy-goal rush)
	(goal ranged-unit-type-goal archer)
	(goal unit-goal ss)
	(can-train archer-line)
=>
	(train archer-line)
)
(defrule
	(current-age == castle-age)
	(current-age-time < 400)
	(strategic-number sn-resource-control < 1)
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(nor 
		(research-available ri-crossbow)
		(goal enemy-goal flush)
	)
	(or
		(or
			(players-civ any-enemy frankish)
			(players-civ any-enemy persian)
		)
		(players-civ any-enemy hun)
	)
	(unit-type-count spearman-line < 8)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control != battering-ram)
	(strategic-number sn-archer-threat >= 1)
	(unit-type-count scorpion-line < 5)
	(food-amount < 50)
	(strategic-number sn-military-level < 0)
	(goal under-attack-goal 1)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
(defrule
	(current-age == castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-resource-control != battering-ram)
	(strategic-number sn-archer-threat > 1)
	(unit-type-count scorpion-line < 8)
	(or
		(goal unit-goal eagle-warrior)
		(goal unit-goal monk)
	)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#load-if-defined UP-AVAILABLE
#load-if-defined TEUTONIC-CIV
(defrule
	(goal unit-goal my-unique-unit-line)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-archer-threat >= 1)
	(unit-type-count scorpion-line < 10)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if
#end-if
#load-if-not-defined CHINESE-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined BRITON-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined AZTEC-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(players-unit-type-count any-enemy spearman-line > 20)
	(unit-type-count scorpion-line < 15)
	(unit-type-count cavalry-units > 20)
	(research-completed ri-heavy-scorpion)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-archer-threat >= 1)
	(unit-type-count scorpion-line < 12)
	(or
		(and
			(gold-amount > 150)
			(food-amount < 75)
		)
		(civ-selected turkish)
	)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#load-if-not-defined SLAVIC-CIV
#load-if-not-defined CELTIC-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(nor (goal strategy-goal fast-imp)
	(goal unit-goal default-ranged))
	(strategic-number sn-resource-control < 1)
	(can-train scorpion-line)
	(unit-type-count scorpion-line < 12)
	(wood-amount > 400); excess wood and gold
	(gold-amount > 300)
	(food-amount < 200)
=>
	(train scorpion-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(not (research-completed ri-elite-skirmisher))
	(goal unit-goal monk)
	(strategic-number sn-resource-control < 1)
	(can-train scorpion-line)
	(strategic-number sn-archer-threat >= 1)
	(unit-type-count scorpion-line < 6)
	(wood-amount > 200)
=>
	(train scorpion-line)
)
#else
(defrule
	(or
		(strategic-number sn-resource-control < 1)
		(and
			(strategic-number sn-resource-control == 2)
			(and
				(food-amount < 100)
				(population < del-civ-pop)
			)
		)
	)
	(can-train scorpion-line)
	(gold-amount > scorpion-gold-min)
=>
	(train scorpion-line)
)
#end-if
#else
(defrule
	(nand
		(unit-type-count monk > 15)
		(unit-type-count battering-ram-line == 0)
	)
	(or
		(strategic-number sn-resource-control < 1)
		(and
			(strategic-number sn-resource-control == 2)
			(and
				(food-amount < 100)
				(population < del-civ-pop)
			)
		)
	)
	(can-train scorpion-line)
	(gold-amount > scorpion-gold-min)
=>
	(train scorpion-line)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-defined BYZANTINE-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-resource-control < 1)
	(can-train archer-line)
	(research-completed ri-arbalest)
	(wood-amount > 400); excess wood and gold
	(gold-amount > 300)
	(food-amount < 200)
=>
	(train archer-line)
)
#end-if
#load-if-not-defined MAGYAR-CIV
(defrule
	(strategic-number sn-resource-control == 2)
	(or
		(and
			(wood-amount < 300)
			(not (research-available ri-champion))
		)
		(goal monk-threat-goal 1)
	)
	(food-amount > 580); hussar + lc food cost
	(gold-amount < 600); hussar gold cost
	(population < max-civ-pop)
	(research-completed ri-light-cavalry)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if
#load-if-not-defined AZTEC-CIV
#load-if-not-defined BRITON-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined SPANISH-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(strategic-number sn-current-age >= ci-transit)
	(or
		(gold-amount <= 90)
		(goal escrow-purpose-goal ri-halberdier)
	)
	(food-amount > 200)
	(wood-amount > 200)
	(or
		(unit-type-count spearman-line < 10)
		(research-completed ri-pikeman)
	)
	(nor
		(research-completed ri-elite-teutonic-knight)
		(research-completed ri-elite-throwing-axeman)
	)
	(can-train spearman-line)
=>
	(train spearman-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control == 2)
	(wood-amount > 400)
	(food-amount > 400)
	(or
		(dropsite-min-distance gold > 5)
		(gold-amount < 100)
	)
	(nor
		(research-completed ri-elite-teutonic-knight)
		(research-completed ri-elite-throwing-axeman)
	)
	(can-research-with-escrow ri-pikeman)
	(strategic-number sn-military-level < 1)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-pikeman)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control < 1)
	(wood-amount > 300)
	(food-amount > 175)
	(population < max-civ-pop)
	(or
		(dropsite-min-distance gold > 5)
		(gold-amount < 100)
	)
	(nand
		(gold-amount > 400)
		(unit-type-count trade-cart > 20)
	)
	(research-completed ri-elite-skirmisher)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-resource-control == 2)
	(wood-amount > 400)
	(food-amount > 400)
	(population < max-civ-pop)
	(or
		(dropsite-min-distance gold > 5)
		(gold-amount < 100)
	)
	(strategic-number sn-military-level < 1)
	(research-completed ri-elite-skirmisher)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

; ********** OTHER RESEARCHES **********
#load-if-defined KOREAN-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-wagon)
=>
	(release-escrow wood)(release-escrow gold)
	(research ri-elite-wagon)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined AZTEC-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-jaguar)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-jaguar)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined VIKING-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-berserk)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-berserk)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined AZTEC-CIV
#load-if-defined MAYAN-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-eagle)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-eagle)
	(set-goal uu-up-goal 0)
)
#end-if
#end-if
(defrule; Coatlan
	(strategic-number sn-resource-control < 1)
	(unit-type-count-total coatlan < 41)
	(can-train coatlan)
=>
	(train coatlan)
)
(defrule; Upgrade Coatlan
	(unit-type-count coatlan > 10)
	(can-research-with-escrow ri-elite-coatlan)
=>
;	(release-escrow food)(release-escrow gold)
	(research ri-elite-coatlan)
)
(defrule; Elite Coatlan
	(strategic-number sn-resource-control < 1)
	(unit-type-count elite-coatlan < 41)
	(research-completed ri-elite-coatlan)
	(can-train elite-coatlan)
=>
	(train elite-coatlan)
)
#load-if-defined KOREAN-CIV
(defrule; Unjeon
	(strategic-number sn-resource-control < 1)
	(or
		(unit-type-count unjeon < 20)
		(strategic-number sn-archer-threat > 0)
	)
	(gold-amount > 100)
	(can-train unjeon)
=>
	(train unjeon)
)
(defrule; Elite Unjeon
	(strategic-number sn-resource-control < 1)
	(or
		(and
			(unit-type-count elite-unjeon < 20)
			(strategic-number sn-archer-threat > 0)
		)
		(research-completed ri-elite-wagon); Koreans
	)
	(gold-amount > 100)
	(can-train elite-unjeon)
=>
	(train elite-unjeon)
)
(defrule; Geobug
	(goal enemy-boats-goal 1)
	(strategic-number sn-resource-control < 2)
	(unit-type-count geobug < 12)
	(gold-amount > 250)
	(can-train geobug)
=>
	(research ri-elite-turtle-ship)
	(train geobug)
)
(defrule; Elite Geobug
	(goal enemy-boats-goal 1)
	(strategic-number sn-resource-control < 2)
	(unit-type-count elite-geobug < 12)
	(research-completed ri-elite-turtle-ship)
	(gold-amount > 250)
	(can-train elite-geobug)
=>
	(train elite-geobug)
)
#end-if
(defrule; Upgrade Raider
	(game-time > 60)
	(or
		(unit-type-count cavalry-archer-line >= 12)
		(and
		(gold-amount > 700)
		(food-amount > 1100)
		)
	)
	(can-research ri-heavy-cavalry-archer)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-heavy-cavalry-archer)
)
#load-if-defined SPANISH-CIV
(defrule; Conquistor
	(or
	(strategic-number sn-infantry-threat >= 1)
	(unit-type-count conquistor < 12)
	)
	(can-train conquistor)
=>
	(train conquistor)
)
(defrule; Upgrade Conquistor
	(unit-type-count conquistor > 10)
	(can-research-with-escrow ri-elite-conquistor)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-conquistor)
)
(defrule; Elite Conquistor
	(or
	(strategic-number sn-infantry-threat >= 1)
	(unit-type-count conquistor < 12)
	)
	(can-train elite-conquistor)
	(research-completed ri-elite-conquistor)
=>
	(train elite-conquistor)
)
(defrule; Missionary
	(strategic-number sn-resource-control >= 1)
	(military-population > 50)
	(unit-type-count missionary < 8)
	(can-train missionary)
=>
	(train missionary)
)
#end-if
#load-if-defined MAYAN-CIV
(defrule; Spalvot
	(unit-type-count spalvot < 30)
	(can-train spalvot)
=>
	(train spalvot)
)
(defrule; Upgrade Spalvot
	(unit-type-count spalvot > 10)
	(can-research-with-escrow ri-elite-spalvot)
=>
	(release-escrow wood)(release-escrow gold)
	(research ri-elite-spalvot)
)
(defrule; Elite Spalvot
	(unit-type-count elite-spalvot < 30)
	(research-completed ri-elite-spalvot)
	(can-train elite-spalvot)
=>
	(train elite-spalvot)
)
#end-if
#load-if-defined GOTHIC-CIV
(defrule; Anarchy
	(can-research-with-escrow ri-anarchy)
=>
	(research ri-anarchy)
)
(defrule; Huskarl-B
	(unit-type-count huskarl-b < 13)
	(research-completed ri-anarchy)
	(can-train huskarl-b)
	(not (goal enemy-boats-goal 1))
=>
	(train huskarl-b)
)
(defrule; Elite Huskarl-B
	(unit-type-count elite-huskarl-b < 13)
	(research-completed ri-anarchy)
	(research-completed ri-elite-huskarl)
	(can-train elite-huskarl-b)
	(not (goal enemy-boats-goal 1))
=>
	(train elite-huskarl-b)
)
(defrule; Huskarl
	(unit-type-count infantry-units < 50)
	(can-train huskarl)
	(not (goal enemy-boats-goal 1))
=>
	(train huskarl)
)
(defrule; Elite Huskarl
	(unit-type-count infantry-units < 50)
	(research-completed ri-elite-huskarl)
	(can-train elite-huskarl)
	(not (goal enemy-boats-goal 1))
=>
	(train elite-huskarl)
)
#end-if
#load-if-defined HUN-CIV
(defrule; Tarkan
	(unit-type-count tarkan < 30)
	(can-train tarkan)
=>
	(train tarkan)
)
(defrule; Upgrade Tarkan
	(unit-type-count tarkan > 10)
	(can-research-with-escrow ri-elite-tarkan)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-tarkan)
)
(defrule; Elite Tarkan
	(unit-type-count elite-tarkan < 30)
	(research-completed ri-elite-tarkan)
	(can-train elite-tarkan)
=>
	(train elite-tarkan)
)
#end-if
(defrule; Chemistry
	(research-available ri-chemistry)
=>
	(research ri-chemistry)
)
(defrule; Avail Frigate
	(research-available ri-frigate)
=>
	(research ri-frigate)
)
(defrule; Frigate
	(and
	(warboat-count > 12)
	(unit-type-count frigate <= 3)
	)
	(strategic-number sn-resource-control < 2)
	(can-train frigate)
=>
	(train frigate)
)
(defrule; Upgrade Frigate
	(unit-type-count frigate > 4)
	(can-research-with-escrow ri-elite-frigate)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-frigate)
)
(defrule; Elite Frigate
	(and
	(warboat-count > 12)
	(unit-type-count elite-frigate <= 5)
	)
	(strategic-number sn-resource-control < 2)
	(can-train elite-frigate)
	(research-completed ri-elite-frigate)
=>
	(train elite-frigate)
)
#load-if-defined AZTEC-CIV
(defrule; Ocelot
	(strategic-number sn-resource-control < 1)
	(or
		(unit-type-count ocelot < 20)
		(strategic-number sn-infantry-threat > 0)
	)
	(gold-amount > 50)
	(can-train ocelot)
=>
	(train ocelot)
)
(defrule; Upgrade Ocelot
	(unit-type-count ocelot > 3)
	(research-available ri-elite-ocelot)
=>
	(research ri-elite-ocelot)
)
(defrule; Elite Ocelot
	(strategic-number sn-resource-control < 1)
	(or
		(and
			(unit-type-count elite-ocelot < 20)
			(strategic-number sn-infantry-threat > 0)
		)
		(research-completed ri-elite-wagon); Koreans
	)
	(gold-amount > 50)
	(can-train elite-ocelot)
=>
	(train elite-ocelot)
)
#end-if
#load-if-defined VIKING-CIV
(defrule; Berserk
	(strategic-number sn-resource-control < 1)
	(unit-type-count-total berserk < 26)
	(can-train berserk)
=>
	(train berserk)
)
(defrule; Upgrade Berserk
	(unit-type-count berserk > 4)
	(can-research-with-escrow ri-elite-berserk)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-berserk)
)
(defrule; Elite Berserk
	(strategic-number sn-resource-control < 1)
	(unit-type-count-total elite-berserk >= high-min-number-upgrade)
	(can-train elite-berserk)
	(research-completed ri-elite-berserk)
=>
	(train elite-berserk)
)
#end-if
(defrule; Petard
	(military-population > 20)
	(strategic-number sn-resource-control < 1)
	(not (town-under-attack))
	(unit-type-count-total petard < 2)
	(can-train petard)
=>
	(train petard)
)
(defrule; Smithy
	(strategic-number sn-resource-control < 1)
	(civilian-population > 21)
	(or
		(building-type-count-total barracks > 0)
		(building-type-count-total archery-range > 0)
	)
	(building-type-count-total blacksmith < 3)
	(or
		(can-train bombard-cannon)
		(can-train hand-cannoneer)
	)
=>
	(set-goal increase-town-size-goal 2)
	(build blacksmith)
)
#load-if-defined MIGRATION-MAP
(defrule; Building the Lumber Camp: !!! upgrade
	(or
		(or
			(wood-amount >= 200)
			(dropsite-min-distance wood > 4)
		)
		(or
			(building-type-count-total farm > 7)
			(building-type-count-total mill > 0)
		)
	)
	(building-type-count-total lumber-camp == 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(chat-to-player my-player-number "build Narja's lumber camp")
	(build lumber-camp)
)
(defrule; Building the Mill: !!! upgrade
	(building-type-count-total mill == 0) ; Prevents the construction of multiple mills
	(or
		(goal housing-goal 0)
		(building-type-count-total house > 0) ; We want to build a house before a mill
	)
	(or
		(building-type-count-total lumber-camp > 0)
		(resource-found food) ; Builds a mill only if forage, bushes or deer is found
	)
	(can-build mill)
=>
	(chat-to-player my-player-number "build Narja's mill")
	(build mill)
)
(defrule; Starting with cutting wood
;	(strategic-number sn-initial-exploration-required == 0)
;	(game-time > 30)
	(or
		(building-type-count-total lumber-camp > 0)
		(building-type-count town-center > 0)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 94)
	(set-strategic-number sn-wood-gatherer-percentage 6)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance2)
	(disable-self)
)
#end-if
(defrule; building Farms in Dark
	(building-type-count town-center > 0)
	(goal housing-goal 0)
	(strategic-number sn-current-age == dark)
	(building-type-count-total lumber-camp > 0) ; We want a lumber camp before farms
	(or
		(food-amount < 400)
		(building-type-count-total farm < 16)
	)
	(can-build farm)
=>
	(chat-to-player my-player-number "build Narja's farm")
	(build farm)
)
(defrule; Scouting Villager without Scout, not as food
	(building-type-count town-center > 0)
	(unit-type-count-total villager > 3)
	(military-population == 0)
	(or
		(game-time > 30)
		(not (resource-found food))
	)
=>
	(research ri-loom)
	(set-strategic-number sn-percent-civilian-explorers 1)
	(set-strategic-number sn-minimum-civilian-explorers 1)
)
(defrule; Scouting Villager without Scout ending
	(current-age == dark)
	(building-type-count barracks > 0)
	(unit-type-count-total villager > 14)
	(military-population == 0)
=>
	(train militiaman)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-minimum-civilian-explorers 0)
)
(defrule; Scouting Villager without Scout ending
	(or
		(military-population > 0)
		(unit-type-count-total villager < 4)
	)
=>
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-minimum-civilian-explorers 0)
)
(defrule; Building the Market for up to Castle Age
	(game-time > 1200)
	(gold-amount < 200)
	(strategic-number sn-current-age == feudal)
	(food-amount > 700)
	(building-type-count-total market == 0)
	(civilian-population >= 15)
=>
	(chat-to-player my-player-number "build Narja's up market")
	(release-escrow wood)
	(set-goal increase-town-size-goal 2)
	(build market)
)
(defrule;
	(current-age >= feudal)
	(building-type-count-total barracks > 0)
	(or
		(building-type-count-total archery-range > 0)
		(building-type-count-total stable > 0)
	)
	(civilian-population >= 15)
=>
	(chat-to-player my-player-number "build Narja's pop market")
	(release-escrow wood)
	(build market)
)
(defrule; selling wood without gold
	(strategic-number sn-current-age >= feudal)
	(and
	(unit-type-count female-gold-miner == 0)
	(unit-type-count male-gold-miner == 0)
	)
	(wood-amount > 500)
	(gold-amount < 800)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Narja's sell excess wood")
)
(defrule; selling food without gold
	(strategic-number sn-current-age >= feudal)
	(and
	(unit-type-count female-gold-miner == 0)
	(unit-type-count male-gold-miner == 0)
	)
	(food-amount > 500)
	(gold-amount < 800)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Narja's sell excess food")
)
(defrule; no Villager resign
	(unit-type-count villager == 0)
	(or
		(unit-type-count-total town-center == 0)
		(food-amount < 50)
	)
=>
	(chat-to-all "Narja's I have any villager.")
	(resign)
)
(defrule ; Musketier
	(strategic-number sn-resource-control < 1)
	(unit-type-count hand-cannoneer < 6)
	(can-train hand-cannoneer)
	(military-population >= 20)
=>
	(train hand-cannoneer)
)
#load-if-defined TURKISH-CIV
(defrule; Janissary
	(strategic-number sn-resource-control < 1)
	(unit-type-count janisary < 25)
	(can-train janisary)
=>
	(train janisary)
)
(defrule; Elite Janissary
	(strategic-number sn-resource-control < 1)
	(unit-type-count-total elite-janisary < 25)
	(can-train elite-janisary)
	(research-completed ri-elite-janisary)
=>
	(train elite-janisary)
)
#end-if
#load-if-defined JAPANESE-CIV
(defrule; Samurai
	(strategic-number sn-resource-control < 1)
	(unit-type-count samurai < 25)
	(can-train samurai)
=>
	(train samurai)
)
(defrule; Elite Samurai
	(strategic-number sn-resource-control < 1)
	(unit-type-count elite-samurai < 25)
	(can-train elite-samurai)
	(research-completed ri-elite-samurai)
=>
	(train elite-samurai)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule; Woader
	(strategic-number sn-resource-control < 1)
	(unit-type-count woader < 25)
	(can-train woader)
=>
	(train woader)
)
(defrule; Elite Woader
	(strategic-number sn-resource-control < 1)
	(unit-type-count elite-woader < 25)
	(can-train elite-woader)
	(research-completed ri-elite-woader)
=>
	(train elite-woader)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule; Hurlat
	(strategic-number sn-resource-control < 1)
	(unit-type-count hurlat < 20)
	(can-train hurlat)
=>
	(train hurlat)
)
(defrule; Upgrade Hurlat
	(unit-type-count hurlat >= 10)
	(research-available ri-elite-hurlat)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-hurlat)
)
(defrule; Elite Hurlat
	(strategic-number sn-resource-control < 1)
	(unit-type-count elite-hurlat < 20)
	(can-train elite-hurlat)
	(research-completed ri-elite-hurlat)
=>
	(train elite-hurlat)
)
#end-if
#load-if-defined PERSIAN-CIV
(defrule; Hathin
	(strategic-number sn-resource-control < 1)
	(unit-type-count hathin < 20)
	(can-train hathin)
=>
	(train hathin)
)
(defrule; Elite Hathin
	(strategic-number sn-resource-control < 1)
	(unit-type-count elite-hathin < 20)
	(can-train elite-hathin)
	(research-completed ri-elite-hathin)
=>
	(train elite-hathin)
)
#end-if
(defrule; Arson
	(unit-type-count infantry-units >= 8)
	(research-available ri-arson)
	(research-completed ri-city-councils)
=>
	(research ri-arson)
)
(defrule
	(can-build barracks)
	(current-age >= feudal)
	(building-type-count-total barracks < 1)
	(wood-amount >= 175)
	(civilian-population >= 15)
	(building-type-count-total town-center > 0)
=>
	(chat-to-player my-player-number "build Narja's barracks")
	(build barracks)
)
(defrule
	(can-build market)
	(building-type-count-total market < 1)
	(wood-amount >= 175)
	(civilian-population >= 15)
	(building-type-count-total town-center > 0)
	(building-type-count-total barracks > 0)
=>
	(chat-to-player my-player-number "build Narja's market")
	(build market)
)
(defrule ; City Rights
	(population >= 30)
	(can-research ri-city-rights)
=>
	(research ri-city-rights)
	(chat-to-all "City Rights")
)
(defrule
	(population >= 75)
	(can-research ri-city-councils)
=>
	(set-strategic-number sn-resource-control ri-city-councils)
)
(defrule ; City Councils
	(population >= 75)
	(can-research ri-city-councils)
=>
	(research ri-city-councils)
	(chat-to-all "City Councils")
)
(defrule
	(population >= 120)
	(can-research ri-city-councils)
=>
	(set-strategic-number sn-resource-control ri-municipal-storehouses)
)
(defrule ; Municipal Storehouses
	(population >= 120)
	(can-research ri-municipal-storehouses)
=>
	(research ri-municipal-storehouses)
	(chat-to-all "Municipal Storehouses")
)
(defrule ; Train villagers before Castle Age up
	(current-age == feudal)
	(food-amount < 800)
=>
	(train villager)
	(chat-to-player my-player-number "train Narja's villager")
)
(defrule ; Farms in Feudal
	(current-age == feudal)
	(building-type-count-total town-center > 0)
	(civilian-population >= 15)
	(wood-amount > 235)
=>
	(build farm)
	(chat-to-player my-player-number "build Narja's farm")
)
(defrule; Town Watch
	(civilian-population >= 22)
	(research-available ri-town-watch)
	(research-completed ri-city-rights)
=>
	(research ri-town-watch)
)
(defrule; Town Patrol
	(civilian-population >= 32)
	(research-available ri-town-patrol)
	(research-completed ri-city-councils)
=>
	(research ri-town-patrol)
)
(defrule; sell excess wood & build farm
	(current-age >= feudal)
	(wood-amount >= 560)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(build farm)
	(chat-to-player my-player-number "Narja's -wood +farm")
)
(defrule; Castle TC
	(current-age >= castle)
	(building-type-count-total town-center < 3)
	(wood-amount > 510)
	(stone-amount >= 100)
=>
	(build town-center)
	(chat-to-player my-player-number "Narja's Town Center")
)
(defrule; Kaiten
	(warboat-count > 12)
	(unit-type-count kaiten <= 2)
	(can-train kaiten)
	(strategic-number sn-resource-control < 1)
=>
	(train kaiten)
)
(defrule; Upgrade Kaiten
	(research-available ri-heavy-kaiten)
	(gold-amount > 600)
=>
	(research ri-heavy-kaiten)
)
(defrule; Heavy Kaiten
	(warboat-count > 12)
	(unit-type-count heavy-kaiten <= 2)
	(can-train heavy-kaiten)
	(research-completed ri-heavy-kaiten)
	(strategic-number sn-resource-control < 1)
=>
	(train heavy-kaiten)
)
;============================================
(defrule; Allows Musketier
	(research-available ri-musketier)
	(food-amount > 200)
	(gold-amount > 50)
	(military-population > 20)
=>
	(research ri-musketier)
)
(defrule; Allows Cannon
	(research-available ri-cannon)
	(wood-amount > 300)
	(gold-amount > 50)
	(military-population > 20)
=>
	(research ri-cannon)
)
(defrule; Allows Trebuchet
	(research-available ri-trebuchet)
	(wood-amount > 400)
	(gold-amount > 100)
	(military-population > 20)
=>
	(research ri-trebuchet)
)
;****************************; $$$
#load-if-defined BRITON-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-skytter)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-skytter)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined BYZANTINE-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-cataphract)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-cataphract)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined CHINESE-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-chukon)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-chukon)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= 12)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-hurlat)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-hurlat)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined TEUTONIC-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-teuton)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-teuton)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined GOTHIC-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-huskarl)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-huskarl)
	(set-goal uu-up-goal 0)
)
#end-if

#load-if-defined JAPANESE-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-samurai)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-samurai)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined PERSIAN-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-hathin)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-hathin)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-mameluke)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-mameluke)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined TURKISH-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-janisary)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-janisary)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-woader)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-woader)
	(set-goal uu-up-goal 0)
)
#end-if
#load-if-defined MONGOL-CIV;$ _Mongols
(defrule
	(unit-type-count battering-ram-line > 3)
	(research-completed ri-siege-ram)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
(defrule
	(or
		(unit-type-count-total my-unique-unit-line >= high-min-number-upgrade)
		(goal uu-up-goal 1)
	)
	(can-research-with-escrow ri-elite-mangudai)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-elite-mangudai)
	(set-goal uu-up-goal 0)
)
#end-if

(defrule
	(strategic-number sn-current-age >= ci-transit)
	(strategic-number sn-resource-control < 1)
	(or
		(population > del-civ-pop)
		(goal unit-goal wonder)
	)
	(can-research ri-stonecutting)
=>
	(research ri-stonecutting)
)
#load-if-not-defined WONDER-RACE
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(food-amount < 300)
		(strategic-number sn-current-age >= ci-transit)
	)
	(can-research ri-ballistics)
	(research-completed ri-city-councils)
=>
	(research ri-ballistics)
	(set-difficulty-parameter ability-to-maintain-distance 0)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(wood-amount > 800)
		(food-amount > 800)
	)
	(can-research-with-escrow ri-guilds)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-guilds)
)
(defrule
	(cc-players-unit-type-count 0 stone-mine > 5); stone left on map
	(or
		(unit-type-count 124 > 0)
		(unit-type-count 220 > 0)
	)
	(or
		(strategic-number sn-resource-control < 1)
		(strategic-number sn-stone-gatherer-percentage > 15)
	)
	(strategic-number sn-current-age >= ci-transit)
	(strategic-number sn-stone-gatherer-percentage > 4)
	(can-research ri-stone-shaft-mining)
	(research-completed ri-city-councils)
=> 
	(research ri-stone-shaft-mining)
)
(defrule
	(strategic-number sn-resource-control < 3)
	(military-population >= 20)
	(or
		(and
			(strategic-number sn-military-level >= 0)
			(civilian-population > 60)
		)
		(taunt-detected any-ally 222)
	)
	(player-valid any-ally)
	(can-research ri-cartography)
=>
	(research ri-cartography); get this to help allies better
)
(defrule
	(strategic-number sn-resource-control < 1)
	(current-age >= imperial-age)
	(or
		(gold-amount < 100)
		(population > del-civ-pop)
	)
	(food-amount > 400)
	(wood-amount > 400)
	(can-research ri-masonry)
=>
	(research ri-masonry)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(gold-amount < 100)
		(population > del-civ-pop)
	)
	(food-amount > 400)
	(wood-amount > 400)
	(can-research ri-architecture)
=>
	(research ri-architecture)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(gold-amount < 100)
		(population > del-civ-pop)
	)
	(food-amount > 400)
	(wood-amount > 400)
	(building-type-count castle >= 2)
	(can-research ri-hoardings)
=>
	(research ri-hoardings)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(population > del-civ-pop)
	(can-research ri-siege-engineers)
=>
	(research ri-siege-engineers)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(food-amount > 1200)
	(current-age-time > 300)
	(population > del-civ-pop)
	(can-research ri-town-watch)
=>
	(research ri-town-watch)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(or
		(town-under-attack)
		(population > del-civ-pop)
	)
	(building-type-count castle > 0)
	(can-research ri-murder-holes)
=>
	(research ri-murder-holes)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(population > del-civ-pop)
	(unit-type-count infantry-units > 11)
	(can-research ri-tracking)
=>
	(research ri-tracking)
)
(defrule
	(strategic-number sn-resource-control < 1)
	(population > del-civ-pop)
	(building-type-count castle > 0)
	(can-research ri-bombard-tower)
=>
	(research ri-bombard-tower)
)
(defrule
	(strategic-number sn-resource-control == ri-heresy)
	(can-research-with-escrow ri-heresy)
=>
	(release-escrow gold)
	(research ri-heresy)
)
(defrule
	(strategic-number sn-resource-control < 2)
	(players-unit-type-count any-enemy monk > 19)
	(can-research-with-escrow ri-faith)
=>
	(release-escrow food)(release-escrow gold)
	(research ri-faith)
)
#load-if-not-defined DEFEND-WONDER
(defrule
	(game-time > 300)
	(building-type-count bombard-tower < 6)
	(or
		(and
			(game-time < 900); build them defensively early in DM
			(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
		)
		(strategic-number sn-minimum-boar-hunt-group-size == 5); or later when not using UP
	)
	(can-build bombard-tower)
=>
	(build bombard-tower)
)
#else
(defrule
	(game-time > 300)
	(building-type-count bombard-tower < 6)
	(building-type-count wonder > 0)
	(can-build bombard-tower)
=>
	(build bombard-tower)
)
#end-if
#load-if-defined TEUTONIC-CIV; _Teutons
(defrule
	(research-completed ri-hoardings)
	(building-type-count castle > 1)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined TURKISH-CIV; _Turks
(defrule
	(or
		(building-type-count bombard-tower > 1)
		(unit-type-count cannon-galleon-line > 3)
	)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
(defrule
	(current-age == imperial-age)
	(unit-type-count transport-ship > 0)
	(strategic-number sn-resource-control <= 1)
=>
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
	(research ri-chain-mail)
	(research ri-plate-mail)
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

; ********** FARMS/FISHING SHIPs ********** ; Put them at the end for low priority

#load-if-not-defined POPULATION-CAP-25
(defrule
	(or
		(and
			(strategic-number sn-current-age >= fc-transit)
			(unit-type-count-total fishing-ship == 0); make a single fishing ship as the first ship will always go scouting without UP
		)
		(strategic-number sn-current-age == df-transit); train another fishing ship during feudal transit with UP
	)
	(can-train fishing-ship)
=>
	(train fishing-ship)
	(disable-self)
)
(defrule
	(strategic-number sn-current-age == df-transit)
	(or
		(and
			(or
				(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
				(and
					(strategic-number sn-minimum-boar-hunt-group-size != 5)
					(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
				)
			)
			(wood-amount > 325)
		)
		(goal strategy-goal flush)
	)
	(wood-amount > 170)
	(can-train fishing-ship)
=>
	(train fishing-ship); make more fishing ships during feudal transit on islands
)
(defrule
	(strategic-number sn-current-age == dark)
	(or
		(building-type-count-total lumber-camp > 0)
		(and
			(civ-selected persian)
			(unit-type-count-total fishing-ship < 3)
		)
	)
	(dropsite-min-distance wood < 4)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(unit-type-count fishing-ship < 10)
		(current-age == feudal-age)
	)
	(or
		(cc-players-unit-type-count 0 shore-fish > min-fishing)
		(cc-players-unit-type-count 0 sea-fish > min-fishing)
	)
	(wood-amount > 300)
	(dropsite-min-distance wood < 4)
	(population < max-civ-pop)
	(unit-type-count revealer == 0); no enemy attacking us
	(building-type-count-total market > 0)
	(unit-type-count fishing-ship < 16)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)
(defrule
	(strategic-number sn-resource-control <= 2)
	(or
		(wood-amount > 200)
		(food-amount < 150)
	)
	(unit-type-count fishing-ship < 8)
	(population < max-civ-pop)	
	(or
		(cc-players-unit-type-count 0 shore-fish > min-fishing)
		(cc-players-unit-type-count 0 sea-fish > min-fishing)
	)
	(or
		(warboat-count >= 20)
		(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	)
	(warboat-count > 6)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)
#load-if-defined VIKING-CIV
(defrule
	(current-age == castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(not (unit-available war-galley))
		(strategic-number sn-resource-control == ri-bodkin-arrow)
	)
	(or
		(cc-players-unit-type-count 0 shore-fish > min-fishing)
		(cc-players-unit-type-count 0 sea-fish > min-fishing)
	)
	(unit-type-count fishing-ship < 16)
	(can-train fishing-ship)
=>
	(train fishing-ship)
)
#end-if
#end-if
#load-if-not-defined UP-AVAILABLE
(defrule
	(building-type-count town-center > 0)
	(strategic-number sn-resource-control != ri-elite-skirmisher)
	(strategic-number sn-resource-control != battering-ram)
	(or
		(dropsite-min-distance wood < 6); make sure we don't run out of wood
		(wood-amount > 800)
	)
	(game-time > 180)
	(goal farm-goal 1)
	(can-build farm)
=>
	(build farm)
)
(defrule
	(current-age == dark-age); don't do it with UP, it may mess up boar hunting
	(not(sheep-and-forage-too-far))
	(building-type-count farm < 8)
	(idle-farm-count > 0)
	(strategic-number sn-maximum-food-drop-distance != 0); don't do this while trying forced hunting
	(strategic-number sn-maximum-food-drop-distance != 3)
=>
	(set-strategic-number sn-maximum-food-drop-distance 3)
	(set-strategic-number sn-food-dropsite-distance 3)
)
(defrule
	(current-age == dark-age)
	(or
		(or
			(sheep-and-forage-too-far)
			(idle-farm-count == 0)
		)
		(building-type-count farm >= 8)
	)
	(building-type-count farm > 0); don't reduce the distance before first farm is dropped or it may screw mill placement if berries are only partly uncovered
	(strategic-number sn-maximum-food-drop-distance != 0); don't do this while trying forced hunting
	(strategic-number sn-maximum-food-drop-distance != 15)
=>
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-food-dropsite-distance 15)
)
#end-if
#end-if ; NOT WONDER-RACE

; ********** GATHERER PERCENTAGES **********

#load-if-defined UP-AVAILABLE
(defconst F12 76)
(defconst W12 24)
(defconst F13 78)
(defconst W13 22)
(defconst F14 76)
(defconst W14 24)
(defconst F15 71)
(defconst W15 29)
(defconst F16 67)
(defconst W16 33)
(defconst F17 62)
(defconst W17 38)
(defconst F18 59)
(defconst W18 41)
(defconst F19 56)
(defconst W19 44)
(defconst F20 57)
(defconst W20 43)
(defconst F21 58)
(defconst W21 42)
#else
(defconst F12 65)
(defconst W12 35)
(defconst F13 60)
(defconst W13 40)
(defconst F14 58)
(defconst W14 42)
(defconst F15 52)
(defconst W15 48)
(defconst F16 48)
(defconst W16 52)
(defconst F17 46)
(defconst W17 54)
(defconst F18 43)
(defconst W18 57)
(defconst F19 45)
(defconst W19 55)
(defconst F20 52)
(defconst W20 48)
(defconst F21 62)
(defconst W21 38)
#end-if

#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined DEATH-MATCH
#load-if-defined LOW-RESOURCES-START
(defrule
	(unit-type-count villager >= 9)
=>
	(set-strategic-number sn-food-gatherer-percentage 94)
	(set-strategic-number sn-wood-gatherer-percentage 6)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance2); enable wood gathering
	(disable-self)
)
(defrule
	(unit-type-count villager == 10)
=>
	(set-strategic-number sn-food-gatherer-percentage 86)
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance2); copy them again in case we had to reexplore and reduce wood drop distance
	(disable-self)
)
(defrule
	(unit-type-count villager == 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance2)
	(disable-self)
)
(defrule
	(unit-type-count villager == 12)
=>
	(set-strategic-number sn-food-gatherer-percentage F12)
	(set-strategic-number sn-wood-gatherer-percentage W12)
	(set-strategic-number sn-maximum-wood-drop-distance wood-distance2)
	(disable-self)
)
(defrule
	(or
		(unit-type-count villager == 13)
		(and
			(current-age > dark-age);use them for rebuilding
			(and
				(unit-type-count villager < 21)
				(population-cap != 25)
			)
		)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage F13)
	(set-strategic-number sn-wood-gatherer-percentage W13)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 14)
=>
	(set-strategic-number sn-food-gatherer-percentage F14)
	(set-strategic-number sn-wood-gatherer-percentage W14)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 15)
=>
	(set-strategic-number sn-food-gatherer-percentage F15)
	(set-strategic-number sn-wood-gatherer-percentage W15)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 16)
=>
	(set-strategic-number sn-food-gatherer-percentage F16)
	(set-strategic-number sn-wood-gatherer-percentage W16)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 17)
=>
	(set-strategic-number sn-food-gatherer-percentage F17)
	(set-strategic-number sn-wood-gatherer-percentage W17)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 18)
=>
	(set-strategic-number sn-food-gatherer-percentage F18)
	(set-strategic-number sn-wood-gatherer-percentage W18)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 19)
=>
	(set-strategic-number sn-food-gatherer-percentage F19)
	(set-strategic-number sn-wood-gatherer-percentage W19)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 20)
=>
	(set-strategic-number sn-food-gatherer-percentage F20)
	(set-strategic-number sn-wood-gatherer-percentage W20)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 21)
=>
	(set-strategic-number sn-food-gatherer-percentage F21)
	(set-strategic-number sn-wood-gatherer-percentage W21)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager >= 22)
	(goal strategy-goal flush)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager >= 22)
	(not (goal strategy-goal flush))
=>
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-wood-gatherer-percentage 35)
)
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager >= 12)
	(unit-type-count villager <= 13)
	(goal dark-build-order-goal 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-maximum-wood-drop-distance 30)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 22)
=>
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-wood-gatherer-percentage 40)
)
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager == 23)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 38)
)
#end-if
#else
(defrule
	(strategic-number sn-current-age == dark)
	(unit-type-count villager < 23)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-maximum-wood-drop-distance 30)
)
#end-if
#else
(defrule
	(unit-type-count villager >= 12)
=>
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-maximum-gold-drop-distance 14)
	(set-strategic-number sn-maximum-stone-drop-distance 14)
	(set-strategic-number sn-maximum-hunt-drop-distance 24)
	(set-strategic-number sn-cap-civilian-builders 100)
	(set-strategic-number sn-cap-civilian-gatherers 100)(disable-self))
#end-if ;DM
#load-if-defined LOW-RESOURCES-START
#load-if-not-defined DIFFICULTY-HARDEST
(defrule
	(strategic-number sn-current-age == df-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 10)
)
(defrule
	(strategic-number sn-current-age == df-transit);will overwrite rule above
	(goal strategy-goal flush)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 0)
)
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-current-age >= df-transit)
	(goal strategy-goal sling)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 20)
)
#end-if
#end-if
#end-if

(defrule
	(or
		(and
			(strategic-number sn-current-age == feudal)
			(not (goal strategy-goal flush))
		)
		(and
			(regicide-game)
			(strategic-number sn-current-age == df-transit)
		)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage feudal-food-percentage)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage feudal-gold-percentage)
)
(defrule
	(strategic-number sn-current-age == df-transit)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(goal strategy-goal flush)
=>
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 5)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(or
		(goal unit-goal militiaman-line)
		(goal unit-goal scout-cavalry)
	)
	(building-type-count-total mining-camp > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 15)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(or
		(goal unit-goal militiaman-line)
		(goal unit-goal scout-cavalry)
	)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total mining-camp > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 16)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(or
		(and
			(goal unit-goal militiaman-line)
			(goal enemy-goal flush)
		)
		(or
			(goal unit-goal skirmisher)
			(strategic-number sn-cavalry-threat > 1)
		)
	)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total mining-camp > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(strategic-number sn-cavalry-threat > 1)
	(or
		(and
			(or
				(building-type-count farm < 16)
				(unit-type-count villager > 41)
			)
			(and
				(building-type-count farm < 20)
				(unit-type-count villager > 38)
			)
		)
		(building-type-count-total barracks == 0)
	)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 10)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(goal unit-goal archer)
	(building-type-count-total mining-camp > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 15)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(goal unit-goal archer)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 20)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(building-type-count-total blacksmith > 0)
	(current-age-time < 400)
	(goal control-goal belated-flush-defense)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 5)
)
#load-if-not-defined UP-MICHI-STYLE
#load-if-defined AZTEC-CIV
#load-if-not-defined REGICIDE
(defrule
	(building-type-count barracks == 0)
	(or
		(strategic-number sn-current-age == df-transit);will overwrite rule above
		(strategic-number sn-current-age == feudal)
	)
	(goal strategy-goal rush)
	(or
		(goal unit-goal eagle-warrior)
		(goal unit-goal monk)
	)
	(not (goal control-goal shot)); shot won't sell stone for additional TCs, so mine more gold
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 3)
)
#end-if
(defrule
	(strategic-number sn-current-age == feudal)
	(goal unit-goal my-unique-unit-line)
	(dropsite-min-distance stone < 6)
	(unit-type-count castle == 0)
	(stone-amount < 700)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#else
(defrule
	(strategic-number sn-current-age == feudal)
	(or
		(goal unit-goal my-unique-unit-line)
		(civ-selected saracen)
	)
	(nor 
		(goal strategy-goal flush)
		(goal strategy-goal sling)
	)
	(dropsite-min-distance stone < 6)
	(stone-amount < 700)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#end-if
(defrule
	(or
		(and
			(strategic-number sn-current-age == feudal)
			(goal strategy-goal sling)
		)
		(and
			(strategic-number sn-wood-gatherer-percentage == 100); end of rebuild code
			(building-type-count town-center > 0); use this in case not other percentages are loaded for some reason.
		)
	)
	(game-time > 1200)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#end-if
#load-if-not-defined SARACEN-CIV
(defrule
	(goal strategy-goal rush)
	(or
		(goal unit-goal eagle-warrior)
		(goal unit-goal monk)
	)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
;	(goal strategy-goal rush)
	(goal unit-goal knight)
	(strategic-number sn-current-age >= fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal scout-cavalry)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(or
		(goal strategy-goal rush)
		(goal strategy-goal boom)
	)
	(or
		(or
			(goal unit-goal mix)
			(goal unit-goal ss)
		)
		(or
			(goal unit-goal militiaman-line)
			(goal unit-goal scorpion)
		)
	)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(or
		(and
			(goal strategy-goal rush)
			(goal unit-goal cavalry-archer)
		)
		(goal strategy-goal flush)
	)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(or
		(goal unit-goal archer)
		(and
			(or
				(civ-selected mayan)
				(civ-selected aztec)
			)
			(goal strategy-goal flush)
		)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 29)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 29)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(nor
		(goal unit-goal my-unique-unit-line)
		(goal unit-goal knight)
	)			
	(goal strategy-goal boom)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal control-goal aggressive-rush)
	(goal unit-goal archer)
=>
	(set-strategic-number sn-food-gatherer-percentage 23)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 35)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#load-if-not-defined HIGH-RESOURCES-START
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(building-type-count-total castle == 0)
	(goal strategy-goal rush)
	(goal unit-goal my-unique-unit-line)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 30)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(building-type-count-total castle == 0)
	(goal strategy-goal boom)
	(goal unit-goal my-unique-unit-line)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 3)
	(set-strategic-number sn-stone-gatherer-percentage 30)
)
#end-if
#end-if
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal fast-imp)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-gold-gatherer-percentage 33)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == ci-transit)
	(goal strategy-goal fast-imp)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#else; => #load-if-defined SARACEN-CIV
(defrule
	(goal unit-goal knight)
	(goal control-goal aggressive-rush)
	(building-type-count-total stable < 2)
	(strategic-number sn-current-age >= fc-transit)
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 23)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal unit-goal archer)
	(goal control-goal aggressive-rush)
	(building-type-count-total archery-range < 3)
	(unit-type-count villager > 20)
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 10)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 25)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)	
	(goal unit-goal monk)
	(building-type-count-total monastery < 3)
	(unit-type-count villager > 20)
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 23)
)
(defrule
	(goal unit-goal monk)
	(building-type-count-total monastery > 2)
	(commodity-selling-price stone > 104)
	(unit-type-count villager > 20)
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 25)
)
#end-if ; SARACEN-CIV
(defrule
	(game-time < 1800)
	(strategic-number sn-current-age >= ci-transit)
	(goal strategy-goal fast-imp)
	(goal unit-goal gunpowder-units)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(or
		(building-type-count-total town-center == 1)
		(goal enemy-fortifications-goal 1)
	)
	(strategic-number sn-current-age >= ci-transit)
	(goal strategy-goal fast-imp)
	(building-type-count-total archery-range > 2)
	(goal unit-goal gunpowder-units)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal unit-goal wonder)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 35)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
(defrule
	(goal strategy-goal rush)
	(or
		(and
			(goal unit-goal eagle-warrior)
			(strategic-number sn-cavalry-threat >= 1)
		)
		(goal unit-goal mix)
	)
	(unit-type-count villager > 20)
	(building-type-count-total monastery > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age >= fc-transit)
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(strategic-number sn-cavalry-threat == 0)
	(building-type-count-total barracks > 2)
	(or
		(and
			(building-type-count-total barracks > 3)
			(building-type-count-total monastery > 0)
		)
		(goal control-goal aggressive-rush)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 40)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#load-if-defined UP-AVAILABLE
(defrule
	(or
		(strategic-number sn-current-age == fc-transit)
		(and
			(current-age == castle-age)
			(current-age-time < 120)
		)
	)
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(strategic-number sn-cavalry-threat == 0)
	(building-type-count-total barracks > 2)
	(goal control-goal aggressive-rush)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 34)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
(defrule
	(strategic-number sn-current-age == fc-transit)
	(goal unit-goal my-unique-unit-line)
	(dropsite-min-distance stone < 6)
	(stone-amount < 700)
	(building-type-count castle > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(research ri-stone-mining); or dba and hc are blocked
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count-total stable > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#load-if-not-defined SARACEN-CIV
#load-if-defined UP-2-PLAYER-TEAM
(defrule
	(goal strategy-goal rush)
	(goal control-goal aggressive-rush)
	(goal unit-goal knight)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal control-goal aggressive-rush)
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(current-age-time < 300)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#else
#load-if-not-defined UP-1-PLAYER-GAME
(defrule
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(goal position-goal flank)
	(strategic-number sn-current-age == fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(not (goal control-goal shot))
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(current-age-time < 300)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#end-if
#end-if
#load-if-defined HUN-CIV ; only civ currently uses cavalry rush
(defrule
	(goal strategy-goal rush)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(or
		(current-age-time < 300)
		(not (player-in-game any-ally))
	)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(building-type-count-total stable < 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 35)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(or
		(current-age-time < 300)
		(not (player-in-game any-ally))
	)
	(strategic-number sn-cavalry-threat > 1)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(building-type-count-total stable < 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal cavalry-archer)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total archery-range > 2)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 28)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#else
(defrule
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(building-type-count-total stable == 0)
	(strategic-number sn-current-age == castle)
	(stone-amount >= 100)
	(commodity-selling-price stone < 96)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(building-type-count-total stable == 0)
	(strategic-number sn-current-age == castle)
	(stone-amount >= 100)
	(commodity-selling-price stone < 96)
	(unit-type-count villager > 20)
	(research-completed ri-pikeman)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(commodity-selling-price stone < 96)
	(dropsite-min-distance stone < 5)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(building-type-count-total town-center >= tc-level-three)
	(current-age-time > 600)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 26)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#end-if
(defrule
	(goal strategy-goal flush)
	(or
		(goal unit-goal archer)
		(goal unit-goal mix)
	)
	(unit-type-count villager > 20)
	(strategic-number sn-current-age == castle)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal flush)
	(or
		(goal unit-goal cavalry-archer)
		(goal unit-goal mix)
	)
	(unit-type-count villager > 20)
	(building-type-count-total town-center >= tc-level-two)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal flush)
	(goal unit-goal mix)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(dropsite-min-distance stone < 5)
	(not (goal control-goal my-unique-unit-line))
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#load-if-not-defined CELTIC-CIV
(defrule
	(goal strategy-goal rush)
	(goal unit-goal ss)
	(not (goal control-goal my-unique-unit-line))
	(strategic-number sn-current-age >= castle)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(dropsite-min-distance stone < 5)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(building-type-count-total town-center >= tc-level-two)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(stone-amount < 100)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#else
(defrule
	(goal strategy-goal rush)
	(goal unit-goal ss)
	(strategic-number sn-current-age >= castle)
	(building-type-count-total town-center < 3)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal flush)
	(dropsite-min-distance stone < 6)
	(strategic-number sn-current-age >= castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal unit-goal militiaman-line)
	(dropsite-min-distance stone < 6)
	(strategic-number sn-current-age >= castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(goal strategy-goal rush)
	(goal unit-goal ss)
	(strategic-number sn-cavalry-threat == 0)
	(players-unit-type-count every-enemy militiaman-line < 8)
	(not (goal control-goal my-unique-unit-line))
	(strategic-number sn-current-age >= castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#load-if-defined GOTHIC-CIV
(defrule
	(goal strategy-goal flush)
	(goal unit-goal militiaman-line)
	(building-type-count-total town-center >= tc-level-three)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#end-if
#load-if-not-defined VIKING-CIV
#load-if-not-defined TURKISH-CIV
(defrule
	(not (goal strategy-goal boom))
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count town-center >= tc-level-two)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 45); 42
	(set-strategic-number sn-wood-gatherer-percentage 35); 38
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#else
(defrule
	(not (goal strategy-goal boom))
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count town-center >= tc-level-two)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#end-if
(defrule
	(goal strategy-goal boom)
	(or
		(goal unit-goal archer)
		(goal unit-goal scorpion)
	)
	(building-type-count-total town-center < 3)
	(stone-amount < 100); gather stone when TC disrupted
=>
	(set-strategic-number sn-food-gatherer-percentage 23)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 28)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal strategy-goal boom)
	(goal unit-goal scorpion)
	(building-type-count-total town-center >= tc-level-three)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
(defrule
	(goal strategy-goal boom)
	(or
		(goal unit-goal archer)
		(and
			(goal unit-goal scorpion)
			(research-completed ri-light-cavalry)
		)
	)
	(building-type-count-total town-center >= tc-level-three)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#load-if-defined VIKING-CIV
(defrule
	(goal strategy-goal boom)
	(goal unit-goal archer)
	(or
		(building-type-count-total town-center >= tc-level-four)
		(current-age-time > 300)
	)
	(strategic-number sn-current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
(defrule
	(goal strategy-goal boom)
	(goal unit-goal archer)
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 26)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#end-if
#load-if-defined AZTEC-CIV
(defrule
	(goal strategy-goal fast-imp)
	(strategic-number sn-current-age >= fc-transit)
;	(building-type-count-total town-center >= tc-level-three)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal fast-imp)
	(goal unit-goal archer)
	(or
		(research-completed ri-pikeman)
		(research-completed ri-elite-skirmisher)
	)
;	(building-type-count-total town-center >= tc-level-three)
=>
	(set-strategic-number sn-food-gatherer-percentage 51)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 19)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#load-if-defined PERSIAN-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-three)
	(goal strategy-goal fast-imp)
	(goal unit-goal gunpowder-units)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-three)
	(goal strategy-goal fast-imp)
	(goal unit-goal gunpowder-units)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-three)
	(building-type-count-total archery-range > 0)
	(dropsite-min-distance stone <= 6)
	(goal control-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)
#load-if-defined UP-AVAILABLE
(defrule
	(goal unit-goal knight)
	(goal control-goal shot)
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-two)
	(dropsite-min-distance stone <= 6)
	(unit-type-count villager > 20)
	(or(civ-selected mongol)(civ-selected chinese))
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)
#end-if
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 6)
	(research-completed ri-elite-skirmisher)
	(goal control-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 12)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-two)
	(dropsite-min-distance stone <= 6)
	(goal control-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#end-if
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age >= castle)
	(building-type-count-total castle > 0)
	(goal control-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
(defrule
	(goal strategy-goal rush)
	(or
		(goal unit-goal eagle-warrior)
		(goal unit-goal militiaman-line)
	)
	(strategic-number sn-current-age >= castle)
	(dropsite-min-distance stone <= 6)
	(or
		(building-type-count-total town-center >= tc-level-two)
		(and
			(stone-amount < 100)
			(research-completed ri-pikeman)
		)
	)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(strategic-number sn-cavalry-threat == 0)
	(dropsite-min-distance stone <= 6)
	(unit-type-count villager > 60)
=>
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 38)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal eagle-warrior)
	(strategic-number sn-cavalry-threat == 0)
	(strategic-number sn-current-age == ci-transit)
	(building-type-count town-center == 3)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#load-if-not-defined AZTEC-CIV
(defrule
	(goal strategy-goal rush)
	(goal unit-goal mix)
	(building-type-count-total town-center < 3)
	(stone-amount != 100)
	(stone-amount != 200)
	(dropsite-min-distance stone < 5)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#else
(defrule
	(goal strategy-goal rush)
	(goal unit-goal mix)
	(building-type-count-total town-center < 3)
	(stone-amount != 100)
	(stone-amount != 200)
	(dropsite-min-distance stone < 5)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 29)
	(set-strategic-number sn-stone-gatherer-percentage 7)
)
#end-if
#load-if-not-defined AZTEC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined ITALIAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SARACEN-CIV
(defrule
	(not (goal unit-goal my-unique-unit-line))
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age >= ci-transit)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage ci-uu-switch-food)
	(set-strategic-number sn-wood-gatherer-percentage ci-uu-switch-wood)
	(set-strategic-number sn-gold-gatherer-percentage ci-uu-switch-gold)
	(set-strategic-number sn-stone-gatherer-percentage ci-uu-switch-stone)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined SLAVIC-CIV
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(nor (goal unit-goal archer)
	(goal unit-goal knight))
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 14)
)
#else
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(nor (goal unit-goal archer)
	(goal unit-goal knight))
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age >= castle)
	(building-type-count-total castle == 0)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)
#end-if ;SLAVIC-CIV
#else
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(goal control-goal my-unique-unit-line)
	(or
		(strategic-number sn-current-age == castle)
		(building-type-count-total castle == 0)
	)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#end-if ;KOREAN-CIV
#else
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)
#end-if ;CELTIC-CIV
#else
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)
#load-if-defined UP-AVAILABLE
(defrule
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 4)
	(goal control-goal my-unique-unit-line)
	(strategic-number sn-current-age == castle)
	(goal enemy-goal ss)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(set-strategic-number sn-gold-gatherer-percentage 5)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)
#end-if
#end-if ;BYZANTINE-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total castle > 0)
	(nand
		(wood-amount > 300)
		(stone-amount < 100)
	)
	(goal strategy-goal rush)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage uu-food)
	(set-strategic-number sn-wood-gatherer-percentage uu-wood)
	(set-strategic-number sn-gold-gatherer-percentage uu-gold)
	(set-strategic-number sn-stone-gatherer-percentage uu-stone)
)
#load-if-not-defined KOREAN-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total castle == 1)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
	(nand
		(wood-amount > 300)
		(stone-amount < 100)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 7)
)
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-three);3
	(building-type-count-total castle == 1)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)
#else
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total castle == 1)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
	(nand
		(wood-amount > 300)
		(stone-amount < 100)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(building-type-count-total castle == 1)
	(goal control-goal shot)
	(goal unit-goal my-unique-unit-line)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)
#end-if
#load-if-not-defined BRITON-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined UP-MICHI-STYLE ; food uu
(defrule
	(strategic-number sn-current-age == feudal)
	(goal unit-goal my-unique-unit-line)
	(goal strategy-goal boom)
	(dropsite-min-distance stone < 6)
	(stone-amount < 600)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)
#end-if
#load-if-not-defined TEUTONIC-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-two)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-two)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
	(current-age-time > 420)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#load-if-defined SLAVIC-CIV
(defrule
	(strategic-number sn-current-age == castle)
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-two)
	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#else
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-current-age == castle)
;	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-five)
;	(goal unit-goal my-unique-unit-line)
	(unit-type-count villager > 20)
	(unit-type-count villager < up-max-civ)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#end-if
#end-if
(defrule
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total castle > 1)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage uu-food2)
	(set-strategic-number sn-wood-gatherer-percentage uu-wood2)
	(set-strategic-number sn-gold-gatherer-percentage uu-gold2)
	(set-strategic-number sn-stone-gatherer-percentage uu-stone2)
)
#load-if-defined CELTIC-CIV
(defrule
	(or
		(research-completed my-unique-unit-upgrade); Celts
		(research-completed ri-champion)
	)
	(research-completed ri-halberdier)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(goal strategy-goal boom)
	(current-age == castle-age)
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total castle > 1)
	(unit-type-count villager > 20)
	(or
		(or 
			(civ-selected byzantine)
			(civ-selected spanish)
		)
		(or
			(civ-selected japanese)
			(civ-selected gothic)
		)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#load-if-defined BYZANTINE-CIV
(defrule
	(not (goal strategy-goal boom))
	(goal uu-up-goal 1)
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total castle > 1)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(goal strategy-goal boom)
	(strategic-number sn-current-age == ci-transit)
	(goal unit-goal my-unique-unit-line)
	(building-type-count-total castle > 1)
	(unit-type-count villager > 20)	
=>
	(set-strategic-number sn-food-gatherer-percentage 24)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#end-if
#end-if
(defrule
	(game-time > 2400)
	(or
		(and
			(goal unit-goal knight)
			(or
				(goal ranged-unit-type-goal 0)
				(goal ranged-unit-type-goal -1)
			)
		)
		(and
			(civ-selected aztec)
			(goal control-goal 0)
		)
	)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined HUN-CIV
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(dropsite-min-distance stone <= 6)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(not (goal control-goal my-unique-unit-line))
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 19)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#load-if-defined UP-AVAILABLE
(defrule
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center == 2)
	(unit-type-count-total 970 > 2)
	(unit-type-count villager > 20)
	(stone-amount >= 100)
	(nor 
		(goal enemy-goal eagle-warrior)
		(civ-selected viking)
	)
	(goal anti-cavalry-threat-goal 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 19)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(dropsite-min-distance stone <= 6)
	(building-type-count-total town-center >= tc-level-three)
	(nor (research-completed ri-crossbow)
	(goal control-goal my-unique-unit-line))
	(unit-type-count villager > 20)
	(civilian-population < 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#end-if
#load-if-defined UP-2-PLAYER-GAME
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(goal strategy-goal flush)
	)
	(not (goal control-goal my-unique-unit-line))
	(unit-type-count villager > 20)
	(strategic-number sn-military-level < 0)
	(current-age-time < 600)
=>
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 19)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(unit-type-count-total villager > up-max-civ)
	(not (goal control-goal my-unique-unit-line))
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#else
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(unit-type-count-total villager > up-max-civ)
	(not (goal control-goal my-unique-unit-line))
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 28)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#end-if
#else
(defrule
	(goal strategy-goal rush)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(building-type-count-total stable < 2)
	(building-type-count-total archery-range > 3)
	(strategic-number sn-cavalry-threat < 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 24)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 38)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal cavalry-archer)
	(goal control-goal aggressive-rush)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(building-type-count-total stable < 2)
	(building-type-count-total archery-range > 3)
	(or
		(strategic-number sn-cavalry-threat > 1)
		(research-completed ri-elite-skirmisher)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(dropsite-min-distance stone <= 6)
	(stone-amount < 100)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

#end-if
#else
#load-if-not-defined UP-AVAILABLE
(defrule
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(dropsite-min-distance stone <= 4)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(strategic-number sn-archer-threat > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(dropsite-min-distance stone <= 4)
	(strategic-number sn-current-age == castle)
	(goal control-goal aggressive-rush)
	(unit-type-count villager > 42)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#else
(defrule
	(goal strategy-goal boom)
	(building-type-count-total town-center >= tc-level-two)
	(building-type-count-total castle > 0)
	(goal unit-goal my-unique-unit-line)
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(dropsite-min-distance stone <= 4)
	(strategic-number sn-current-age == castle)
	(unit-type-count villager > 20)
	(or
		(or
			(strategic-number sn-archer-threat > 1)
			(building-type-count stone-wall-line > 10); don't go for TK in arena early
		)
		(game-time < 1620)
	)
	(strategic-number sn-stone-gatherer-percentage < 10); if we started gathering stone don't stop or keep retasking
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#end-if
(defrule
	(dropsite-min-distance stone <= 4)
	(strategic-number sn-current-age >= castle)
	(building-type-count-total castle > 0)
	(unit-type-count villager > 20)
	(or
		(current-age == imperial-age)
		(current-age-time > 900)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
(defrule
	(game-time > 1620)
	(dropsite-min-distance stone <= 4)
	(or
		(and
			(building-type-count-total castle == 0)
			(building-type-count stone-wall-line < 10)
		)
		(and
			(strategic-number sn-current-age == ci-transit)
			(goal unit-goal my-unique-unit-line)
		)
	)
	(strategic-number sn-archer-threat < 2)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#end-if ;teutonic civ
#load-if-defined UP-2-PLAYER-GAME
#load-if-not-defined TEUTONIC-CIV
(defrule
	(goal unit-goal knight)
	(strategic-number sn-current-age == castle)
	(game-time < 1800)
	(unit-type-count villager > 20)
	(or
		(and
			(current-age-time < 480)
			(goal enemy-goal castle)
		)
		(goal monk-threat-goal 1)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 58); too much food actually, but we want early light cavalry
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
(defrule	
	(strategic-number sn-current-age == castle)
	(goal strategy-goal boom)
	(goal unit-goal knight)
	(unit-type-count villager > 20)
	(or
		(strategic-number sn-archer-threat > 0)
		(building-type-count-total stone-wall-line > 10)
	)
	(building-type-count-total siege-workshop == 0); get a siege work shop early in arena
	(unit-type-count 980 == 0); still no stone gatherers, so keep percentage from castle transit
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
(defrule
	(goal unit-goal cavalry-archer)
	(strategic-number sn-current-age == castle)
	(dropsite-min-distance stone <= 6)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(goal unit-goal cavalry-archer)
	(strategic-number sn-current-age == castle)
	(building-type-count stable > 1)
	(dropsite-min-distance stone <= 6)
	(or
		(building-type-count-total town-center >= tc-level-three)
		(stone-amount < 100)
	)
	(goal enemy-goal eagle-warrior)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 2)
)
#load-if-not-defined TURKISH-CIV
(defrule
	(goal unit-goal cavalry-archer)
	(unit-type-count villager > 95)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(goal unit-goal cavalry-archer)
	(unit-type-count villager > 95)
	(building-type-count-total castle > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 29)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#else
(defrule
	(unit-type-count villager > 95)
=>
	(set-strategic-number sn-food-gatherer-percentage 51)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal control-goal shot)
	(building-type-count-total town-center >= tc-level-three)
	(dropsite-min-distance stone <= 6)
	(unit-type-count villager > 20)
	(building-type-count-total castle == 0)
	(or
		(goal unit-goal knight)
		(research-completed ri-elite-eagle)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)
#end-if
(defrule
	(timer-triggered one-minute-timer)
=>
	(set-strategic-number sn-food-modifier-percentage 0)
	(set-strategic-number sn-wood-modifier-percentage 0)
	(set-strategic-number sn-gold-modifier-percentage 0)
	(set-strategic-number sn-stone-modifier-percentage 0)
)
#load-if-defined UP-AVAILABLE
#load-if-defined SPANISH-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal flush)
	(gold-amount > 170)
	(building-type-count blacksmith > 0)
=>
	(set-strategic-number sn-food-modifier-percentage 4)
	(set-strategic-number sn-wood-modifier-percentage 3)
	(set-strategic-number sn-gold-modifier-percentage -7); don't go for archer with spanish, they can't upgrade to xbow
)
#end-if
(defrule
	(strategic-number sn-current-age == feudal)
	(goal strategy-goal sling)
	(or
		(players-civ any-ally aztec)
		(or
			(players-civ any-ally mayan)
			(players-civ any-ally slavic)
		)
	)
	(players-current-age any-ally == imperial-age)
	(players-building-type-count every-ally castle < 1)
=>
	(set-strategic-number sn-food-modifier-percentage -7)
	(set-strategic-number sn-stone-modifier-percentage 7)
)
(defrule
	(current-age == castle-age)
	(research-available imperial-age)
	(food-amount >= 700)
	(gold-amount < 200)
=>
	(set-strategic-number sn-food-modifier-percentage -7)
	(set-strategic-number sn-gold-modifier-percentage 7)
)
#load-if-defined UP-2-PLAYER-GAME
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(players-building-type-count any-enemy watch-tower > 4)
	(game-time < 1800)
	(current-age >= castle-age)
	(strategic-number sn-gold-gatherer-percentage > 19)
=>
	(set-strategic-number sn-wood-modifier-percentage 10)
	(set-strategic-number sn-gold-modifier-percentage -10)
)
#end-if
#end-if
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total castle == 0)
	(or
		(or
			(goal enemy-fortifications-goal 1)
			(players-building-type-count any-enemy castle > 0)
		)
		(or
			(population-cap < 49) ;Ł erase cap 100
			(civ-selected magyar)
		)
	)
	(strategic-number sn-stone-gatherer-percentage == 0)
=>
	(set-strategic-number sn-food-modifier-percentage -3)
	(set-strategic-number sn-wood-modifier-percentage -3)
	(set-strategic-number sn-stone-modifier-percentage 6)
)
(defrule
	(building-type-count-total town-center < 2)
	(building-type-count-total dock > 0)
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(strategic-number sn-current-age == castle)
	(stone-amount > 100)
	(not(goal unit-goal my-unique-unit-line))
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(or
		(not (research-available imperial-age))
		(stone-amount < 100)
	)
	(not(goal unit-goal my-unique-unit-line))
	(building-type-count-total dock > 0)
	(strategic-number sn-minimum-water-body-size-for-dock == water-mixed)
	(strategic-number sn-current-age == castle)
	(dropsite-min-distance stone < 6)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(or
		(strategic-number sn-current-age == df-transit)
		(and
			(strategic-number sn-current-age == feudal)
			(not (civ-selected viking))
		)
	)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
=>
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == feudal)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(civ-selected viking)
		(goal strategy-goal flush)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(current-age < imperial-age)
	(strategic-number sn-current-age >= fc-transit)
	(or
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
		(and
			(building-type-count dock > 1)
			(current-age-time < 420)
		)
	)
	(nand
		(goal unit-goal my-unique-unit-line)
		(building-type-count castle == 0)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(current-age < imperial-age)
	(strategic-number sn-current-age >= fc-transit)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(unit-type-count fishing-ship > 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 33)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(current-age == castle-age)
	(current-age-time > 180)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(civilian-population < 61)
	(dropsite-min-distance stone <= 6)
=>
	(set-strategic-number sn-food-gatherer-percentage 12)
	(set-strategic-number sn-wood-gatherer-percentage 57)
	(set-strategic-number sn-gold-gatherer-percentage 28)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(civilian-population > 60)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(unit-type-count-total trade-cart > 10)
=>
	(set-strategic-number sn-food-gatherer-percentage 18)
	(set-strategic-number sn-wood-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(civilian-population > 60)
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(unit-type-count-total trade-cart < 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 16)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 31)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(game-time >= 3600)
	(unit-type-count female-gold-miner == 0); no gold miners
	(unit-type-count male-gold-miner == 0)
	(unit-type-count-total 229 == 0); no dead miners so enemy didn't kill them
	(unit-type-count-total 221 == 0); so there's no gold available
=>
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 2); just because we may find some later that was visible before.
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#load-if-defined DEATH-MATCH
#load-if-not-defined CELTIC-CIV
(defrule
	(civilian-population < up-max-civ)
	(wood-amount > 1500)
=>
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(civilian-population < up-max-civ)
	(wood-amount < 500)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(commodity-buying-price food < 136)
	(commodity-selling-price stone > 95)
	(building-type-count market > 0)
	(dropsite-min-distance stone < 6)
	(goal unit-goal knight)
	(game-time < 1800)
	(building-type-count-total stable > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 16)
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(set-strategic-number sn-gold-gatherer-percentage 35)
	(set-strategic-number sn-stone-gatherer-percentage 35)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(commodity-selling-price stone > 95)
	(building-type-count market > 0)
	(dropsite-min-distance stone < 6)
	(goal strategy-goal rush)
	(goal unit-goal archer)
	(game-time < 1800)
	(building-type-count-total archery-range > 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 10)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 30)
)
#end-if
#load-if-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-current-age >= fc-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-five)
=>
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-five)
	(unit-type-count-total villager > 110)
	(nor
		(goal unit-goal my-unique-unit-line)
		(goal control-goal my-unique-unit-line)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 51)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-current-age == castle)
	(building-type-count-total town-center >= tc-level-five)
	(unit-type-count-total villager > 110)
	(or
		(goal unit-goal my-unique-unit-line)
		(goal control-goal my-unique-unit-line)
	)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(or
		(goal unit-goal my-unique-unit-line)
		(goal control-goal my-unique-unit-line)
	)
	(building-type-count-total castle < 4)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 18)
)
(defrule
	(goal unit-goal knight)
	(unit-type-count villager > 20)
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 18)
	(set-strategic-number sn-gold-gatherer-percentage 34)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#load-if-not-defined BRITON-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined MONGOL-CIV
#load-if-not-defined KOREAN-CIV
(defrule
	(building-type-count-total castle > 3)
	(unit-type-count villager > 20)
	(strategic-number sn-current-age >= ci-transit)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
(defrule
	(goal strategy-goal rush)
	(goal unit-goal monk)
	(current-age == castle-age)
	(commodity-selling-price stone < 105)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 28)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 44)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(goal strategy-goal rush)
	(goal unit-goal monk)
	(strategic-number sn-current-age >= ci-transit)
	(building-type-count-total monastery > 1)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 40)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(goal unit-goal monk)
	(strategic-number sn-current-age >= ci-transit)
	(or
		(goal enemy-fortifications-goal 1)
		(or
			(civ-selected slavic)
			(and
				(goal aofe-game-goal 1)
				(or
					(civ-selected spanish); get a castle for inquisition/madrasah
					(civ-selected saracen)
				)
			)
		)
	)
	(building-type-count-total castle == 0)
;	(unit-type-count villager > 20) rule too long
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 40)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#load-if-not-defined REGICIDE
(defrule
	(goal strategy-goal rush)
	(goal unit-goal monk)
	(building-type-count castle > 0)
	(unit-type-count villager > 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
#end-if
#end-if
(defrule
	(strategic-number sn-current-age == castle)
	(goal unit-goal wonder)
=>
	(set-goal train-civ-goal wonder)
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 45)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
(defrule
	(strategic-number sn-current-age >= ci-transit)
	(goal unit-goal wonder)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 40)
	(set-strategic-number sn-stone-gatherer-percentage 30)
	(set-strategic-number sn-wood-dropsite-distance 14)
)
#load-if-defined DEFEND-WONDER
(defrule
	(unit-type-count-total villager < twenty-five-percent-pop)
=>
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 5)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#load-if-not-defined INCAN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined SLAVIC-CIV
#load-if-not-defined AZTEC-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined SPANISH-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(unit-type-count-total villager < twenty-five-percent-pop)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

; ********** ATTACK RULES **********
(defrule
	(goal enemy-fortifications-goal -1)
	(or
		(players-building-type-count any-enemy castle > 3)
		(and
			(nand
				(building-type-count stone-wall > 10); arena map
				(unit-type-count battering-ram-line > 0)
			)
			(and
				(players-building-type-count any-enemy castle > 0)
				(players-building-type-count any-enemy stone-wall > 10)
			)
		)
	)
=>
	(set-goal enemy-fortifications-goal 1)
)
(defrule
	(goal enemy-fortifications-goal 1)
	(players-building-type-count every-enemy castle < 2)
	(or
		(players-building-type-count every-enemy stone-wall < 10)
		(and
			(building-type-count stone-wall > 10)
			(unit-type-count battering-ram-line > 0)
		)
	)
=>
	(set-goal enemy-fortifications-goal -1)
)
(defrule
	(strategic-number sn-military-level >= 2); military superiority so
	(strategic-number sn-current-age != fc-transit)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-military-level >= 1); more aggressive in team play
	(unit-type-count cavalry-units > 5)
	(current-age >= castle-age)
	(current-age-time >= 240)
	(player-in-game any-ally)
=>
	(set-goal attack-goal 1)
)
(defrule
	(current-age == castle-age)
	(military-population > 16)
	(strategic-number sn-resource-control < 2)
	(or
		(strategic-number sn-military-level >= military-level-flush); test - most aggressive
		(and
			(strategic-number sn-military-level >= military-level-flush-aggressive)
			(current-age-time < 300)
		)
	)
	(goal forward-threat-goal -1)
	(strategic-number sn-cavalry-threat == 0)
	(goal strategy-goal flush)
	(research-completed ri-bodkin-arrow)
	(players-building-type-count any-enemy castle == 0); not in 1v1 if enemy has a castle
=>
	(set-goal attack-goal 1)
)
(defrule
	(unit-type-count ranged-units > 19)
	(strategic-number sn-military-level >= 0)
	(players-current-age every-enemy == feudal-age)
	(goal strategy-goal rush)
	(or
		(goal control-goal aggressive-rush); xbow or ca with bodkin should beat feudal age stuff
		(civ-selected briton)
	)
	(research-completed ri-bodkin-arrow)
=>
	(set-goal attack-goal 1)
)
(defrule
	(game-time < 1620)
	(goal attack-goal 0)
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(or
		(goal enemy-goal ss)
		(or
			(strategic-number sn-archer-threat > 0)
			(players-unit-type-count any-enemy skirmisher-line > 7)
		)
	)
	(or
		(research-completed ri-chain-barding)
		(strategic-number sn-military-level >= 1)
	)
	(strategic-number sn-military-level >= 0)
	(unit-type-count knight-line > 12)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
#load-if-defined SARACEN-CIV
(defrule
	(game-time < 1620)
	(goal attack-goal 0)
	(goal strategy-goal rush)
	(goal unit-goal knight)
	(commodity-selling-price stone < 100)
	(research-completed ri-chain-barding)
	(food-amount < 60)
	(gold-amount < 80)
	(unit-type-count knight-line > 8)
	(players-unit-type-count every-enemy camel-line < 8)
	(players-unit-type-count every-enemy knight-line < 8)
	(goal monk-threat-goal 0)
=>
	(set-goal attack-goal 1); attack fast before market eco runs out
)
#end-if
(defrule
	(game-time < 1800)
	(goal attack-goal 0)
	(goal unit-goal eagle-warrior)
	(or
		(or
			(goal anti-cavalry-threat-goal 1)
			(players-unit-type-count any-enemy skirmisher-line > 7)
		)
		(and
			(players-current-age any-enemy == feudal-age)
			(players-unit-type-count any-enemy militiaman-line < 1)
		)
	)
	(strategic-number sn-military-level >= 0)
	(unit-type-count eagle-warrior-line > 20)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal attack-goal 0)
	(player-in-game any-ally)
	(not (town-under-attack))
	(timer-triggered attack-timer); not attack in progress
	(strategic-number sn-military-level >= 0); test - most aggressive
	(population > seventy-five-percent-pop)
	(players-population every-ally > 130)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
	(disable-self)
)
#end-if
(defrule
	(game-time < 1680)
	(goal attack-goal 0)
	(goal strategy-goal flush)
	(goal enemy-goal ss); vs enemy that trys to stall flushes with tons of trash to keep military level high
	(strategic-number sn-military-level >= 0); test - most aggressive
	(unit-type-count knight-line > 0)
	(research-completed ri-bodkin-arrow)
	(players-building-type-count any-enemy castle == 0); not in 1v1 if enemy has a castle
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
(defrule
	(goal attack-goal 0)
	(goal unit-goal monk)
	(unit-type-count battering-ram-line > 0)
	(strategic-number sn-military-level >= 0); test - most aggressive
	(nor
		(or
			(research-available ri-block-printing)
			(research-available ri-theocracy)
		)
		(research-available ri-illumination)
	)
	(current-age == imperial-age)
	(unit-type-count monk > 20)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
(defrule
	(goal attack-goal 0)
	(players-military-population every-enemy < 3)
	(or
		(and
			(or
				(unit-type-count scout-cavalry > 2)
				(and
					(goal strategy-goal flush)
					(military-population > 6)
				)
			)
			(map-size tiny); no fast flush on larger maps
		)
		(unit-type-count knight > 3)
	)
=>
	(set-goal attack-goal 1); attack might be an idea, check other conditions
)
(defrule
	(building-type-count stable == 1)
	(building-type-count town-center == 1)
	(military-population >= 70)
	(goal attack-goal 0)
	(goal unit-goal cavalry-archer)
	(research-completed ri-thumb-ring)
	(strategic-number sn-current-age >= castle);high military
	(players-current-age every-enemy == castle-age); while enemy is in castle-age
=>
	(set-goal attack-goal 1)
)
#end-if 
(defrule
	(goal attack-goal 0)
	(population > max-civ-pop)
	(strategic-number sn-current-age >= ci-transit); advancing to or already in imperial age with nearlyfull pop
	(players-current-age every-enemy == castle-age); while enemy is in castle-age
	(strategic-number sn-resource-control < 2)
	(strategic-number sn-military-level >= 0)
=>
	(set-goal attack-goal 1); attack and try to hold him in castle age
)
(defrule
	(goal strategy-goal flush)
	(players-current-age every-enemy == feudal-age)
	(strategic-number sn-military-level >= 0)
	(research-completed ri-bodkin-arrow)
	(or
		(research-completed ri-crossbow)
		(not (goal ranged-unit-type-goal archer))
	)
	(or
		(unit-type-count militiaman-line <= 6)
		(research-completed ri-long-swordsman)
	)
=>
	(set-goal attack-goal 1)
)
(defrule
	(goal strategy-goal flush)
	(current-age == castle-age)
	(players-current-age every-enemy == feudal-age)
	(strategic-number sn-military-level >= 0)
	(nor (research-available ri-bodkin-arrow)
	(research-available ri-crossbow))
	(goal ranged-unit-type-goal archer)
	(military-population > 40)
=>
	(set-goal attack-goal 1)
)
(defrule
	(goal enemy-fortifications-goal 1)
	(strategic-number sn-trebuchet-count < 3)
	(or
		(or
			(and
				(unit-type-count 42 == 0); treb in shooting mode
				(strategic-number sn-minimum-boar-hunt-group-size != 5); so play aggressive with UP, if it dies we can still retreat
			)
			(or
				(unit-type-count male-gold-miner > 0)
				(unit-type-count female-gold-miner > 0)
			)
		)
		(strategic-number sn-trebuchet-count < 1)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(or
		(or
			(and 
				(players-current-age every-enemy == castle-age)
				(players-military-population every-enemy > 10)
			)
			(strategic-number sn-resource-control == 2)
		)
		(players-military-population every-enemy > 16)
	)
=>
	(set-goal attack-goal 0); better go castle age and attack then
)
(defrule
	(goal attack-goal 1)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(players-building-type-count every-enemy watch-tower > 0)
	(strategic-number sn-military-level < 3)
=>
	(set-goal attack-goal 0); better go castle age and attack then
)
(defrule
	(goal attack-goal 1)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(not (goal unit-goal militiaman-line))
	(goal enemy-goal eagle-warrior)
=>
	(set-goal attack-goal 0); better go castle age and attack then
)
(defrule
	(or
		(strategic-number sn-minimum-boar-hunt-group-size == 5); not in 1.0c
		(players-current-age any-enemy > feudal-age); or if enemy actually goes for knights.
	)
	(goal attack-goal 1)
	(or 
		(and
			(goal strategy-goal flush)
			(current-age == feudal-age)
		)
		(and
			(or
				(goal unit-goal eagle-warrior)
				(goal unit-goal archer)
			)
			(unit-type-count spearman-line < 12)
		)
	)
	(strategic-number sn-cavalry-threat >= 1); enemy cavalry found
	(unit-type-count spearman-line < 6); no anti cavalry
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(goal strategy-goal flush)
	(current-age == feudal-age)
	(or
		(players-unit-type-count any-enemy knight-line >= 8); better go castle age, upgrade to pikeman and attack again then.
		(goal forward-threat-goal 1); get rams instead of wasting units vs towers
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(goal strategy-goal flush)
	(current-age >= castle-age)
	(or
		(and 
			(unit-type-count spearman-line >= 6)
			(research-available ri-pikeman)
		)
		(and 
			(unit-type-count militiaman-line >= 12)
			(research-available ri-long-swordsman)
		)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(game-time < 1800)
	(goal monk-threat-goal 1)
	(unit-type-count eagle-warrior-line < 4)
	(unit-type-count scout-cavalry-line < 4)
	(nor 
		(research-completed ri-heresy)
		(goal unit-goal archer)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(or
		(or
			(goal unit-goal ss)
			(and
				(goal unit-goal archer)
				(strategic-number sn-cavalry-threat > 0)
			)
		)
		(or
			(goal unit-goal my-unique-unit-line)
			(goal unit-goal mix)
		)
	)
	(goal strategy-goal rush)
	(strategic-number sn-military-level < 3)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(not (research-completed ri-bodkin-arrow))
	(or
		(or
			(goal unit-goal ss)
			(goal unit-goal archer)
		)
		(or
			(and
				(goal unit-goal my-unique-unit-line)
				(unit-type-count ranged-units > 12)
			)
			(goal unit-goal mix)
		)
	)
	(goal strategy-goal rush)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(or
		(goal unit-goal ss)
		(goal unit-goal mix)
	)
	(or
		(goal enemy-goal ss)
		(unit-type-count skirmisher-line > 9)
	)
	(or
		(research-available ri-elite-skirmisher)
		(research-available ri-bodkin-arrow)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
;	(strategic-number sn-military-level < 3)
	(goal attack-goal 1)
	(or
		(strategic-number sn-resource-control == ri-elite-eagle)
		(or
			(goal strategy-goal fast-imp)
			(goal strategy-goal boom)
		)
	)
	(or
		(current-age < imperial-age)
		(current-age-time < 120)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(unit-type-count monk > 30)
	(or
		(current-age < imperial-age)
		(or
			(research-available ri-theocracy)
			(research-available ri-illumination)
		)
	)
	(strategic-number sn-military-level < 3)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(or
		(or
			(players-building-count every-enemy == 0); no attack when enemy is not yet found.
			(and
				(military-population < 13); low military pop and enemy tower 
				(players-building-type-count every-enemy watch-tower > 0); attacking causes vils to run over the map
			)
		)
		(or
			(and
				(strategic-number sn-resource-control == ri-pikeman)
				(research-available ri-pikeman)
			)
			(and
				(goal unit-goal eagle-warrior)				
				(research-available ri-chain-mail)
			)
		)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(goal attack-goal 1)
	(players-building-type-count every-enemy castle < 3)
	(or 
		(and 
			(unit-type-count battering-ram > 1)
			(military-population > 50)
		)
		(players-building-type-count any-enemy castle == 0)
	)
	(goal enemy-fortifications-goal -1)
=>
	(set-goal attack-goal 2)
)
#load-if-defined POST-IMPERIAL-AGE-START
(defrule
	(current-age == imperial-age)
	(population > seventy-five-percent-pop)
	(players-building-count any-enemy > 0)
	(unit-type-count paladin > 30)
	(game-time < 900)
=>
	(set-goal attack-goal 2)
)
#end-if
#load-if-defined DEFEND-WONDER
(defrule
	(current-age == imperial-age)
	(strategic-number sn-trebuchet-count > 0)
	(strategic-number sn-military-level > 0)
	(players-building-type-count any-enemy wonder > 0)
=>
	(set-goal attack-goal 2)
)
#end-if
#load-if-defined UP-AVAILABLE
(defrule
	(goal attack-goal 1)
	(unit-type-count battering-ram > 0)
	(players-building-type-count any-enemy castle == 1)
	(strategic-number sn-military-level > 1)
	(goal enemy-fortifications-goal -1)
=>
	(set-goal attack-goal 2)
)
#else
(defrule
	(strategic-number sn-maximum-town-size < 42)
	(enemy-buildings-in-town)
	(not (goal forward-threat-goal 1))
=>
	(set-strategic-number sn-maximum-hunt-drop-distance 0); disable hunting and prevent villagers to run into those towers
	(set-goal forward-threat-goal 1)
	(chat-to-player my-player-number "forward buildings detected")
)
(defrule
	(game-time < 1000)
	(goal attack-goal 0)
	(players-military-population every-enemy > 3)
	(strategic-number sn-military-level < 2)
	(unit-type-count scout-cavalry > 2)
	(strategic-number sn-maximum-town-size >= 40)
=>
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-player my-player-number "stop flush")
	(disable-self)
)
(defrule
	(goal strategy-goal flush)
	(goal attack-goal 0)
	(current-age == feudal-age)
	(strategic-number sn-military-level < 2)
	(or
		(players-current-age any-enemy >= castle-age)
		(strategic-number sn-military-level < 1)
	)
	(strategic-number sn-maximum-town-size >= 40)
=>
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-player my-player-number "stop flush")
)
(defrule
	(strategic-number sn-maximum-town-size < 38)
	(game-time < 1500)
	(players-building-type-count any-enemy watch-tower > 0)
	(goal forward-threat-goal -1)
=>
	(enable-timer reset-town-size-timer 1)
	(set-strategic-number sn-maximum-town-size 38)
	(disable-self); run this immediately once when for the first time an enemy tower was seen, and then only once every minute as it isn't good to loop this one.
)
(defrule
	(strategic-number sn-maximum-town-size >= 38)
	(not (enemy-buildings-in-town))
	(goal forward-threat-goal 1)
=>
	(set-goal forward-threat-goal -1)
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-player my-player-number "The forward threat has been eliminated")
)
(defrule
	(timer-triggered one-minute-timer)
	(game-time < 1500)
	(or
		(and
			(players-building-type-count any-enemy watch-tower > 0)
			(goal forward-threat-goal -1)
		)
		(and
			(players-building-type-count every-enemy watch-tower == 0)
			(goal forward-threat-goal 1)
		)
	)
	(not (goal increase-town-size-goal 2))
=>
	(enable-timer reset-town-size-timer 1)
	(set-strategic-number sn-maximum-town-size 38)	
)
(defrule
	(strategic-number sn-maximum-town-size >= 38)
	(not (enemy-buildings-in-town))
	(goal forward-threat-goal 1)
=>
	(set-goal forward-threat-goal -1)
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-player my-player-number "The forward threat has been eliminated")
)
#end-if
(defrule
	(goal attack-goal 1)
	(unit-type-count battering-ram-line > 0)
	(players-building-type-count every-enemy castle < 2)
	(strategic-number sn-military-level > 1)
	(or
		(unit-type-count knight-line > 5)
		(strategic-number sn-military-level > 2)
	)
	(nor 
		(goal enemy-fortifications-goal 1)
		(players-building-type-count any-enemy stone-wall > 10)
	)
=>
	(set-goal attack-goal 2)
)
(defrule
	(current-age == imperial-age)
	(population >= max-civ-pop)
	(players-building-count any-enemy > 0)
	(research-completed ri-elite-eagle)
	(players-current-age every-enemy <= castle-age)
	(goal enemy-fortifications-goal -1)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
=>
	(set-goal attack-goal 2)
)
(defrule
	(current-age == imperial-age)
	(current-age-time > 150)
	(population >= del-civ-pop)
	(players-building-count any-enemy > 0)
	(or
		(unit-type-count battering-ram-line >= 3)
		(strategic-number sn-trebuchet-count > 0)
	)
	(goal enemy-fortifications-goal -1)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
=>
	(set-goal attack-goal 2)
)
(defrule
	(current-age == imperial-age)
	(current-age-time > 150)
	(or
		(population >= del-civ-pop)
		(game-time < 1200)
	)
	(population >= del-civ-pop)
	(strategic-number sn-trebuchet-count > 0)
	(players-building-count any-enemy > 0)
	(or
		(strategic-number sn-trebuchet-count > 2)
		(and
			(unit-type-count male-gold-miner == 0)
			(unit-type-count female-gold-miner == 0)
		)
	)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
=>
	(set-goal attack-goal 2)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(population >= del-civ-pop)
		(game-time < 1200)
	)
	(population >= max-civ-pop)
	(goal enemy-fortifications-goal 1); enemy fortifications
	(or
		(and
			(strategic-number sn-trebuchet-count == 0); no trebs, but
			(and
				(building-type-count castle == 0); no castle
				(dropsite-min-distance stone > 10); no stone available
			)
		)
		(starting-age == post-imperial-age)
	)
	(unit-type-count battering-ram-line > 3); so still attack if we have rams to prevent idling
=>
	(set-goal attack-goal 2)
)
(defrule
	(not (goal attack-goal 0))
	(or
		(strategic-number sn-minimum-water-body-size-for-dock == water-islands); this is not the water map section here
		(and
			(or
				(dropsite-min-distance wood > 20)
				(cc-players-unit-type-count 0 tree < 20)
			)
			(or
				(population < del-civ-pop)
				(unit-type-count siege-units < 3)
			)
		)
	)
=>
	(set-goal attack-goal 0)
)
(defrule
	(or
		(taunt-detected any-ally 31); standard attack taunt
		(taunt-detected any-ally 100); ATE attack taunt
	)
	(or
		(strategic-number sn-resource-control == ri-pikeman); we want pikeman vs knights
		(and
			(strategic-number sn-cavalry-threat >= 1)
			(unit-type-count spearman-line < 10)
		)
	)
	(or
		(goal unit-goal archer)
		(or
			(goal unit-goal ss)
			(goal unit-goal my-unique-unit-line)
		)
	)
=>
	(acknowledge-taunt any-ally 31)
	(acknowledge-taunt any-ally 100)
	(chat-to-allies "2")
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-number-attack-groups > 0)
	(strategic-number sn-trebuchet-count > 0)
	(players-building-count any-enemy > 0)
	(nand
		(starting-age == post-imperial-age)
		(population >= max-civ-pop)
	)
=>
	(set-strategic-number sn-group-form-distance 2)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-target-evaluation-siege-weapon 500)
)
#else
(defrule
	(strategic-number sn-number-attack-groups > 0)
	(strategic-number sn-trebuchet-count > 0)
	(nand
		(strategic-number sn-disable-attack-groups == 1)
		(strategic-number sn-maximum-town-size > 40)
	)
=>
	(set-strategic-number sn-group-form-distance 2)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-target-evaluation-siege-weapon 500)
)
#end-if
(defrule
	(goal hostilities-goal 1); already attacking or town under attack
	(or
		(or
			(taunt-detected any-ally 31)
			(taunt-detected any-ally 100)
		)
		(or
			(taunt-detected any-ally 211)
			(taunt-detected any-ally 222)
		)
	)
=>
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-ally 100)
	(chat-to-allies-using-id 22118)
)
(defrule
	(timer-triggered attack-timer)
	(goal restart-attack-goal 1)
	(strategic-number sn-target-evaluation-ally-proximity == 32767)
=>
	(set-goal restart-attack-goal 0)
	(set-goal attack-goal 4)
)
(load-random + "The Horde\Userpatch")
#load-if-not-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(or
		(or
			(taunt-detected any-ally 31)
			(taunt-detected any-ally 100)
		)
		(or
			(taunt-detected any-ally 211)
			(taunt-detected any-ally 222)
		)
	)
	(warboat-count > 1)
=>
	(set-goal attack-goal 6)
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-ally 100)
	(chat-to-allies "1")
)
(defrule
	(strategic-number sn-number-attack-groups > 0)
	(or
		(and
			(strategic-number sn-minimum-attack-group-size < 2)
			(goal attack-goal 0); attack conditions false
		)
		(and
			(strategic-number sn-number-attack-groups == 197); aggressive defense
			(goal under-attack-goal 3); and not under attack anymore
		)
	)
=>
	(set-strategic-number sn-group-form-distance 2)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-target-evaluation-siege-weapon 500)
)
#end-if
(defrule
	(strategic-number sn-maximum-hunt-drop-distance > 0)
	(players-military-population any-enemy > 5); don't disable when boar hunting failed/ wolf attacked
	(or
		(unit-type-count 217 > 0); dead hunter
		(unit-type-count 227 > 0)
	)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance 0)
)
(defrule
	(or
		(taunt-detected any-ally 31)
		(taunt-detected any-ally 100)
	)
	(or
		(strategic-number sn-military-level < 0)
		(or
			(and
				(goal enemy-fortifications-goal 1)
				(strategic-number sn-trebuchet-count < 1)
			)
			(and
				(building-type-count stone-wall > 10)
				(unit-type-count siege-units < 1)
			)
		)
	)		
=>
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-ally 100)
	(chat-to-allies-using-id 22118)
)
(defrule
	(timer-triggered attack-timer)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-maximum-town-size >= 40)
	(population > eighty-five-percent-pop); keep attacking when pop his high
	(or
		(nand
			(goal enemy-fortifications-goal 1)
			(strategic-number sn-trebuchet-count < 1); except if the enemy has fortification and we don't have trebs
		)
		(and
			(starting-age == post-imperial-age)
			(unit-type-count siege-ram > 4)
		)
	)
=>
	(enable-timer attack-timer 30)
	(enable-timer reset-town-size-timer 32)
)
(defrule
	(strategic-number sn-group-form-distance == 3)
	(strategic-number sn-number-attack-groups > 0)
	(timer-triggered regroup-timer)
=>
	(set-strategic-number sn-group-form-distance 5)
	(set-strategic-number sn-number-attack-groups 198)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-maximum-attack-group-size 1)
	(set-strategic-number sn-sentry-distance 200)
	(set-strategic-number sn-target-evaluation-distance -100)
	(set-goal attack-status-goal start)
	(chat-to-player my-player-number "enemy activities detected - one man groups")
	(enable-timer regroup-timer 8)
)
(defrule
	(not (goal enemy-sighted-goal -1))
	(goal attack-status-goal start)
	(timer-triggered regroup-timer)
	(strategic-number sn-number-attack-groups > 0)
	(strategic-number sn-minimum-attack-group-size > 1)
=>
	(set-strategic-number sn-group-form-distance 3)
	(set-strategic-number sn-number-attack-groups 1); to indicate attack is still going on
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-enemy-sighted-response-distance 4)
	(set-strategic-number sn-sentry-distance 8)
	(enable-timer regroup-timer 1)
	(chat-to-player my-player-number "enemy activities detected - split attack groups")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
	(goal attack-goal 2)
	(timer-triggered attack-timer)
	(military-population > 10)
	(players-building-count any-enemy > 0)
	(not (town-under-attack))
	(or
		(player-in-game any-human-enemy)
		(or
			(goal unit-goal archer)
			(goal unit-goal gunpowder-units)
		)
	)
	(strategic-number sn-trebuchet-count == 0)
	(strategic-number sn-current-age >= castle)
=>
	(set-goal attack-goal 3)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
	(or
		(and
			(player-in-game any-ally)
			(current-age >= castle-age)
		)
		(death-match-game)
	)
	(players-building-count any-enemy > 0)
	(goal attack-goal 2)
	(timer-triggered attack-timer)
	(not (town-under-attack))
	(strategic-number sn-trebuchet-count == 0)
=>
	(set-goal attack-goal 3)
)

#load-if-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
	(strategic-number sn-trebuchet-count == 0)
	(players-building-count any-enemy > 0)
	(goal attack-goal 2)
	(timer-triggered attack-timer)
	(not (town-under-attack))
=>
	(set-goal attack-goal 3)
)
#end-if

; Basic Team Work
; First, sort out situations where helping allies would be a massacre for us.
; Then help ally if a minimum military is available and we're not attacked.
; Inform allies in case we can't meet the conditions to help them, so they have to fight on their own.

#load-if-not-defined UP-AVAILABLE
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(or
		(taunt-detected any-ally 222)
		(taunt-detected any-ally 211)
	)
	(players-building-count every-enemy == 0)
	(not (research-completed ri-cartography))
=>
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(set-strategic-number sn-number-explore-groups 3)
	(chat-to-allies-using-id 22118)
)
(defrule
	(or
		(taunt-detected any-ally 222)
		(taunt-detected any-ally 211)
	)
	(players-building-type-count any-enemy stone-wall > 10)
	(unit-type-count siege-units < 1)
	(strategic-number sn-military-level < 0)
=>
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(chat-to-allies-using-id 22118)
)
(defrule
	(or
		(taunt-detected any-ally 222)
		(taunt-detected any-ally 211)
	)
	(or
		(military-population < 20)
		(players-military-population this-any-ally > 20)
	)
	(nand
		(unit-type-count knight-line > 6)
		(game-time < 1800)
	)
	(strategic-number sn-military-level < 0)
=>
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(chat-to-allies-using-id 22118)
)
(defrule
	(current-age >= castle-age)
	(goal hostilities-goal 0)
	(military-population >= 10)
	(or
		(taunt-detected any-ally 211)
		(taunt-detected any-ally 222)
	)
=>
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(set-strategic-number sn-target-evaluation-ally-proximity 32767)
	(set-strategic-number sn-sentry-distance 200)
	(chat-to-allies "1")
	(set-goal attack-goal 4)
)
(defrule
	(current-age >= castle-age)
	(goal hostilities-goal 0)
	(or
		(military-population >= 20)
		(and
			(players-population every-enemy < 100)
			(military-population >= 10)
		)
	)
	(or
		(taunt-detected any-ally 31)
		(taunt-detected any-ally 100)
	)
=>
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-ally 100)
	(set-strategic-number sn-target-evaluation-ally-proximity 32767)
	(chat-to-allies "1")
	(set-goal attack-goal 4)
)
; #else => moved to Userpatch.per
#end-if
(defrule
	(or
		(or
			(taunt-detected any-ally 222); if we could help, this taunt would have been acknowledeged by now
			(taunt-detected any-ally 211)
		)
		(or
			(taunt-detected any-ally 31)
			(taunt-detected any-ally 100)
		)
	)
=>	
	(acknowledge-taunt this-any-ally 222)
	(acknowledge-taunt this-any-ally 211)
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-ally 100)
	(set-strategic-number sn-target-evaluation-ally-proximity 0)
	(chat-to-allies-using-id 22118)
)
(defrule
	(goal attack-goal 3)
=>
	(chat-to-allies "31")
	(chat-to-allies-using-id 22116)
	(set-strategic-number sn-target-evaluation-ally-proximity 0)
	(set-goal attack-goal 4)
)
(defrule
	(goal attack-goal 4)
	(or
		(goal unit-goal monk)
		(strategic-number sn-trebuchet-count > 0)
	)
	(players-building-count any-enemy > 0)
	(goal under-attack-goal 0)
=>
	(set-goal attack-goal 0)
	(enable-timer attack-timer 60)
	(set-strategic-number sn-maximum-town-size 40)
	(enable-timer reset-town-size-timer 62)
	(chat-local-to-self "Start TSA")
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal attack-goal 4)
	(or
		(players-building-type-count any-enemy stone-wall-line > 0)
		(players-building-type-count any-enemy palisade-wall > 0)
	)
	(players-building-count any-enemy > 0)
	(goal under-attack-goal 0)
=>
	(set-goal attack-goal 0)
	(enable-timer attack-timer 60)
	(set-strategic-number sn-maximum-town-size 40)
	(enable-timer reset-town-size-timer 62)
	(chat-local-to-self "Start TSA")
)
(defrule
	(goal unit-goal default-ranged)
	(unit-type-count revealer > 0)
	(goal attack-goal 4)
	(strategic-number sn-trebuchet-count == 0)
	(goal under-attack-goal 0)
=>
	(set-goal attack-goal 0)
	(set-goal attack-status-goal start)
	(chat-to-player my-player-number "Starting attack - one man groups!")
	(enable-timer attack-timer 40)
	(set-strategic-number sn-number-attack-groups 198)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-maximum-attack-group-size 1)
	(set-strategic-number sn-group-form-distance 5)
)
(defrule
	(not (enemy-buildings-in-town))
	(population > 180)
	(strategic-number sn-maximum-town-size == 76)
=>
	(set-strategic-number sn-maximum-town-size 90))
(defrule
	(not (enemy-buildings-in-town))
	(population > 180)
	(strategic-number sn-maximum-town-size == 61)
=>
	(set-strategic-number sn-maximum-town-size 72))
(defrule
	(not (enemy-buildings-in-town))
	(population > 180)
	(strategic-number sn-maximum-town-size == 40)
=>
	(set-strategic-number sn-maximum-town-size 58))
(defrule
	(or
		(goal unit-goal archer)
		(player-in-game any-human-enemy)
	)
	(strategic-number sn-trebuchet-count == 0)
	(goal enemy-sighted-goal -1)
	(goal attack-goal 4)
=>
	(set-goal attack-goal 0)
	(set-goal attack-status-goal start)
	(chat-to-player my-player-number "Starting attack - Large Groups!")
	(enable-timer attack-timer 40)
	(set-strategic-number sn-number-attack-groups 198)
	(set-strategic-number sn-minimum-attack-group-size 48)
	(set-strategic-number sn-maximum-attack-group-size 48)
	(set-strategic-number sn-group-form-distance 30)
	(set-strategic-number sn-attack-group-gather-spacing 3)
)
(defrule
	(goal attack-goal 4)
	(strategic-number sn-trebuchet-count == 0)
=>
	(set-goal attack-goal 0)
	(set-goal attack-status-goal start)
	(chat-to-player my-player-number "Starting attack - one man groups!")
	(enable-timer attack-timer 40)
	(enable-timer regroup-timer 8)
	(set-strategic-number sn-number-attack-groups 198)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-maximum-attack-group-size 1)
	(set-strategic-number sn-group-form-distance 5)
)
(defrule
	(strategic-number sn-maximum-town-size == 200)
	(not (enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size >= 40)
=>
	(set-strategic-number sn-maximum-town-size 254)
	(set-strategic-number sn-enemy-sighted-response-distance 24)
)
(defrule
	(strategic-number sn-maximum-town-size == 180)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 200))
(defrule
	(strategic-number sn-maximum-town-size == 160)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 180))
(defrule
	(strategic-number sn-maximum-town-size == 140)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 160))
(defrule
	(strategic-number sn-maximum-town-size == 120)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 140))
(defrule
	(strategic-number sn-maximum-town-size == 100)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 120))
(defrule
	(strategic-number sn-maximum-town-size == 90)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 100))
(defrule
	(strategic-number sn-maximum-town-size == 80)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 90))
(defrule
	(strategic-number sn-maximum-town-size == 76)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 80))
(defrule
	(strategic-number sn-maximum-town-size == 72)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 76))
(defrule
	(strategic-number sn-maximum-town-size == 70)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 72))
(defrule
	(strategic-number sn-maximum-town-size == 68)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 70))
(defrule
	(strategic-number sn-maximum-town-size == 66)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 68))
(defrule
	(strategic-number sn-maximum-town-size == 64)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 66))
(defrule
	(strategic-number sn-maximum-town-size == 61)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 64))
(defrule
	(strategic-number sn-maximum-town-size == 58)
	(not (enemy-buildings-in-town))
=>
	(set-strategic-number sn-maximum-town-size 61))
(defrule
	(not (enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size == 55)
=>
	(set-strategic-number sn-maximum-town-size 58))
(defrule
	(not (enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size == 50)
=>
	(set-strategic-number sn-maximum-town-size 55))
(defrule
	(not (enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size == 45)
=>
	(set-strategic-number sn-maximum-town-size 50))
(defrule
	(not (enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size == 40)
=>
	(set-strategic-number sn-maximum-town-size 45))
(defrule
	(strategic-number sn-number-attack-groups == 0)
	(timer-triggered attack-timer)
	(goal attack-goal 2)
	(not (town-under-attack))
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
=>
	(set-goal attack-goal 0)
	(enable-timer attack-timer 60)
	(set-strategic-number sn-maximum-town-size 40)
	(enable-timer reset-town-size-timer 62)
	(chat-to-allies "31")
	(chat-to-allies-using-id 22116)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(strategic-number sn-maximum-town-size > 40)
	(unit-type-count revealer > 0)
	(enemy-buildings-in-town)
	(players-military-population every-enemy < 10)
	(players-building-type-count every-enemy watch-tower == 0)
	(strategic-number sn-trebuchet-count == 0)
	(population < eighty-five-percent-pop)
=>
	(set-strategic-number sn-maximum-town-size 40)
	(chat-to-player my-player-number "restart TSA at 40")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands); not on islands
	(population > seventy-five-percent-pop)
	(goal under-attack-goal 1)
	(timer-triggered attack-timer)
	(not (player-valid 3))
=>
	(enable-timer attack-timer 15)
	(chat-to-all "903 Grr...")
	(set-strategic-number sn-special-attack-type2 -1)
	(set-strategic-number sn-target-evaluation-distance -1000)
	(set-strategic-number sn-number-attack-groups 197)
	(set-strategic-number sn-enemy-sighted-response-distance 24)
	(set-strategic-number sn-sentry-distance 8)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-maximum-attack-group-size 1)
	(set-strategic-number sn-group-form-distance 5)
)
#end-if
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed); not on islands
	(strategic-number sn-military-level < 0)
	(population < eighty-five-percent-pop)
=>
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-enemy-sighted-response-distance 0)
	(set-strategic-number sn-sentry-distance 1)
)
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal under-attack-goal 1)
	(building-type-count town-center > 1)
	(strategic-number sn-maximum-town-size < 20); fix ungarrison villagers while attacked bug in 1.0c
	(players-building-type-count every-enemy watch-tower < 1); avoid TLS
=>
	(set-strategic-number sn-maximum-town-size 20)
)
#end-if

; NAVY ATTACKS
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(warboat-count > 4)
	(or
		(game-time < 1260)
		(warboat-count > 9)
	)
	(or
		(game-time < 1620)
		(warboat-count > 15)
	)
	(or
		(game-time < 2000)
		(warboat-count > 21)
	)
	(or
		(game-time < 2700)
		(strategic-number sn-minimum-water-body-size-for-dock == water-mixed); not likely to get more ships on mixed maps
	)
=>
	(set-goal attack-goal 6)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-islands)
	(game-time > 2100)
	(warboat-count > 40)
	(or
		(or
			(players-unit-type-count any-enemy galley-line > 12); eliminate reamaining ships
			(players-unit-type-count any-enemy fire-ship-line > 12)
		)
		(or
			(unit-type-count cannon-galleon-line > 7); or bring cannon-galleons against castles/tower
			(not (research-available ri-cannon-galleon))
		)
	)
=>
	(set-goal attack-goal 6)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == water-islands)
	(goal attack-goal 6)
	(timer-triggered attack-timer)
	(players-unit-type-count any-enemy galley-line < 15)
	(players-unit-type-count any-enemy fire-ship-line < 15)
	(unit-type-count transport-ship > 0)
	(soldier-count >= 20)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-group-form-distance 30)
	(set-strategic-number sn-attack-group-gather-spacing 30)
	(attack-now)
	(enable-timer attack-timer 300)
	(set-strategic-number sn-special-attack-type2 -1)
)
(load-random + "The Horde\Navy Micro")
#load-if-not-defined UP-AVAILABLE
(defrule
	(goal attack-goal 6)
	(players-building-count any-enemy > 0)
=>
	(set-strategic-number sn-minimum-boat-attack-group-size 1)
	(set-strategic-number sn-maximum-boat-attack-group-size 1)
	(set-strategic-number sn-number-boat-attack-groups 200)
	(set-strategic-number sn-target-evaluation-distance -100)
)
#end-if
(defrule
	(strategic-number sn-number-boat-attack-groups > 0)
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(not (goal attack-goal 6))
=>
	(set-strategic-number sn-minimum-boat-attack-group-size 0)
	(set-strategic-number sn-maximum-boat-attack-group-size 0)
	(set-strategic-number sn-number-boat-attack-groups 0)
)
(defrule
	(current-age >= castle-age)
	(unit-type-count fire-ship-line > 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 100); dont back up with fireships
)

;spread military to prevent blocking
(defrule
	(goal spread-military-goal 0)
	(timer-triggered spread-military-timer)
=>
	(disable-timer spread-military-timer)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
	(set-goal spread-military-goal 1)
	(enable-timer spread-military-timer 3));5
(defrule
	(goal spread-military-goal 1)
	(timer-triggered spread-military-timer)
=>
	(disable-timer spread-military-timer)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-goal spread-military-goal 0); use a goal because sn-task-ungrouped-soldiers is always 1 when used as a fact
	(enable-timer spread-military-timer spread-interval)
)

; check if out town under attack and not an annoying wolf
(defrule
	(goal under-attack-goal 0)
	(strategic-number sn-maximum-town-size < 40)
	(players-military-population any-enemy > 1)
	(town-under-attack)
=>
	(set-goal under-attack-goal 2)
	(enable-timer under-attack-timer 30)
)
(defrule
	(town-under-attack)
	(not (timer-triggered under-attack-timer))
	(goal under-attack-goal 3)
=>
	(set-strategic-number sn-target-evaluation-ally-proximity 0)
	(set-goal under-attack-goal 1)
	(chat-local-to-self "attack was not over yet")
	(set-strategic-number sn-enemy-sighted-response-distance 4)
)
(defrule
	(timer-triggered under-attack-timer)
	(town-under-attack)
=>
	(set-strategic-number sn-target-evaluation-ally-proximity 0)
	(disable-timer under-attack-timer)
	(enable-timer under-attack-timer 20)
	(set-goal under-attack-goal 1)
	(chat-to-allies "222")
	(chat-to-player-using-id every-ally 22115)
	(set-goal under-attack-goal 1)
	(set-strategic-number sn-enemy-sighted-response-distance 4)
)
(defrule
	(not (town-under-attack))
	(goal under-attack-goal 1)
=>
	(enable-timer under-attack-timer 60)
	(set-goal under-attack-goal 3)
)
(defrule
	(or
		(strategic-number sn-maximum-town-size >= 40)
		(or
			(and
				(timer-triggered under-attack-timer)
				(goal under-attack-goal 3)
			)
			(and
				(not (town-under-attack))
				(goal under-attack-goal 2)
			)
		)
	)
=>
	(disable-timer under-attack-timer)
	(set-goal under-attack-goal 0)
)

; ********** INCREASE TS CODE **********

#load-if-defined DEATH-MATCH
(defrule
	(not (goal increase-town-size-goal 0))
	(or
		(and
			(current-age == castle-age)
			(current-age-time < 30)
		)
		(or
			(current-age < castle-age)
			(starting-age == post-imperial-age)
		)
	)
=>
	(set-goal increase-town-size-goal 0); don't increase TS too early in DM, as there might be more building rules than available villagers!
)
#else
; in PIDM increase TS according to game time, everything else will be too slow
;These rules increase town-size by population as our TS increase system doesn't cover houses and farms
(defrule
	(or
		(and
			(strategic-number sn-maximum-town-size < pop60-town-size)
			(or
				(or
					(population > 60)
					(housing-headroom < 5)
				)
				(and
					(strategic-number sn-military-level >= 0)
					(building-type-count town-center > 1)
				)
			)
		)
		(timer-triggered reset-town-size-timer)
	)
	(population >= 40)
	(population <= 90)
=>
	(disable-timer reset-town-size-timer)
	(set-strategic-number sn-maximum-town-size pop60-town-size)
)
(defrule
	(or
		(population > 90)
		(and
			(strategic-number sn-military-level >= 0)
			(building-type-count town-center > 2)
		)
	)
	(or
		(strategic-number sn-maximum-town-size < pop90-town-size)
		(timer-triggered reset-town-size-timer)
	)
=>
	(disable-timer reset-town-size-timer)
	(set-strategic-number sn-maximum-town-size pop90-town-size)
)
(defrule
	(or
		(population > 120)
		(and
			(strategic-number sn-military-level >= 0)
			(building-type-count town-center > 3)
		)
	)
	(or
		(strategic-number sn-maximum-town-size < pop120-town-size)
		(timer-triggered reset-town-size-timer)
	)
=>
	(disable-timer reset-town-size-timer)
	(set-strategic-number sn-maximum-town-size pop120-town-size)
)
#load-if-not-defined UP-MICHI-STYLE
; Compact TS and prevent enemy lure us when under outnumbered.
(defrule
	(building-type-count town-center > 0)
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(population < 60)
	(goal housing-goal 0)
	(strategic-number sn-military-level < 0)
	(military-population < 15)
	(strategic-number sn-maximum-town-size < 40)
	(strategic-number sn-maximum-town-size > 7)
	(or
		(building-type-count town-center < 2); bug that causes villagers to ungarrison if the TC is out town size
		(strategic-number sn-minimum-boar-hunt-group-size != 5); but it's fixed in UP (non UP this SN will stay at 5)
	)
	(goal increase-town-size-goal 0); otherwise we can't build anything and lose as well.
=>
	(set-strategic-number sn-maximum-town-size 7)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-enemy-sighted-response-distance 0)
	(chat-to-player my-player-number "outnumbered - maximum TS = 7")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(current-age == feudal-age)
	(goal strategy-goal flush)
	(or
		(goal enemy-goal flush)
		(strategic-number sn-archer-threat > 1)
	)
	(players-current-age every-enemy == castle-age)
	(goal housing-goal 0)
	(strategic-number sn-maximum-town-size > 7)
	(goal increase-town-size-goal 0); otherwise we can't build anything and lose as well.
=>
	(set-strategic-number sn-maximum-town-size 7)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-enemy-sighted-response-distance 0)
	(chat-to-player my-player-number "enemy castled faster, stay defenseive - maximum TS = 7")
)
#end-if
(defrule
	(or
		(or
			(strategic-number sn-military-level >= 0)
			(population >= eighty-five-percent-pop)
		)
		(or
			(unit-type-count 54 > 0); if fortifications are shooting, join fight with units
			(or
				(unit-type-count 504 > 0)
				(unit-type-count 379 > 0)
			)
		)
	)
	(strategic-number sn-enemy-sighted-response-distance < 12)
=>
	(set-strategic-number sn-enemy-sighted-response-distance 12)
	(set-strategic-number sn-sentry-distance 4)
	(set-strategic-number sn-target-evaluation-distance evaluation-distance)
)
(defrule
	(or
		(or
			(goal housing-goal 1)
			(not (goal increase-town-size-goal 0)); need to build something
		)
		(or
			(strategic-number sn-military-level >= 0); military situation normalized
			(military-population >= 20)
		)
	)
	(strategic-number sn-maximum-town-size < 8)
=>
	(set-strategic-number sn-maximum-town-size 12); make room for buildings
)
(defrule
	(strategic-number sn-maximum-town-size == additional-town-center-distance)
	(building-type-count-total town-center > 1)
=>
	(set-strategic-number sn-maximum-town-size additional-town-center-placed-distance)
	(disable-self)
)
(defrule
	(current-age == castle-age)
	(goal increase-town-size-goal town-center); try to build TC farther away to have more rooms for farming
	(strategic-number sn-maximum-town-size < additional-town-center-distance)
	(or
		(building-type-count-total monastery > 0); build the monastery close as it will be placed instead of the TC usually
		(players-building-type-count any-ally monastery > 0)
	)
	(not (goal strategy-goal boom)); build closer when booming, because we want additional villagers to help as builder.
	(can-afford-building town-center)
=>
	(set-strategic-number sn-maximum-town-size additional-town-center-distance)
)
#end-if
(defrule
	(game-time > 750); not when rushed very early in DM
	(building-type-count castle > 0)
	(or
		(unit-type-count 379 > 0); castle arrow
		(unit-type-count 412 > 0); castle arrow w/ chemistry)
	)
	(strategic-number sn-maximum-town-size < aggressive-defend-town-size)
=>
	(set-strategic-number sn-gather-defense-units 0)
	(set-strategic-number sn-maximum-town-size aggressive-defend-town-size)
)
(defrule
	(strategic-number sn-maximum-town-size < 40)
	(goal increase-town-size-goal 2)
=>
	(set-goal increase-town-size-goal 0); building already placed, no need to increase TS
	(disable-timer increase-town-size-timer)	
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 10)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 12)
	(chat-to-player my-player-number "maximum town-size = 12")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 12)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 14)
	(chat-to-player my-player-number "maximum town-size = 14")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 14)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 16)
	(chat-to-player my-player-number "maximum town-size = 16")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 16)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 18)
	(chat-to-player my-player-number "maximum town-size = 18")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 18)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 20)
	(chat-to-player my-player-number "maximum town-size = 20")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 20)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(set-goal increase-town-size-goal 0)
	(enable-timer increase-town-size-timer 3)
	(set-strategic-number sn-maximum-town-size 22)
	(chat-to-player my-player-number "maximum town-size = 22")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 22)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(set-goal increase-town-size-goal 0)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 24)
	(chat-to-player my-player-number "maximum town-size = 24")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 24)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(set-goal increase-town-size-goal 0)
	(enable-timer increase-town-size-timer 3)
	(set-strategic-number sn-maximum-town-size 26)
	(chat-to-player my-player-number "maximum town-size = 26")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 26)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 28)
	(chat-to-player my-player-number "maximum town-size = 28")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 28)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 30)
	(chat-to-player my-player-number "maximum town-size = 30")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 30)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 32)
	(chat-to-player my-player-number "maximum town-size = 32")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 32)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 34)
	(chat-to-player my-player-number "maximum town-size = 34")
)
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 34)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer increase-town-size-timer 3)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 39)
	(chat-to-player my-player-number "maximum town-size = 39")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= water-mixed)
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 39)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer reset-town-size-timer 5)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 59)
	(chat-to-player my-player-number "maximum town-size = 59")
)
#load-if-defined UP-MICHI-STYLE
(defrule
	(timer-triggered increase-town-size-timer)
	(strategic-number sn-maximum-town-size == 39)
	(not (goal increase-town-size-goal 0))
=>
	(disable-timer increase-town-size-timer)
	(enable-timer reset-town-size-timer 5)
	(set-goal increase-town-size-goal 0)
	(set-strategic-number sn-maximum-town-size 59)
	(chat-to-player my-player-number "maximum town-size = 59")
)
#end-if
(defrule
	(building-type-count-total town-center == 0)
=>
	(set-strategic-number sn-camp-max-distance 255)
	(set-strategic-number sn-maximum-town-size 255); entire map viable to place TC
	(set-strategic-number sn-mill-max-distance 255)
	(set-strategic-number sn-maximum-food-drop-distance 30)
	(set-strategic-number sn-wood-gatherer-percentage 100)
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-escrow-percentage wood 100)
	(set-goal escrow-purpose-goal town-center)
)
(defrule
	(game-time > 32)
	(strategic-number sn-current-age == dark)
	(strategic-number sn-percent-civilian-explorers == 0)
	(building-type-count-total town-center == 0)
	(wood-amount > 330)
	(stone-amount >= 100)
=>
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-minimum-civilian-explorers 13)
	(set-strategic-number sn-maximum-wood-drop-distance 0)
	(chat-to-player my-player-number "nomad map TC placement failure")
)
(defrule
	(game-time > nomad-build-delay-time)
	(can-build-with-escrow town-center)
	(building-type-count town-center == 0)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build town-center)
	(set-strategic-number sn-mill-max-distance 31)
	(set-strategic-number sn-food-gatherer-percentage 94)
	(set-strategic-number sn-wood-gatherer-percentage 6)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-maximum-wood-drop-distance 25)
	(set-strategic-number sn-minimum-civilian-explorers 0)
)
(defrule
	(goal escrow-purpose-goal town-center)
	(building-type-count-total town-center > 0)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal escrow-purpose-goal 0)
	(set-strategic-number sn-camp-max-distance 24)
)
(defrule
	(game-time > nomad-build-delay-time)
	(resource-found wood)
	(not (can-afford-building town-center))
	(building-type-count-total town-center == 0)
	(or
		(building-type-count-total lumber-camp == 0)
		(dropsite-min-distance wood > 10)
	)
	(can-build lumber-camp)
=>
	(build lumber-camp)
	(enable-timer civ-explore-timer 45)
	(set-strategic-number sn-maximum-wood-drop-distance -1)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-percent-civilian-builders 100)
	(set-strategic-number sn-percent-civilian-explorers 0)
)
(load-random + "The Horde\Userpatch2")

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(goal increase-town-size-goal 2); building placed
	(strategic-number sn-maximum-town-size >= 40); TSA in action
=>
	(disable-timer increase-town-size-timer)
	(set-strategic-number sn-maximum-town-size 12); build close
	(set-goal increase-town-size-goal 0)
	(enable-timer attack-timer 1); re-enable TSA immediately
	(set-goal restart-attack-goal 1)
)
(defrule
	(goal restart-attack-goal 1)
	(strategic-number sn-target-evaluation-ally-proximity < 32767)
=>
	(set-goal restart-attack-goal 0)
)
#load-if-not-defined DEATH-MATCH
#load-if-not-defined WONDER-RACE
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined NOMAD-MAP
#load-if-defined UP-AVAILABLE
#load-if-not-defined UP-2-PLAYER-GAME
#load-if-defined UP-POCKET-POSITION
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-islands)
	(game-time > 10)
=>
	(set-goal position-goal pocket)
	(set-goal strategy-goal pocket-strategy)
	(set-goal unit-goal pocket-unit)
	(set-goal control-goal 0)
	(chat-to-player my-player-number "I'm pocket")(disable-self))
#else
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock < water-mixed)
	(game-time > 10)
=>
	(set-goal position-goal flank)
	(chat-to-player my-player-number "I'm flank")(disable-self))
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#else
#load-if-not-defined UP-2-PLAYER-GAME
#load-if-defined UP-POCKET-POSITION
(defrule
	(game-time > 10)
=>
	(set-goal position-goal pocket)
	(chat-to-player my-player-number "I'm pocket")(disable-self))
#else
(defrule
	(game-time > 10)
=>
	(set-goal position-goal flank)
	(chat-to-player my-player-number "I'm flank")(disable-self))
#end-if
#end-if
(load "The Horde\Deathmatch")
#end-if
#load-if-not-defined TEAMS-LOCKED
(defrule
	(not (stance-toward 1 ally))
	(or
		(player-resigned 1)
		(not (player-in-game 1))
	)
	(players-military-population 1 < 2)
	(players-building-type-count 1 castle < 1)
	(players-building-type-count 1 watch-tower < 1)
	(players-building-type-count 1 bombard-tower < 1)
	(players-unit-type-count 1 monk < 1)
=>
	(set-stance 1 ally)
)
(defrule
	(not (stance-toward 2 ally))
	(or
		(player-resigned 2)
		(not (player-in-game 2))
	)
	(players-military-population 2 < 2)
	(players-building-type-count 2 castle < 1)
	(players-building-type-count 2 watch-tower < 1)
	(players-building-type-count 2 bombard-tower < 1)
	(players-unit-type-count 2 monk < 1)
=>
	(set-stance 2 ally)
)
(defrule
	(not (stance-toward 3 ally))
	(or
		(player-resigned 3)
		(not (player-in-game 3))
	)
	(players-military-population 3 < 2)
	(players-building-type-count 3 castle < 1)
	(players-building-type-count 3 watch-tower < 1)
	(players-building-type-count 3 bombard-tower < 1)
	(players-unit-type-count 3 monk < 1)
=>
	(set-stance 3 ally)
)
(defrule
	(not (stance-toward 4 ally))
	(or
		(player-resigned 4)
		(not (player-in-game 4))
	)
	(players-military-population 4 < 2)
	(players-building-type-count 4 castle < 1)
	(players-building-type-count 4 watch-tower < 1)
	(players-building-type-count 4 bombard-tower < 1)
	(players-unit-type-count 4 monk < 1)
=>
	(set-stance 4 ally)
)
(defrule
	(not (stance-toward 5 ally))
	(or
		(player-resigned 5)
		(not (player-in-game 5))
	)
	(players-military-population 5 < 2)
	(players-building-type-count 5 castle < 1)
	(players-building-type-count 5 watch-tower < 1)
	(players-building-type-count 5 bombard-tower < 1)
	(players-unit-type-count 5 monk < 1)
=>
	(set-stance 5 ally)
)
(defrule
	(not (stance-toward 6 ally))
	(or
		(player-resigned 6)
		(not (player-in-game 6))
	)
	(players-military-population 6 < 2)
	(players-building-type-count 6 castle < 1)
	(players-building-type-count 6 watch-tower < 1)
	(players-building-type-count 6 bombard-tower < 1)
	(players-unit-type-count 6 monk < 1)
=>
	(set-stance 6 ally)
)
(defrule
	(not (stance-toward 7 ally))
	(or
		(player-resigned 7)
		(not (player-in-game 7))
	)
	(players-military-population 7 < 2)
	(players-building-type-count 7 castle < 1)
	(players-building-type-count 7 watch-tower < 1)
	(players-building-type-count 7 bombard-tower < 1)
	(players-unit-type-count 7 monk < 1)
=>
	(set-stance 7 ally)
)
(defrule
	(not (stance-toward 8 ally))
	(or
		(player-resigned 8)
		(not (player-in-game 8))
	)
	(players-military-population 8 < 2)
	(players-building-type-count 8 castle < 1)
	(players-building-type-count 8 watch-tower < 1)
	(players-building-type-count 8 bombard-tower < 1)
	(players-unit-type-count 8 monk < 1)
=>
	(set-stance 8 ally)
)
(defrule
	(or
		(players-stance any-human-ally neutral)
		(players-stance any-human-ally enemy)
	)
=>
	(chat-to-player-using-id this-any-human-ally 22102)
	(set-stance this-any-human-ally enemy)
)
#end-if
#load-if-not-defined DEATH-MATCH
(load-random + "The Horde\Boar Hunting")
#end-if
(load "The Horde\test")
#load-if-defined DIFFICULTY-HARDEST
#load-if-not-defined DEATH-MATCH
#load-if-not-defined DEFEND-WONDER
(defrule
	(current-age >= dark-age)
=>
	(cc-add-resource gold -300)
	(cc-add-resource stone -300)
	(disable-self)
)
(defrule
	(starting-age == dark-age)
	(current-age >= feudal-age)
	(goal strategy-goal flush)
=>
	(cc-add-resource food -500);prevent flush from trying to jump to castle age immediately
	(disable-self)
)
(defrule
	(current-age >= feudal-age)
=>
	(cc-add-resource wood -400)
	(cc-add-resource gold -500)
	(cc-add-resource stone -500)
	(disable-self)
)
(defrule	
	(or
		(unit-type-count-total 219 >= 1)
		(unit-type-count-total 228 >= 1); dead lumberjacks
	)
=>
	(cc-add-resource wood 200)
	(disable-self)
)
(defrule
	(current-age >= castle-age)
=>
	(cc-add-resource gold -500)
	(cc-add-resource stone -500)
	(disable-self)
)
(defrule
	(timer-triggered one-minute-timer)
	(civilian-population > 20)
	(goal strategy-goal flush)
	(current-age >= feudal-age)
	(current-age-time > 120)
	(game-time < 1800)
=>
	(cc-add-resource food 100)
)
#load-if-defined DARK-AGE-START
(defrule
	(cc-players-building-type-count any-human barracks > 0)
	(game-time < 490)
	(can-build barracks)
=>
	(build barracks)
)
(defrule
	(cc-players-building-type-count any-human barracks > 0)
	(players-current-age every-enemy == dark-age)
	(players-military-population any-enemy > 1)
	(game-time < 600)
	(unit-type-count-total militiaman-line < 4)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
#end-if
#end-if
#end-if
#else
#load-if-not-defined DIFFICULTY-HARD
#load-if-not-defined DEATH-MATCH
(defrule
	(game-time < 600)
	(unit-type-count villager < 17)
	(players-civilian-population every-human > 19)
	(player-in-game any-human)
=>
	(chat-to-all "Looks like you're an experienced player")
	(chat-to-all "Please restart the game on hard difficulty")
	(disable-self)
)
#end-if
(defrule
	(population < twenty-five-percent-pop)
	(players-population every-ally < twenty-five-percent-pop)
	(players-population any-human-enemy > eighty-five-percent-pop)
=>
	(chat-to-enemies "Well played! You're prepared to play on a higher difficulty.")
	(resign)
)
#end-if
#end-if
(defrule
	(unit-type-count-total villager == 0)
	(or
		(and
			(food-amount < 50)
			(not (player-in-game any-ally))
		)
		(building-type-count town-center == 0)
	)
	(military-population < 10)
=>
	(tribute-to-player any-ally wood 100000)
	(tribute-to-player any-ally food 100000)
	(tribute-to-player any-ally gold 100000)
	(tribute-to-player any-ally stone 100000)
	(resign)
)
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
#load-if-not-defined UP-MULTIPLAYER-GAME
(defrule
	(goal ffa-game-goal -1)
	(population < fourty-percent-pop)
	(players-population every-ally < fourty-percent-pop)
	(or
		(player-resigned any-ally)
		(and
			(population < twenty-five-percent-pop)
			(and
				(players-population every-ally < twenty-five-percent-pop)
				(players-population any-enemy > max-civ-pop)
			)
		)
	)
=>
	(chat-to-player-using-id every-enemy 22300)
	(resign)
)
#else
(defrule
	(goal ffa-game-goal -1)
	(population < fourty-percent-pop)
	(players-population every-ally < fourty-percent-pop)
	(or
		(player-resigned any-ally)
		(and
			(population < twenty-five-percent-pop)
			(and
				(players-population every-ally < twenty-five-percent-pop)
				(players-population any-enemy > max-civ-pop)
			)
		)
	)
=>
	(chat-to-all "gg")
	(resign)
)
#end-if
#end-if
#end-if
#end-if
(defrule
	(timer-triggered one-minute-timer)
=>
	(disable-timer one-minute-timer)
	(enable-timer one-minute-timer 60)
)